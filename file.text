PHPUnit 6.2.4 by Sebastian Bergmann and contributors.

Illuminate\Foundation\Testing\TestResponse {#738
  +baseResponse: Illuminate\Http\Response {#1043
    +headers: Symfony\Component\HttpFoundation\ResponseHeaderBag {#1045
      #computedCacheControl: array:2 [
        "no-cache" => true
        "private" => true
      ]
      #cookies: array:1 [
        "" => array:1 [
          "/" => array:1 [
            "XSRF-TOKEN" => Symfony\Component\HttpFoundation\Cookie {#790
              #name: "XSRF-TOKEN"
              #value: "eyJpdiI6ImVsQkNqVE14XC9xSHhiVjN1VkNxUEN3PT0iLCJ2YWx1ZSI6ImRCSHdCSEd6a1FZb0l5dGV3bHpUNVB6bFUyRVFVdUJqU3QyRjB4XC80VVRTWWlGSytzQVcyZG5UMHB5VWsrQTRxQ2FnajZJeE1cLzA4eXhwVVwvb0p3WllnPT0iLCJtYWMiOiIxNzA5NTJhNGM0NzFlMjZmYzMyNTI2NzI0YzcwZGVhNzZlZTg3YTAwZGQ5ZWI2NGJlNmYwNjQxYTc4MjRiMDlkIn0="
              #domain: null
              #expire: 1510995718
              #path: "/"
              #secure: false
              #httpOnly: false
              -raw: false
              -sameSite: null
            }
          ]
        ]
      ]
      #headerNames: array:4 [
        "cache-control" => "Cache-Control"
        "date" => "date"
        "set-cookie" => "Set-Cookie"
        "content-type" => "Content-Type"
      ]
      #headers: array:3 [
        "cache-control" => array:1 [
          0 => "no-cache, private"
        ]
        "date" => array:1 [
          0 => "Sat, 18 Nov 2017 07:01:58 GMT"
        ]
        "content-type" => array:1 [
          0 => "text/html; charset=UTF-8"
        ]
      ]
      #cacheControl: array:2 [
        "no-cache" => true
        "private" => true
      ]
    }
    #content: """
      <!DOCTYPE html><!--\n
      \n
      \n
      ErrorException: Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) in file /Users/bobbyborisov/code/forum/app/Favoritable.php on line 32\n
      Stack trace:\n
        1. ErrorException-&gt;() /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
        2. ErrorException-&gt;() /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
        3. ErrorException-&gt;() /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
        4. Illuminate\Foundation\Bootstrap\HandleExceptions-&gt;handleError() /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
        5. App\Reply-&gt;isFavorited() /Users/bobbyborisov/code/forum/storage/framework/views/13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php:9\n
        6. include() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
        7. Illuminate\View\Engines\PhpEngine-&gt;evaluatePath() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
        8. Illuminate\View\Engines\CompilerEngine-&gt;get() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
        9. Illuminate\View\View-&gt;getContents() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
       10. Illuminate\View\View-&gt;renderContents() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
       11. Illuminate\View\View-&gt;render() /Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php:31\n
       12. include() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
       13. Illuminate\View\Engines\PhpEngine-&gt;evaluatePath() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
       14. Illuminate\View\Engines\CompilerEngine-&gt;get() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
       15. Illuminate\View\View-&gt;getContents() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
       16. Illuminate\View\View-&gt;renderContents() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
       17. Illuminate\View\View-&gt;render() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Http/Response.php:42\n
       18. Illuminate\Http\Response-&gt;setContent() /Users/bobbyborisov/code/forum/vendor/symfony/http-foundation/Response.php:200\n
       19. Symfony\Component\HttpFoundation\Response-&gt;__construct() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:724\n
       20. Illuminate\Routing\Router-&gt;toResponse() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:698\n
       21. Illuminate\Routing\Router-&gt;prepareResponse() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:658\n
       22. Illuminate\Routing\Router-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
       23. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php:41\n
       24. Illuminate\Routing\Middleware\SubstituteBindings-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       25. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       26. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php:67\n
       27. Illuminate\Foundation\Http\Middleware\VerifyCsrfToken-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       28. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       29. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php:49\n
       30. Illuminate\View\Middleware\ShareErrorsFromSession-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       31. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       32. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php:63\n
       33. Illuminate\Session\Middleware\StartSession-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       34. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       35. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php:37\n
       36. Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       37. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       38. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php:59\n
       39. Illuminate\Cookie\Middleware\EncryptCookies-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       40. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       41. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
       42. Illuminate\Pipeline\Pipeline-&gt;then() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:660\n
       43. Illuminate\Routing\Router-&gt;runRouteWithinStack() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:635\n
       44. Illuminate\Routing\Router-&gt;runRoute() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:601\n
       45. Illuminate\Routing\Router-&gt;dispatchToRoute() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:590\n
       46. Illuminate\Routing\Router-&gt;dispatch() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:176\n
       47. Illuminate\Foundation\Http\Kernel-&gt;Illuminate\Foundation\Http\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
       48. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/barryvdh/laravel-debugbar/src/Middleware/InjectDebugbar.php:58\n
       49. Barryvdh\Debugbar\Middleware\InjectDebugbar-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       50. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       51. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/fideloper/proxy/src/TrustProxies.php:56\n
       52. Fideloper\Proxy\TrustProxies-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       53. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       54. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
       55. Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       56. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       57. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
       58. Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       59. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       60. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php:27\n
       61. Illuminate\Foundation\Http\Middleware\ValidatePostSize-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       62. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       63. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php:46\n
       64. Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       65. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       66. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
       67. Illuminate\Pipeline\Pipeline-&gt;then() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:151\n
       68. Illuminate\Foundation\Http\Kernel-&gt;sendRequestThroughRouter() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:116\n
       69. Illuminate\Foundation\Http\Kernel-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:324\n
       70. Illuminate\Foundation\Testing\TestCase-&gt;call() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:147\n
       71. Illuminate\Foundation\Testing\TestCase-&gt;get() /Users/bobbyborisov/code/forum/tests/Feature/ReadThreadsTest.php:43\n
       72. Tests\Feature\ReadThreadsTest-&gt;a_user_is_able_to_read_replies_that_are_associated_with_the_thread() [internal]:0\n
       73. ReflectionMethod-&gt;invokeArgs() phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:1069\n
       74. PHPUnit\Framework\TestCase-&gt;runTest() phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:928\n
       75. PHPUnit\Framework\TestCase-&gt;runBare() phar:///usr/local/bin/phpunit/phpunit/Framework/TestResult.php:695\n
       76. PHPUnit\Framework\TestResult-&gt;run() phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:883\n
       77. PHPUnit\Framework\TestCase-&gt;run() phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
       78. PHPUnit\Framework\TestSuite-&gt;run() phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
       79. PHPUnit\Framework\TestSuite-&gt;run() phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
       80. PHPUnit\Framework\TestSuite-&gt;run() phar:///usr/local/bin/phpunit/phpunit/TextUI/TestRunner.php:537\n
       81. PHPUnit\TextUI\TestRunner-&gt;doRun() phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:212\n
       82. PHPUnit\TextUI\Command-&gt;run() phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:141\n
       83. PHPUnit\TextUI\Command-&gt;main() /usr/local/bin/phpunit:551\n
      \n
      \n
      \n
      \n
      \n
      \n
      \n
      \n
      \n
      \n
      \n
      --><html>\n
        <head>\n
          <meta charset="utf-8">\n
          <meta name="robots" content="noindex,nofollow"/>\n
          <title>Whoops! There was an error.</title>\n
      \n
          <style>body {\n
        font: 12px "Helvetica Neue", helvetica, arial, sans-serif;\n
        color: #131313;\n
        background: #eeeeee;\n
        padding:0;\n
        margin: 0;\n
        max-height: 100%;\n
      \n
        text-rendering: optimizeLegibility;\n
      }\n
        a {\n
          text-decoration: none;\n
        }\n
      \n
      .panel {\n
          overflow-y: scroll;\n
          height: 100%;\n
          position: fixed;\n
          margin: 0;\n
          left: 0;\n
          top: 0;\n
      }\n
      \n
      .branding {\n
        position: absolute;\n
        top: 10px;\n
        right: 20px;\n
        color: #777777;\n
        font-size: 10px;\n
          z-index: 100;\n
      }\n
        .branding a {\n
          color: #e95353;\n
        }\n
      \n
      header {\n
        color: white;\n
        box-sizing: border-box;\n
        background-color: #2a2a2a;\n
        padding: 35px 40px;\n
        max-height: 180px;\n
        overflow: hidden;\n
        transition: 0.5s;\n
      }\n
      \n
        header.header-expand {\n
          max-height: 1000px;\n
        }\n
      \n
        .exc-title {\n
          margin: 0;\n
          color: #bebebe;\n
          font-size: 14px;\n
        }\n
          .exc-title-primary {\n
            color: #e95353;\n
          }\n
      \n
          .exc-message {\n
            font-size: 20px;\n
            word-wrap: break-word;\n
            margin: 4px 0 0 0;\n
            color: white;\n
          }\n
            .exc-message span {\n
              display: block;\n
            }\n
            .exc-message-empty-notice {\n
              color: #a29d9d;\n
              font-weight: 300;\n
            }\n
      \n
      .details-container {\n
        left: 30%;\n
        width: 70%;\n
        background: #fafafa;\n
      }\n
        .details {\n
          padding: 5px;\n
        }\n
      \n
          .details-heading {\n
            color: #4288CE;\n
            font-weight: 300;\n
            padding-bottom: 10px;\n
            margin-bottom: 10px;\n
            border-bottom: 1px solid rgba(0, 0, 0, .1);\n
          }\n
      \n
          .details pre.sf-dump {\n
            white-space: pre;\n
            word-wrap: inherit;\n
          }\n
      \n
          .details pre.sf-dump,\n
          .details pre.sf-dump .sf-dump-num,\n
          .details pre.sf-dump .sf-dump-const,\n
          .details pre.sf-dump .sf-dump-str,\n
          .details pre.sf-dump .sf-dump-note,\n
          .details pre.sf-dump .sf-dump-ref,\n
          .details pre.sf-dump .sf-dump-public,\n
          .details pre.sf-dump .sf-dump-protected,\n
          .details pre.sf-dump .sf-dump-private,\n
          .details pre.sf-dump .sf-dump-meta,\n
          .details pre.sf-dump .sf-dump-key,\n
          .details pre.sf-dump .sf-dump-index {\n
            color: #463C54;\n
          }\n
      \n
      .left-panel {\n
        width: 30%;\n
        background: #ded8d8;\n
      }\n
      \n
        .frames-description {\n
          background: rgba(0, 0, 0, .05);\n
          padding: 8px 15px;\n
          color: #a29d9d;\n
          font-size: 11px;\n
        }\n
      \n
        .frames-description.frames-description-application {\n
          text-align: center;\n
          font-size: 12px;\n
        }\n
        .frames-container.frames-container-application .frame:not(.frame-application) {\n
          display: none;\n
        }\n
      \n
        .frames-tab {\n
          color: #a29d9d;\n
          display: inline-block;\n
          padding: 4px 8px;\n
          margin: 0 2px;\n
          border-radius: 3px;\n
        }\n
      \n
        .frames-tab.frames-tab-active {\n
          background-color: #2a2a2a;\n
          color: #bebebe;\n
        }\n
      \n
        .frame {\n
          padding: 14px;\n
          cursor: pointer;\n
          transition: all 0.1s ease;\n
          background: #eeeeee;\n
        }\n
          .frame:not(:last-child) {\n
            border-bottom: 1px solid rgba(0, 0, 0, .05);\n
          }\n
      \n
          .frame.active {\n
            box-shadow: inset -5px 0 0 0 #4288CE;\n
            color: #4288CE;\n
          }\n
      \n
          .frame:not(.active):hover {\n
            background: #BEE9EA;\n
          }\n
      \n
          .frame-method-info {\n
            margin-bottom: 10px;\n
          }\n
      \n
          .frame-class, .frame-function, .frame-index {\n
            font-size: 14px;\n
          }\n
      \n
          .frame-index {\n
            float: left;\n
          }\n
      \n
          .frame-method-info {\n
            margin-left: 24px;\n
          }\n
      \n
          .frame-index {\n
            font-size: 11px;\n
            color: #a29d9d;\n
            background-color: rgba(0, 0, 0, .05);\n
            height: 18px;\n
            width: 18px;\n
            line-height: 18px;\n
            border-radius: 5px;\n
            padding: 0 1px 0 1px;\n
            text-align: center;\n
            display: inline-block;\n
          }\n
      \n
          .frame-application .frame-index {\n
            background-color: #2a2a2a;\n
            color: #bebebe;\n
          }\n
      \n
          .frame-file {\n
            font-family: "Inconsolata", "Fira Mono", "Source Code Pro", Monaco, Consolas, "Lucida Console", monospace;\n
            color: #a29d9d;\n
          }\n
      \n
            .frame-file .editor-link {\n
              color: #a29d9d;\n
            }\n
      \n
          .frame-line {\n
            font-weight: bold;\n
          }\n
      \n
          .frame-line:before {\n
            content: ":";\n
          }\n
      \n
          .frame-code {\n
            padding: 5px;\n
            background: #303030;\n
            display: none;\n
          }\n
      \n
          .frame-code.active {\n
            display: block;\n
          }\n
      \n
          .frame-code .frame-file {\n
            color: #a29d9d;\n
            padding: 12px 6px;\n
      \n
            border-bottom: none;\n
          }\n
      \n
          .code-block {\n
            max-height: 345px;\n
            overflow: hidden;\n
            padding: 10px;\n
            margin: 0;\n
            border-radius: 6px;\n
            box-shadow: 0 3px 0 rgba(0, 0, 0, .05),\n
                        0 10px 30px rgba(0, 0, 0, .05),\n
                        inset 0 0 1px 0 rgba(255, 255, 255, .07);\n
            -moz-tab-size: 4;\n
            -o-tab-size: 4;\n
            tab-size: 4;\n
          }\n
      \n
          .linenums {\n
            margin: 0;\n
            margin-left: 10px;\n
          }\n
      \n
          .frame-comments {\n
            border-top: none;\n
            margin-top: 15px;\n
      \n
            font-size: 12px;\n
          }\n
      \n
          .frame-comments.empty {\n
          }\n
      \n
          .frame-comments.empty:before {\n
            content: "No comments for this stack frame.";\n
            font-weight: 300;\n
            color: #a29d9d;\n
          }\n
      \n
          .frame-comment {\n
            padding: 10px;\n
            color: #e3e3e3;\n
            border-radius: 6px;\n
            background-color: rgba(255, 255, 255, .05);\n
          }\n
            .frame-comment a {\n
              font-weight: bold;\n
              text-decoration: none;\n
            }\n
              .frame-comment a:hover {\n
                color: #4bb1b1;\n
              }\n
      \n
          .frame-comment:not(:last-child) {\n
            border-bottom: 1px dotted rgba(0, 0, 0, .3);\n
          }\n
      \n
          .frame-comment-context {\n
            font-size: 10px;\n
            color: white;\n
          }\n
      \n
      .delimiter {\n
        display: inline-block;\n
      }\n
      \n
      .data-table-container label {\n
        font-size: 16px;\n
        color: #303030;\n
        font-weight: bold;\n
        margin: 10px 0;\n
      \n
        display: block;\n
      \n
        margin-bottom: 5px;\n
        padding-bottom: 5px;\n
      }\n
        .data-table {\n
          width: 100%;\n
          margin-bottom: 10px;\n
        }\n
      \n
        .data-table tbody {\n
          font: 13px "Inconsolata", "Fira Mono", "Source Code Pro", Monaco, Consolas, "Lucida Console", monospace;\n
        }\n
      \n
        .data-table thead {\n
          display: none;\n
        }\n
      \n
        .data-table tr {\n
          padding: 5px 0;\n
        }\n
      \n
        .data-table td:first-child {\n
          width: 20%;\n
          min-width: 130px;\n
          overflow: hidden;\n
          font-weight: bold;\n
          color: #463C54;\n
          padding-right: 5px;\n
      \n
        }\n
      \n
        .data-table td:last-child {\n
          width: 80%;\n
          -ms-word-break: break-all;\n
          word-break: break-all;\n
          word-break: break-word;\n
          -webkit-hyphens: auto;\n
          -moz-hyphens: auto;\n
          hyphens: auto;\n
        }\n
      \n
        .data-table span.empty {\n
          color: rgba(0, 0, 0, .3);\n
          font-weight: 300;\n
        }\n
        .data-table label.empty {\n
          display: inline;\n
        }\n
      \n
      .handler {\n
        padding: 4px 0;\n
        font: 14px "Inconsolata", "Fira Mono", "Source Code Pro", Monaco, Consolas, "Lucida Console", monospace;\n
      }\n
      \n
      /* prettify code style\n
      Uses the Doxy theme as a base */\n
      pre .str, code .str { color: #BCD42A; }  /* string  */\n
      pre .kwd, code .kwd { color: #4bb1b1;  font-weight: bold; }  /* keyword*/\n
      pre .com, code .com { color: #888; font-weight: bold; } /* comment */\n
      pre .typ, code .typ { color: #ef7c61; }  /* type  */\n
      pre .lit, code .lit { color: #BCD42A; }  /* literal */\n
      pre .pun, code .pun { color: #fff; font-weight: bold;  } /* punctuation  */\n
      pre .pln, code .pln { color: #e9e4e5; }  /* plaintext  */\n
      pre .tag, code .tag { color: #4bb1b1; }  /* html/xml tag  */\n
      pre .htm, code .htm { color: #dda0dd; }  /* html tag */\n
      pre .xsl, code .xsl { color: #d0a0d0; }  /* xslt tag */\n
      pre .atn, code .atn { color: #ef7c61; font-weight: normal;} /* html/xml attribute name */\n
      pre .atv, code .atv { color: #bcd42a; }  /* html/xml attribute value  */\n
      pre .dec, code .dec { color: #606; }  /* decimal  */\n
      pre.code-block, code.code-block, .frame-args.code-block, .frame-args.code-block samp {\n
        font-family: "Inconsolata", "Fira Mono", "Source Code Pro", Monaco, Consolas, "Lucida Console", monospace;\n
        background: #333;\n
        color: #e9e4e5;\n
      }\n
        pre.code-block {\n
          white-space: pre-wrap;\n
        }\n
      \n
        pre.code-block a, code.code-block a {\n
          text-decoration:none;\n
        }\n
      \n
        .linenums li {\n
          color: #A5A5A5;\n
        }\n
      \n
        .linenums li.current{\n
          background: rgba(255, 100, 100, .07);\n
        }\n
          .linenums li.current.active {\n
            background: rgba(255, 100, 100, .17);\n
          }\n
      \n
      pre:not(.prettyprinted) {\n
        padding-left: 60px;\n
      }\n
      \n
      #plain-exception {\n
        display: none;\n
      }\n
      \n
      #copy-button {\n
        cursor: pointer;\n
        border: 0;\n
      }\n
      \n
      .clipboard {\n
        opacity: .8;\n
        background: none;\n
      \n
        color: rgba(255, 255, 255, 0.1);\n
        box-shadow: inset 0 0 0 2px rgba(255, 255, 255, 0.1);\n
      \n
        border-radius: 3px;\n
      \n
        outline: none !important;\n
      }\n
      \n
        .clipboard:hover {\n
          box-shadow: inset 0 0 0 2px rgba(255, 255, 255, 0.3);\n
          color: rgba(255, 255, 255, 0.3);\n
        }\n
      \n
      /* inspired by githubs kbd styles */\n
      kbd {\n
        -moz-border-bottom-colors: none;\n
        -moz-border-left-colors: none;\n
        -moz-border-right-colors: none;\n
        -moz-border-top-colors: none;\n
        background-color: #fcfcfc;\n
        border-color: #ccc #ccc #bbb;\n
        border-image: none;\n
        border-style: solid;\n
        border-width: 1px;\n
        color: #555;\n
        display: inline-block;\n
        font-size: 11px;\n
        line-height: 10px;\n
        padding: 3px 5px;\n
        vertical-align: middle;\n
      }\n
      \n
      \n
      /* == Media queries */\n
      \n
      /* Expand the spacing in the details section */\n
      @media (min-width: 1000px) {\n
        .details, .frame-code {\n
          padding: 20px 40px;\n
        }\n
      \n
        .details-container {\n
          left: 32%;\n
          width: 68%;\n
        }\n
      \n
        .frames-container {\n
          margin: 5px;\n
        }\n
      \n
        .left-panel {\n
          width: 32%;\n
        }\n
      }\n
      \n
      .tooltipped {\n
        position: relative\n
      }\n
      .tooltipped:after {\n
        position: absolute;\n
        z-index: 1000000;\n
        display: none;\n
        padding: 5px 8px;\n
        color: #fff;\n
        text-align: center;\n
        text-decoration: none;\n
        text-shadow: none;\n
        text-transform: none;\n
        letter-spacing: normal;\n
        word-wrap: break-word;\n
        white-space: pre;\n
        pointer-events: none;\n
        content: attr(aria-label);\n
        background: rgba(0, 0, 0, 0.8);\n
        border-radius: 3px;\n
        -webkit-font-smoothing: subpixel-antialiased\n
      }\n
      .tooltipped:before {\n
        position: absolute;\n
        z-index: 1000001;\n
        display: none;\n
        width: 0;\n
        height: 0;\n
        color: rgba(0, 0, 0, 0.8);\n
        pointer-events: none;\n
        content: "";\n
        border: 5px solid transparent\n
      }\n
      .tooltipped:hover:before,\n
      .tooltipped:hover:after,\n
      .tooltipped:active:before,\n
      .tooltipped:active:after,\n
      .tooltipped:focus:before,\n
      .tooltipped:focus:after {\n
        display: inline-block;\n
        text-decoration: none\n
      }\n
      .tooltipped-s:after {\n
        top: 100%;\n
        right: 50%;\n
        margin-top: 5px\n
      }\n
      .tooltipped-s:before {\n
        top: auto;\n
        right: 50%;\n
        bottom: -5px;\n
        margin-right: -5px;\n
        border-bottom-color: rgba(0, 0, 0, 0.8)\n
      }\n
      \n
      pre.sf-dump {\n
        padding: 0px !important;\n
        margin: 0px !important;\n
      }\n
      \n
      .search-for-help {\n
        width: 85%;\n
        padding: 0;\n
        margin: 10px 0;\n
        list-style-type: none;\n
        display: inline-block;\n
      }\n
        .search-for-help li {\n
          display: inline-block;\n
          margin-right: 5px;\n
        }\n
        .search-for-help li:last-child {\n
          margin-right: 0;\n
        }\n
          .search-for-help li a {\n
      \n
          }\n
            .search-for-help li a i {\n
              width: 16px;\n
              height: 16px;\n
              overflow: hidden;\n
              display: block;\n
            }\n
            .search-for-help li a svg {\n
              fill: #fff;\n
            }\n
            .search-for-help li a svg path {\n
              background-size: contain;\n
            }\n
      </style>\n
        </head>\n
        <body>\n
      \n
          <div class="Whoops container">\n
            <div class="stack-container">\n
      \n
              <div class="panel left-panel cf ">\n
        <header>\n
        <div class="exception">\n
        <div class="exc-title">\n
                        <span class="exc-title-primary">ErrorException</span>\n
                          <span title="Exception Code">(E_ERROR)</span>\n
            </div>\n
      \n
        <div class="exc-message">\n
                <span>Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)</span>\n
          \n
          <ul class="search-for-help">\n
                  <li>\n
              <a rel="noopener noreferrer" target="_blank" href="https://google.com/search?q=ErrorException+Trying+to+get+property+of+non-object+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29" title="Search for help on Google.">\n
                <!-- Google icon by Alfredo H, from https://www.iconfinder.com/alfredoh -->\n
                <!-- Creative Commons (Attribution 3.0 Unported) -->\n
                <!-- http://creativecommons.org/licenses/by/3.0/ -->\n
                <svg class="google" height="16" viewBox="0 0 512 512" width="16" xmlns="http://www.w3.org/2000/svg">\n
                  <path d="M457.732 216.625c2.628 14.04 4.063 28.743 4.063 44.098C461.795 380.688 381.48 466 260.205 466c-116.024 0-210-93.977-210-210s93.976-210 210-210c56.703 0 104.076 20.867 140.44 54.73l-59.205 59.197v-.135c-22.046-21.002-50-31.762-81.236-31.762-69.297 0-125.604 58.537-125.604 127.84 0 69.29 56.306 127.97 125.604 127.97 62.87 0 105.653-35.966 114.46-85.313h-114.46v-81.902h197.528z"/>\n
                </svg>\n
              </a>\n
            </li>\n
            <li>\n
              <a rel="noopener noreferrer" target="_blank" href="https://duckduckgo.com/?q=ErrorException+Trying+to+get+property+of+non-object+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29" title="Search for help on DuckDuckGo.">\n
                <!-- DuckDuckGo icon by IconBaandar Team, from https://www.iconfinder.com/iconbaandar -->\n
                <!-- Creative Commons (Attribution 3.0 Unported) -->\n
                <!-- http://creativecommons.org/licenses/by/3.0/ -->\n
                <svg class="duckduckgo" height="16" viewBox="150 150 1675 1675" width="16" xmlns="http://www.w3.org/2000/svg">\n
                  <path d="M1792 1024c0 204.364-80.472 398.56-224.955 543.04-144.483 144.48-338.68 224.95-543.044 224.95-204.36 0-398.56-80.47-543.04-224.95-144.48-144.482-224.95-338.676-224.95-543.04 0-204.365 80.47-398.562 224.96-543.045C625.44 336.47 819.64 256 1024 256c204.367 0 398.565 80.47 543.05 224.954C1711.532 625.437 1792 819.634 1792 1024zm-270.206 497.787C1654.256 1389.327 1728 1211.36 1728 1024c0-187.363-73.74-365.332-206.203-497.796C1389.332 393.74 1211.363 320 1024 320s-365.33 73.742-497.795 206.205C393.742 658.67 320 836.637 320 1024c0 187.36 73.744 365.326 206.206 497.787C658.67 1654.25 836.638 1727.99 1024 1727.99c187.362 0 365.33-73.74 497.794-206.203z"/>\n
                  <path d="M1438.64 1177.41c0-.03-.005-.017-.01.004l.01-.004z"/>\n
                  <path d="M1499.8 976.878c.03-.156-.024-.048-.11.107l.11-.107z"/>\n
                  <path d="M1105.19 991.642zm-68.013-376.128c-8.087-10.14-18.028-19.965-29.89-29.408-13.29-10.582-29-20.76-47.223-30.443-35.07-18.624-74.482-31.61-115.265-38.046-39.78-6.28-80.84-6.256-120.39.917l1.37 31.562c1.8.164 7.7 3.9 14.36 8.32-20.68 5.94-39.77 14.447-39.48 39.683l.2 17.48 17.3-1.73c29.38-2.95 60.17-2.06 90.32 2.61 9.21 1.42 18.36 3.2 27.38 5.32l-4.33 1.15c-20.45 5.58-38.93 12.52-54.25 20.61-46.28 24.32-75.51 60.85-90.14 108.37-14.14 45.95-14.27 101.81-2.72 166.51l.06.06c15.14 84.57 64.16 316.39 104.11 505.39 19.78 93.59 37.38 176.83 47.14 224.4 3.26 15.84 5.03 31.02 5.52 45.52.3 9.08.09 17.96-.58 26.62-.45 5.8-1.11 11.51-1.96 17.112l31.62 4.75c.71-4.705 1.3-9.494 1.76-14.373 48.964 10.517 99.78 16.05 151.88 16.05 60.68 0 119.61-7.505 175.91-21.64 3.04 6.08 6.08 12.19 9.11 18.32l28.62-14.128c-2.11-4.27-4.235-8.55-6.37-12.84-23.005-46.124-47.498-93.01-68.67-133.534-15.39-29.466-29.01-55.53-39.046-75.58-26.826-53.618-53.637-119.47-68.28-182.368-8.78-37.705-13.128-74.098-10.308-105.627-15.31-6.28-26.69-11.8-31.968-15.59l-.01.015c-14.22-10.2-31.11-28.12-41.82-49.717-8.618-17.376-13.4-37.246-10.147-57.84 3.17-19.84 27.334-46.714 57.843-67.46v-.063c26.554-18.05 58.75-32.506 86.32-34.31 7.835-.51 16.31-1.008 23.99-1.45 33.45-1.95 50.243-2.93 84.475-11.42 10.88-2.697 26.19-6.56 43.53-11.09 2.364-40.7-5.947-87.596-21.04-133.234-22.004-66.53-58.68-131.25-97.627-170.21-12.543-12.55-28.17-22.79-45.9-30.933-16.88-7.753-35.64-13.615-55.436-17.782zm-10.658 178.553s6.77-42.485 58.39-33.977c27.96 4.654 37.89 29.833 37.89 29.833s-25.31-14.46-44.95-14.198c-40.33.53-51.35 18.342-51.35 18.342zm-240.45-18.802c48.49-19.853 72.11 11.298 72.11 11.298s-35.21-15.928-69.46 5.59c-34.19 21.477-32.92 43.452-32.92 43.452s-18.17-40.5 30.26-60.34zm296.5 95.4c0-6.677 2.68-12.694 7.01-17.02 4.37-4.37 10.42-7.074 17.1-7.074 6.73 0 12.79 2.7 17.15 7.05 4.33 4.33 7.01 10.36 7.01 17.05 0 6.74-2.7 12.81-7.07 17.18-4.33 4.33-10.37 7.01-17.1 7.01-6.68 0-12.72-2.69-17.05-7.03-4.36-4.37-7.07-10.43-7.07-17.16zm-268.42 51.27c0-8.535 3.41-16.22 8.93-21.738 5.55-5.55 13.25-8.982 21.81-8.982 8.51 0 16.18 3.415 21.7 8.934 5.55 5.55 8.98 13.25 8.98 21.78 0 8.53-3.44 16.23-8.98 21.79-5.52 5.52-13.19 8.93-21.71 8.93-8.55 0-16.26-3.43-21.82-8.99-5.52-5.52-8.93-13.2-8.93-21.74z"/>\n
                  <path d="M1102.48 986.34zm390.074-64.347c-28.917-11.34-74.89-12.68-93.32-3.778-11.5 5.567-35.743 13.483-63.565 21.707-25.75 7.606-53.9 15.296-78.15 21.702-17.69 4.67-33.3 8.66-44.4 11.435-34.92 8.76-52.05 9.77-86.17 11.78-7.84.46-16.48.97-24.48 1.5-28.12 1.86-60.97 16.77-88.05 35.4v.06c-31.12 21.4-55.77 49.12-59.01 69.59-3.32 21.24 1.56 41.74 10.35 59.67 10.92 22.28 28.15 40.77 42.66 51.29l.01-.02c5.38 3.9 16.98 9.6 32.6 16.08 26.03 10.79 63.2 23.76 101.25 34.23 43.6 11.99 89.11 21.05 121.69 20.41 34.26-.69 77.73-10.52 114.54-24.67 22.15-8.52 42.21-18.71 56.88-29.58 17.85-13.22 28.7-28.42 28.4-44.74-.07-3.89-.72-7.63-1.97-11.21l-.02.01c-11.6-33.06-50.37-23.59-105.53-10.12-46.86 11.445-107.94 26.365-169.01 20.434-32.56-3.167-54.45-10.61-67.88-20.133-5.96-4.224-9.93-8.67-12.18-13.11-1.96-3.865-2.68-7.84-2.33-11.714.39-4.42 2.17-9.048 5.1-13.57l-.05-.03c7.86-12.118 23.082-9.72 43.93-6.43 25.91 4.08 58.2 9.172 99.013-3.61 39.63-12.378 87.76-29.9 131.184-47.39 42.405-17.08 80.08-34.078 100.74-46.18 25.46-14.87 37.57-29.428 40.59-42.866 2.725-12.152-.89-22.48-8.903-31.07-5.87-6.29-14.254-11.31-23.956-15.115z"/>\n
                </svg>\n
              </a>\n
            </li>\n
            <li>\n
              <a rel="noopener noreferrer" target="_blank" href="https://stackoverflow.com/search?q=ErrorException+Trying+to+get+property+of+non-object+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29" title="Search for help on Stack Overflow.">\n
                <!-- Stack Overflow icon by Picons.me, from https://www.iconfinder.com/Picons -->\n
                <!-- Free for commercial use -->\n
                <svg class="stackoverflow" height="16" viewBox="-1163 1657.697 56.693 56.693" width="16" xmlns="http://www.w3.org/2000/svg">\n
                  <path d="M-1126.04 1689.533l-16.577-9.778 2.088-3.54 16.578 9.778zM-1127.386 1694.635l-18.586-4.996 1.068-3.97 18.586 4.995zM-1127.824 1700.137l-19.165-1.767.378-4.093 19.165 1.767zM-1147.263 1701.293h19.247v4.11h-19.247z"/>\n
                  <path d="M-1121.458 1710.947s0 .96-.032.96v.016h-30.796s-.96 0-.96-.016h-.032v-20.03h3.288v16.805h25.244v-16.804h3.288v19.07zM-1130.667 1667.04l10.844 15.903-3.396 2.316-10.843-15.903zM-1118.313 1663.044l3.29 18.963-4.05.703-3.29-18.963z"/>\n
                </svg>\n
              </a>\n
            </li>\n
          </ul>\n
      \n
          <span id="plain-exception">ErrorException thrown with message &quot;Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)&quot;\n
      \n
      Stacktrace:\n
      #82 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #81 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #80 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #79 Illuminate\Foundation\Bootstrap\HandleExceptions:handleError in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #78 App\Reply:isFavorited in /Users/bobbyborisov/code/forum/storage/framework/views/13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php:9\n
      #77 include in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
      #76 Illuminate\View\Engines\PhpEngine:evaluatePath in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
      #75 Illuminate\View\Engines\CompilerEngine:get in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
      #74 Illuminate\View\View:getContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
      #73 Illuminate\View\View:renderContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
      #72 Illuminate\View\View:render in /Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php:31\n
      #71 include in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
      #70 Illuminate\View\Engines\PhpEngine:evaluatePath in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
      #69 Illuminate\View\Engines\CompilerEngine:get in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
      #68 Illuminate\View\View:getContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
      #67 Illuminate\View\View:renderContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
      #66 Illuminate\View\View:render in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Http/Response.php:42\n
      #65 Illuminate\Http\Response:setContent in /Users/bobbyborisov/code/forum/vendor/symfony/http-foundation/Response.php:200\n
      #64 Symfony\Component\HttpFoundation\Response:__construct in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:724\n
      #63 Illuminate\Routing\Router:toResponse in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:698\n
      #62 Illuminate\Routing\Router:prepareResponse in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:658\n
      #61 Illuminate\Routing\Router:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
      #60 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php:41\n
      #59 Illuminate\Routing\Middleware\SubstituteBindings:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #58 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #57 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php:67\n
      #56 Illuminate\Foundation\Http\Middleware\VerifyCsrfToken:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #55 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #54 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php:49\n
      #53 Illuminate\View\Middleware\ShareErrorsFromSession:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #52 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #51 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php:63\n
      #50 Illuminate\Session\Middleware\StartSession:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #49 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #48 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php:37\n
      #47 Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #46 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #45 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php:59\n
      #44 Illuminate\Cookie\Middleware\EncryptCookies:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #43 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #42 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
      #41 Illuminate\Pipeline\Pipeline:then in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:660\n
      #40 Illuminate\Routing\Router:runRouteWithinStack in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:635\n
      #39 Illuminate\Routing\Router:runRoute in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:601\n
      #38 Illuminate\Routing\Router:dispatchToRoute in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:590\n
      #37 Illuminate\Routing\Router:dispatch in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:176\n
      #36 Illuminate\Foundation\Http\Kernel:Illuminate\Foundation\Http\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
      #35 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/barryvdh/laravel-debugbar/src/Middleware/InjectDebugbar.php:58\n
      #34 Barryvdh\Debugbar\Middleware\InjectDebugbar:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #33 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #32 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/fideloper/proxy/src/TrustProxies.php:56\n
      #31 Fideloper\Proxy\TrustProxies:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #30 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #29 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
      #28 Illuminate\Foundation\Http\Middleware\TransformsRequest:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #27 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #26 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
      #25 Illuminate\Foundation\Http\Middleware\TransformsRequest:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #24 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #23 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php:27\n
      #22 Illuminate\Foundation\Http\Middleware\ValidatePostSize:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #21 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #20 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php:46\n
      #19 Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #18 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #17 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
      #16 Illuminate\Pipeline\Pipeline:then in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:151\n
      #15 Illuminate\Foundation\Http\Kernel:sendRequestThroughRouter in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:116\n
      #14 Illuminate\Foundation\Http\Kernel:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:324\n
      #13 Illuminate\Foundation\Testing\TestCase:call in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:147\n
      #12 Illuminate\Foundation\Testing\TestCase:get in /Users/bobbyborisov/code/forum/tests/Feature/ReadThreadsTest.php:43\n
      #11 Tests\Feature\ReadThreadsTest:a_user_is_able_to_read_replies_that_are_associated_with_the_thread in [internal]:0\n
      #10 ReflectionMethod:invokeArgs in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:1069\n
      #9 PHPUnit\Framework\TestCase:runTest in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:928\n
      #8 PHPUnit\Framework\TestCase:runBare in phar:///usr/local/bin/phpunit/phpunit/Framework/TestResult.php:695\n
      #7 PHPUnit\Framework\TestResult:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:883\n
      #6 PHPUnit\Framework\TestCase:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #5 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #4 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #3 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/TextUI/TestRunner.php:537\n
      #2 PHPUnit\TextUI\TestRunner:doRun in phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:212\n
      #1 PHPUnit\TextUI\Command:run in phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:141\n
      #0 PHPUnit\TextUI\Command:main in /usr/local/bin/phpunit:551\n
      </span>\n
          <button id="copy-button" class="clipboard" data-clipboard-text="ErrorException thrown with message &quot;Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)&quot;\n
      \n
      Stacktrace:\n
      #82 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #81 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #80 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #79 Illuminate\Foundation\Bootstrap\HandleExceptions:handleError in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #78 App\Reply:isFavorited in /Users/bobbyborisov/code/forum/storage/framework/views/13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php:9\n
      #77 include in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
      #76 Illuminate\View\Engines\PhpEngine:evaluatePath in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
      #75 Illuminate\View\Engines\CompilerEngine:get in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
      #74 Illuminate\View\View:getContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
      #73 Illuminate\View\View:renderContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
      #72 Illuminate\View\View:render in /Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php:31\n
      #71 include in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
      #70 Illuminate\View\Engines\PhpEngine:evaluatePath in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
      #69 Illuminate\View\Engines\CompilerEngine:get in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
      #68 Illuminate\View\View:getContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
      #67 Illuminate\View\View:renderContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
      #66 Illuminate\View\View:render in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Http/Response.php:42\n
      #65 Illuminate\Http\Response:setContent in /Users/bobbyborisov/code/forum/vendor/symfony/http-foundation/Response.php:200\n
      #64 Symfony\Component\HttpFoundation\Response:__construct in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:724\n
      #63 Illuminate\Routing\Router:toResponse in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:698\n
      #62 Illuminate\Routing\Router:prepareResponse in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:658\n
      #61 Illuminate\Routing\Router:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
      #60 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php:41\n
      #59 Illuminate\Routing\Middleware\SubstituteBindings:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #58 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #57 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php:67\n
      #56 Illuminate\Foundation\Http\Middleware\VerifyCsrfToken:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #55 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #54 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php:49\n
      #53 Illuminate\View\Middleware\ShareErrorsFromSession:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #52 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #51 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php:63\n
      #50 Illuminate\Session\Middleware\StartSession:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #49 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #48 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php:37\n
      #47 Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #46 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #45 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php:59\n
      #44 Illuminate\Cookie\Middleware\EncryptCookies:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #43 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #42 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
      #41 Illuminate\Pipeline\Pipeline:then in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:660\n
      #40 Illuminate\Routing\Router:runRouteWithinStack in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:635\n
      #39 Illuminate\Routing\Router:runRoute in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:601\n
      #38 Illuminate\Routing\Router:dispatchToRoute in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:590\n
      #37 Illuminate\Routing\Router:dispatch in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:176\n
      #36 Illuminate\Foundation\Http\Kernel:Illuminate\Foundation\Http\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
      #35 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/barryvdh/laravel-debugbar/src/Middleware/InjectDebugbar.php:58\n
      #34 Barryvdh\Debugbar\Middleware\InjectDebugbar:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #33 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #32 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/fideloper/proxy/src/TrustProxies.php:56\n
      #31 Fideloper\Proxy\TrustProxies:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #30 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #29 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
      #28 Illuminate\Foundation\Http\Middleware\TransformsRequest:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #27 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #26 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
      #25 Illuminate\Foundation\Http\Middleware\TransformsRequest:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #24 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #23 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php:27\n
      #22 Illuminate\Foundation\Http\Middleware\ValidatePostSize:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #21 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #20 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php:46\n
      #19 Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #18 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #17 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
      #16 Illuminate\Pipeline\Pipeline:then in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:151\n
      #15 Illuminate\Foundation\Http\Kernel:sendRequestThroughRouter in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:116\n
      #14 Illuminate\Foundation\Http\Kernel:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:324\n
      #13 Illuminate\Foundation\Testing\TestCase:call in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:147\n
      #12 Illuminate\Foundation\Testing\TestCase:get in /Users/bobbyborisov/code/forum/tests/Feature/ReadThreadsTest.php:43\n
      #11 Tests\Feature\ReadThreadsTest:a_user_is_able_to_read_replies_that_are_associated_with_the_thread in [internal]:0\n
      #10 ReflectionMethod:invokeArgs in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:1069\n
      #9 PHPUnit\Framework\TestCase:runTest in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:928\n
      #8 PHPUnit\Framework\TestCase:runBare in phar:///usr/local/bin/phpunit/phpunit/Framework/TestResult.php:695\n
      #7 PHPUnit\Framework\TestResult:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:883\n
      #6 PHPUnit\Framework\TestCase:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #5 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #4 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #3 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/TextUI/TestRunner.php:537\n
      #2 PHPUnit\TextUI\TestRunner:doRun in phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:212\n
      #1 PHPUnit\TextUI\Command:run in phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:141\n
      #0 PHPUnit\TextUI\Command:main in /usr/local/bin/phpunit:551\n
      " title="Copy exception details to clipboard">\n
            COPY\n
          </button>\n
        </div>\n
      </div>\n
      </header>\n
      <div class="frames-description frames-description-application">\n
                  <a href="#" id="application-frames-tab" class="frames-tab frames-tab-active">\n
              Application frames (7)\n
            </a>\n
              <a href="#" id="all-frames-tab" class="frames-tab ">\n
            All frames (83)\n
          </a>\n
        </div><div class="frames-container frames-container-application">\n
          <div class="frame active frame-application" id="frame-line-0">\n
            <span class="frame-index">82</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">ErrorException</div></span>\n
              <span class="frame-function"><div class="delimiter"></div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div><!--\n
         --><span class="frame-line">32</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-1">\n
            <span class="frame-index">81</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">ErrorException</div></span>\n
              <span class="frame-function"><div class="delimiter"></div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div><!--\n
         --><span class="frame-line">32</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-2">\n
            <span class="frame-index">80</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">ErrorException</div></span>\n
              <span class="frame-function"><div class="delimiter"></div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div><!--\n
         --><span class="frame-line">32</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-3">\n
            <span class="frame-index">79</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Bootstrap</div>\<div class="delimiter">HandleExceptions</div></span>\n
              <span class="frame-function"><div class="delimiter">handleError</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div><!--\n
         --><span class="frame-line">32</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-4">\n
            <span class="frame-index">78</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">App</div>\<div class="delimiter">Reply</div></span>\n
              <span class="frame-function"><div class="delimiter">isFavorited</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">storage</div>/<div class="delimiter">framework</div>/<div class="delimiter">views</div>/<div class="delimiter">13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php</div><!--\n
         --><span class="frame-line">9</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-5">\n
            <span class="frame-index">77</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter"></div></span>\n
              <span class="frame-function"><div class="delimiter">include</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">PhpEngine.php</div><!--\n
         --><span class="frame-line">43</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-6">\n
            <span class="frame-index">76</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">Engines</div>\<div class="delimiter">PhpEngine</div></span>\n
              <span class="frame-function"><div class="delimiter">evaluatePath</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">CompilerEngine.php</div><!--\n
         --><span class="frame-line">59</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-7">\n
            <span class="frame-index">75</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">Engines</div>\<div class="delimiter">CompilerEngine</div></span>\n
              <span class="frame-function"><div class="delimiter">get</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">137</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-8">\n
            <span class="frame-index">74</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">getContents</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">120</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-9">\n
            <span class="frame-index">73</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">renderContents</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">85</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-10">\n
            <span class="frame-index">72</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">render</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">storage</div>/<div class="delimiter">framework</div>/<div class="delimiter">views</div>/<div class="delimiter">1196ad017046e28c49972beca0e01e3c1eba8931.php</div><!--\n
         --><span class="frame-line">31</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-11">\n
            <span class="frame-index">71</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter"></div></span>\n
              <span class="frame-function"><div class="delimiter">include</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">PhpEngine.php</div><!--\n
         --><span class="frame-line">43</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-12">\n
            <span class="frame-index">70</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">Engines</div>\<div class="delimiter">PhpEngine</div></span>\n
              <span class="frame-function"><div class="delimiter">evaluatePath</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">CompilerEngine.php</div><!--\n
         --><span class="frame-line">59</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-13">\n
            <span class="frame-index">69</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">Engines</div>\<div class="delimiter">CompilerEngine</div></span>\n
              <span class="frame-function"><div class="delimiter">get</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">137</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-14">\n
            <span class="frame-index">68</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">getContents</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">120</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-15">\n
            <span class="frame-index">67</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">renderContents</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">85</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-16">\n
            <span class="frame-index">66</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">render</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Http</div>/<div class="delimiter">Response.php</div><!--\n
         --><span class="frame-line">42</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-17">\n
            <span class="frame-index">65</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Http</div>\<div class="delimiter">Response</div></span>\n
              <span class="frame-function"><div class="delimiter">setContent</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">symfony</div>/<div class="delimiter">http-foundation</div>/<div class="delimiter">Response.php</div><!--\n
         --><span class="frame-line">200</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-18">\n
            <span class="frame-index">64</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Symfony</div>\<div class="delimiter">Component</div>\<div class="delimiter">HttpFoundation</div>\<div class="delimiter">Response</div></span>\n
              <span class="frame-function"><div class="delimiter">__construct</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">724</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-19">\n
            <span class="frame-index">63</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">toResponse</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">698</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-20">\n
            <span class="frame-index">62</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">prepareResponse</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">658</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-21">\n
            <span class="frame-index">61</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">30</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-22">\n
            <span class="frame-index">60</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">SubstituteBindings.php</div><!--\n
         --><span class="frame-line">41</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-23">\n
            <span class="frame-index">59</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">SubstituteBindings</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-24">\n
            <span class="frame-index">58</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-25">\n
            <span class="frame-index">57</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">VerifyCsrfToken.php</div><!--\n
         --><span class="frame-line">67</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-26">\n
            <span class="frame-index">56</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">VerifyCsrfToken</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-27">\n
            <span class="frame-index">55</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-28">\n
            <span class="frame-index">54</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">ShareErrorsFromSession.php</div><!--\n
         --><span class="frame-line">49</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-29">\n
            <span class="frame-index">53</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">ShareErrorsFromSession</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-30">\n
            <span class="frame-index">52</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-31">\n
            <span class="frame-index">51</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Session</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">StartSession.php</div><!--\n
         --><span class="frame-line">63</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-32">\n
            <span class="frame-index">50</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Session</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">StartSession</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-33">\n
            <span class="frame-index">49</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-34">\n
            <span class="frame-index">48</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Cookie</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">AddQueuedCookiesToResponse.php</div><!--\n
         --><span class="frame-line">37</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-35">\n
            <span class="frame-index">47</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Cookie</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">AddQueuedCookiesToResponse</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-36">\n
            <span class="frame-index">46</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-37">\n
            <span class="frame-index">45</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Cookie</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">EncryptCookies.php</div><!--\n
         --><span class="frame-line">59</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-38">\n
            <span class="frame-index">44</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Cookie</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">EncryptCookies</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-39">\n
            <span class="frame-index">43</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-40">\n
            <span class="frame-index">42</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">102</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-41">\n
            <span class="frame-index">41</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">then</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">660</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-42">\n
            <span class="frame-index">40</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">runRouteWithinStack</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">635</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-43">\n
            <span class="frame-index">39</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">runRoute</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">601</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-44">\n
            <span class="frame-index">38</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">dispatchToRoute</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">590</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-45">\n
            <span class="frame-index">37</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">dispatch</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div><!--\n
         --><span class="frame-line">176</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-46">\n
            <span class="frame-index">36</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Kernel</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">30</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-47">\n
            <span class="frame-index">35</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">barryvdh</div>/<div class="delimiter">laravel-debugbar</div>/<div class="delimiter">src</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">InjectDebugbar.php</div><!--\n
         --><span class="frame-line">58</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-48">\n
            <span class="frame-index">34</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Barryvdh</div>\<div class="delimiter">Debugbar</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">InjectDebugbar</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-49">\n
            <span class="frame-index">33</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-50">\n
            <span class="frame-index">32</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">fideloper</div>/<div class="delimiter">proxy</div>/<div class="delimiter">src</div>/<div class="delimiter">TrustProxies.php</div><!--\n
         --><span class="frame-line">56</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-51">\n
            <span class="frame-index">31</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Fideloper</div>\<div class="delimiter">Proxy</div>\<div class="delimiter">TrustProxies</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-52">\n
            <span class="frame-index">30</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-53">\n
            <span class="frame-index">29</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">TransformsRequest.php</div><!--\n
         --><span class="frame-line">30</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-54">\n
            <span class="frame-index">28</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">TransformsRequest</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-55">\n
            <span class="frame-index">27</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-56">\n
            <span class="frame-index">26</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">TransformsRequest.php</div><!--\n
         --><span class="frame-line">30</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-57">\n
            <span class="frame-index">25</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">TransformsRequest</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-58">\n
            <span class="frame-index">24</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-59">\n
            <span class="frame-index">23</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">ValidatePostSize.php</div><!--\n
         --><span class="frame-line">27</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-60">\n
            <span class="frame-index">22</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">ValidatePostSize</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-61">\n
            <span class="frame-index">21</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-62">\n
            <span class="frame-index">20</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">CheckForMaintenanceMode.php</div><!--\n
         --><span class="frame-line">46</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-63">\n
            <span class="frame-index">19</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">CheckForMaintenanceMode</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-64">\n
            <span class="frame-index">18</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-65">\n
            <span class="frame-index">17</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">102</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-66">\n
            <span class="frame-index">16</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">then</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div><!--\n
         --><span class="frame-line">151</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-67">\n
            <span class="frame-index">15</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Kernel</div></span>\n
              <span class="frame-function"><div class="delimiter">sendRequestThroughRouter</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div><!--\n
         --><span class="frame-line">116</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-68">\n
            <span class="frame-index">14</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Kernel</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Testing</div>/<div class="delimiter">Concerns</div>/<div class="delimiter">MakesHttpRequests.php</div><!--\n
         --><span class="frame-line">324</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-69">\n
            <span class="frame-index">13</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Testing</div>\<div class="delimiter">TestCase</div></span>\n
              <span class="frame-function"><div class="delimiter">call</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Testing</div>/<div class="delimiter">Concerns</div>/<div class="delimiter">MakesHttpRequests.php</div><!--\n
         --><span class="frame-line">147</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-70">\n
            <span class="frame-index">12</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Testing</div>\<div class="delimiter">TestCase</div></span>\n
              <span class="frame-function"><div class="delimiter">get</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">tests</div>/<div class="delimiter">Feature</div>/<div class="delimiter">ReadThreadsTest.php</div><!--\n
         --><span class="frame-line">43</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-71">\n
            <span class="frame-index">11</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Tests</div>\<div class="delimiter">Feature</div>\<div class="delimiter">ReadThreadsTest</div></span>\n
              <span class="frame-function"><div class="delimiter">a_user_is_able_to_read_replies_that_are_associated_with_the_thread</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">[internal]</div><!--\n
         --><span class="frame-line">0</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-72">\n
            <span class="frame-index">10</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">ReflectionMethod</div></span>\n
              <span class="frame-function"><div class="delimiter">invokeArgs</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div><!--\n
         --><span class="frame-line">1069</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-73">\n
            <span class="frame-index">9</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestCase</div></span>\n
              <span class="frame-function"><div class="delimiter">runTest</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div><!--\n
         --><span class="frame-line">928</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-74">\n
            <span class="frame-index">8</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestCase</div></span>\n
              <span class="frame-function"><div class="delimiter">runBare</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestResult.php</div><!--\n
         --><span class="frame-line">695</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-75">\n
            <span class="frame-index">7</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestResult</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div><!--\n
         --><span class="frame-line">883</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-76">\n
            <span class="frame-index">6</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestCase</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div><!--\n
         --><span class="frame-line">744</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-77">\n
            <span class="frame-index">5</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestSuite</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div><!--\n
         --><span class="frame-line">744</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-78">\n
            <span class="frame-index">4</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestSuite</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div><!--\n
         --><span class="frame-line">744</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-79">\n
            <span class="frame-index">3</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestSuite</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">TestRunner.php</div><!--\n
         --><span class="frame-line">537</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-80">\n
            <span class="frame-index">2</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">TextUI</div>\<div class="delimiter">TestRunner</div></span>\n
              <span class="frame-function"><div class="delimiter">doRun</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">Command.php</div><!--\n
         --><span class="frame-line">212</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-81">\n
            <span class="frame-index">1</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">TextUI</div>\<div class="delimiter">Command</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">Command.php</div><!--\n
         --><span class="frame-line">141</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-82">\n
            <span class="frame-index">0</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">TextUI</div>\<div class="delimiter">Command</div></span>\n
              <span class="frame-function"><div class="delimiter">main</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div><!--\n
         --><span class="frame-line">551</span>\n
          </div>\n
        </div>\n
      </div></div>\n
              <div class="panel details-container cf">\n
        <div class="frame-code-container ">\n
                  <div class="frame-code active" id="frame-code-0">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-0" class="code-block linenums:13">    public function favorites()\n
          {\n
              return $this-&gt;morphMany(Favorite::class, &#039;favorited&#039;);\n
          }\n
       \n
          public function favorite()\n
          {\n
              $this-&gt;favorites()-&gt;create([&#039;user_id&#039; =&gt; auth()-&gt;user()-&gt;id]);\n
       \n
              return $this;\n
          }\n
       \n
          public function unfavorite()\n
          {\n
              $this-&gt;favorites()-&gt;delete();\n
          }\n
       \n
          public function isFavorited()\n
          {\n
              return ! ! $this-&gt;favorites-&gt;where(&#039;user_id&#039;, auth()-&gt;user()-&gt;id)-&gt;count();\n
          }\n
      }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-0" class="code-block frame-args">\n
                    <ol class="linenums"><li><script> Sfdump = window.Sfdump || (function (doc) { var refStyle = doc.createElement('style'), rxEsc = /([.*+?^${}()|\[\]\/\\])/g, idRx = /\bsf-dump-\d+-ref[012]\w+\b/, keyHint = 0 <= navigator.platform.toUpperCase().indexOf('MAC') ? 'Cmd' : 'Ctrl', addEventListener = function (e, n, cb) { e.addEventListener(n, cb, false); }; (doc.documentElement.firstElementChild || doc.documentElement.children[0]).appendChild(refStyle); if (!doc.addEventListener) { addEventListener = function (element, eventName, callback) { element.attachEvent('on' + eventName, function (e) { e.preventDefault = function () {e.returnValue = false;}; e.target = e.srcElement; callback(e); }); }; } function toggle(a, recursive) { var s = a.nextSibling || {}, oldClass = s.className, arrow, newClass; if (/\bsf-dump-compact\b/.test(oldClass)) { arrow = '&#9660;'; newClass = 'sf-dump-expanded'; } else if (/\bsf-dump-expanded\b/.test(oldClass)) { arrow = '&#9654;'; newClass = 'sf-dump-compact'; } else { return false; } if (doc.createEvent && s.dispatchEvent) { var event = doc.createEvent('Event'); event.initEvent('sf-dump-expanded' === newClass ? 'sfbeforedumpexpand' : 'sfbeforedumpcollapse', true, false); s.dispatchEvent(event); } a.lastChild.innerHTML = arrow; s.className = s.className.replace(/\bsf-dump-(compact|expanded)\b/, newClass); if (recursive) { try { a = s.querySelectorAll('.'+oldClass); for (s = 0; s < a.length; ++s) { if (-1 == a[s].className.indexOf(newClass)) { a[s].className = newClass; a[s].previousSibling.lastChild.innerHTML = arrow; } } } catch (e) { } } return true; }; function collapse(a, recursive) { var s = a.nextSibling || {}, oldClass = s.className; if (/\bsf-dump-expanded\b/.test(oldClass)) { toggle(a, recursive); return true; } return false; }; function expand(a, recursive) { var s = a.nextSibling || {}, oldClass = s.className; if (/\bsf-dump-compact\b/.test(oldClass)) { toggle(a, recursive); return true; } return false; }; function collapseAll(root) { var a = root.querySelector('a.sf-dump-toggle'); if (a) { collapse(a, true); expand(a); return true; } return false; } function reveal(node) { var previous, parents = []; while ((node = node.parentNode || {}) && (previous = node.previousSibling) && 'A' === previous.tagName) { parents.push(previous); } if (0 !== parents.length) { parents.forEach(function (parent) { expand(parent); }); return true; } return false; } function highlight(root, activeNode, nodes) { resetHighlightedNodes(root); Array.from(nodes||[]).forEach(function (node) { if (!/\bsf-dump-highlight\b/.test(node.className)) { node.className = node.className + ' sf-dump-highlight'; } }); if (!/\bsf-dump-highlight-active\b/.test(activeNode.className)) { activeNode.className = activeNode.className + ' sf-dump-highlight-active'; } } function resetHighlightedNodes(root) { Array.from(root.querySelectorAll('.sf-dump-str, .sf-dump-key, .sf-dump-public, .sf-dump-protected, .sf-dump-private')).forEach(function (strNode) { strNode.className = strNode.className.replace(/\bsf-dump-highlight\b/, ''); strNode.className = strNode.className.replace(/\bsf-dump-highlight-active\b/, ''); }); } return function (root, x) { root = doc.getElementById(root); var indentRx = new RegExp('^('+(root.getAttribute('data-indent-pad') || ' ').replace(rxEsc, '\\$1')+')+', 'm'), options = {"maxDepth":1,"maxStringLength":160,"fileLinkFormat":false}, elt = root.getElementsByTagName('A'), len = elt.length, i = 0, s, h, t = []; while (i < len) t.push(elt[i++]); for (i in x) { options[i] = x[i]; } function a(e, f) { addEventListener(root, e, function (e) { if ('A' == e.target.tagName) { f(e.target, e); } else if ('A' == e.target.parentNode.tagName) { f(e.target.parentNode, e); } else if (e.target.nextElementSibling && 'A' == e.target.nextElementSibling.tagName) { f(e.target.nextElementSibling, e, true); } }); }; function isCtrlKey(e) { return e.ctrlKey || e.metaKey; } function xpathString(str) { var parts = str.match(/[^'"]+|['"]/g).map(function (part) { if ("'" == part) { return '"\'"'; } if ('"' == part) { return "'\"'"; } return "'" + part + "'"; }); return "concat(" + parts.join(",") + ", '')"; } addEventListener(root, 'mouseover', function (e) { if ('' != refStyle.innerHTML) { refStyle.innerHTML = ''; } }); a('mouseover', function (a, e, c) { if (c) { e.target.style.cursor = "pointer"; } else if (a = idRx.exec(a.className)) { try { refStyle.innerHTML = 'pre.sf-dump .'+a[0]+'{background-color: #B729D9; color: #FFF !important; border-radius: 2px}'; } catch (e) { } } }); a('click', function (a, e, c) { if (/\bsf-dump-toggle\b/.test(a.className)) { e.preventDefault(); if (!toggle(a, isCtrlKey(e))) { var r = doc.getElementById(a.getAttribute('href').substr(1)), s = r.previousSibling, f = r.parentNode, t = a.parentNode; t.replaceChild(r, a); f.replaceChild(a, s); t.insertBefore(s, r); f = f.firstChild.nodeValue.match(indentRx); t = t.firstChild.nodeValue.match(indentRx); if (f && t && f[0] !== t[0]) { r.innerHTML = r.innerHTML.replace(new RegExp('^'+f[0].replace(rxEsc, '\\$1'), 'mg'), t[0]); } if (/\bsf-dump-compact\b/.test(r.className)) { toggle(s, isCtrlKey(e)); } } if (c) { } else if (doc.getSelection) { try { doc.getSelection().removeAllRanges(); } catch (e) { doc.getSelection().empty(); } } else { doc.selection.empty(); } } else if (/\bsf-dump-str-toggle\b/.test(a.className)) { e.preventDefault(); e = a.parentNode.parentNode; e.className = e.className.replace(/\bsf-dump-str-(expand|collapse)\b/, a.parentNode.className); } }); elt = root.getElementsByTagName('SAMP'); len = elt.length; i = 0; while (i < len) t.push(elt[i++]); len = t.length; for (i = 0; i < len; ++i) { elt = t[i]; if ('SAMP' == elt.tagName) { elt.className = 'sf-dump-expanded'; a = elt.previousSibling || {}; if ('A' != a.tagName) { a = doc.createElement('A'); a.className = 'sf-dump-ref'; elt.parentNode.insertBefore(a, elt); } else { a.innerHTML += ' '; } a.title = (a.title ? a.title+'\n[' : '[')+keyHint+'+click] Expand all children'; a.innerHTML += '<span>&#9660;</span>'; a.className += ' sf-dump-toggle'; x = 1; if ('sf-dump' != elt.parentNode.className) { x += elt.parentNode.getAttribute('data-depth')/1; } elt.setAttribute('data-depth', x); if (x > options.maxDepth) { toggle(a); } } else if (/\bsf-dump-ref\b/.test(elt.className) && (a = elt.getAttribute('href'))) { a = a.substr(1); elt.className += ' '+a; if (/[\[{]$/.test(elt.previousSibling.nodeValue)) { a = a != elt.nextSibling.id && doc.getElementById(a); try { s = a.nextSibling; elt.appendChild(a); s.parentNode.insertBefore(a, s); if (/^[@#]/.test(elt.innerHTML)) { elt.innerHTML += ' <span>&#9654;</span>'; } else { elt.innerHTML = '<span>&#9654;</span>'; elt.className = 'sf-dump-ref'; } elt.className += ' sf-dump-toggle'; } catch (e) { if ('&' == elt.innerHTML.charAt(0)) { elt.innerHTML = '&hellip;'; elt.className = 'sf-dump-ref'; } } } } } if (doc.evaluate && Array.from && root.children.length > 1) { root.setAttribute('tabindex', 0); SearchState = function () { this.nodes = []; this.idx = 0; }; SearchState.prototype = { next: function () { if (this.isEmpty()) { return this.current(); } this.idx = this.idx < (this.nodes.length - 1) ? this.idx + 1 : this.idx; return this.current(); }, previous: function () { if (this.isEmpty()) { return this.current(); } this.idx = this.idx > 0 ? this.idx - 1 : this.idx; return this.current(); }, isEmpty: function () { return 0 === this.count(); }, current: function () { if (this.isEmpty()) { return null; } return this.nodes[this.idx]; }, reset: function () { this.nodes = []; this.idx = 0; }, count: function () { return this.nodes.length; }, }; function showCurrent(state) { var currentNode = state.current(); if (currentNode) { reveal(currentNode); highlight(root, currentNode, state.nodes); } counter.textContent = (state.isEmpty() ? 0 : state.idx + 1) + ' of ' + state.count(); } var search = doc.createElement('div'); search.className = 'sf-dump-search-wrapper sf-dump-search-hidden'; search.innerHTML = ' <input type="text" class="sf-dump-search-input"> <span class="sf-dump-search-count">0 of 0<\/span> <button type="button" class="sf-dump-search-input-previous" tabindex="-1"> <svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"> <path d="M1683 1331l-166 165q-19 19-45 19t-45-19l-531-531-531 531q-19 19-45 19t-45-19l-166-165q-19-19-19-45.5t19-45.5l742-741q19-19 45-19t45 19l742 741q19 19 19 45.5t-19 45.5z"\/> <\/svg> <\/button> <button type="button" class="sf-dump-search-input-next" tabindex="-1"> <svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"> <path d="M1683 808l-742 741q-19 19-45 19t-45-19l-742-741q-19-19-19-45.5t19-45.5l166-165q19-19 45-19t45 19l531 531 531-531q19-19 45-19t45 19l166 165q19 19 19 45.5t-19 45.5z"\/> <\/svg> <\/button> '; root.insertBefore(search, root.firstChild); var state = new SearchState(); var searchInput = search.querySelector('.sf-dump-search-input'); var counter = search.querySelector('.sf-dump-search-count'); var searchInputTimer = 0; var previousSearchQuery = ''; addEventListener(searchInput, 'keyup', function (e) { var searchQuery = e.target.value; /* Don't perform anything if the pressed key didn't change the query */ if (searchQuery === previousSearchQuery) { return; } previousSearchQuery = searchQuery; clearTimeout(searchInputTimer); searchInputTimer = setTimeout(function () { state.reset(); collapseAll(root); resetHighlightedNodes(root); if ('' === searchQuery) { counter.textContent = '0 of 0'; return; } var xpathResult = doc.evaluate('//pre[@id="' + root.id + '"]//span[@class="sf-dump-str" or @class="sf-dump-key" or @class="sf-dump-public" or @class="sf-dump-protected" or @class="sf-dump-private"][contains(child::text(), ' + xpathString(searchQuery) + ')]', document, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null); while (node = xpathResult.iterateNext()) state.nodes.push(node); showCurrent(state); }, 400); }); Array.from(search.querySelectorAll('.sf-dump-search-input-next, .sf-dump-search-input-previous')).forEach(function (btn) { addEventListener(btn, 'click', function (e) { e.preventDefault(); -1 !== e.target.className.indexOf('next') ? state.next() : state.previous(); searchInput.focus(); collapseAll(root); showCurrent(state); }) }); addEventListener(root, 'keydown', function (e) { var isSearchActive = !/\bsf-dump-search-hidden\b/.test(search.className); if ((114 === e.keyCode && !isSearchActive) || (isCtrlKey(e) && 70 === e.keyCode)) { /* F3 or CMD/CTRL + F */ e.preventDefault(); search.className = search.className.replace(/\bsf-dump-search-hidden\b/, ''); searchInput.focus(); } else if (isSearchActive) { if (27 === e.keyCode) { /* ESC key */ search.className += ' sf-dump-search-hidden'; e.preventDefault(); resetHighlightedNodes(root); searchInput.value = ''; } else if ( (isCtrlKey(e) && 71 === e.keyCode) /* CMD/CTRL + G */ || 13 === e.keyCode /* Enter */ || 114 === e.keyCode /* F3 */ ) { e.preventDefault(); e.shiftKey ? state.previous() : state.next(); collapseAll(root); showCurrent(state); } } }); } if (0 >= options.maxStringLength) { return; } try { elt = root.querySelectorAll('.sf-dump-str'); len = elt.length; i = 0; t = []; while (i < len) t.push(elt[i++]); len = t.length; for (i = 0; i < len; ++i) { elt = t[i]; s = elt.innerText || elt.textContent; x = s.length - options.maxStringLength; if (0 < x) { h = elt.innerHTML; elt[elt.innerText ? 'innerText' : 'textContent'] = s.substring(0, options.maxStringLength); elt.className += ' sf-dump-str-collapse'; elt.innerHTML = '<span class=sf-dump-str-collapse>'+h+'<a class="sf-dump-ref sf-dump-str-toggle" title="Collapse"> &#9664;</a></span>'+ '<span class=sf-dump-str-expand>'+elt.innerHTML+'<a class="sf-dump-ref sf-dump-str-toggle" title="'+x+' remaining characters"> &#9654;</a></span>'; } } } catch (e) { } }; })(document); </script><style> pre.sf-dump { display: block; white-space: pre; padding: 5px; } pre.sf-dump:after { content: ""; visibility: hidden; display: block; height: 0; clear: both; } pre.sf-dump span { display: inline; } pre.sf-dump .sf-dump-compact { display: none; } pre.sf-dump abbr { text-decoration: none; border: none; cursor: help; } pre.sf-dump a { text-decoration: none; cursor: pointer; border: 0; outline: none; color: inherit; } pre.sf-dump .sf-dump-ellipsis { display: inline-block; overflow: visible; text-overflow: ellipsis; max-width: 5em; white-space: nowrap; overflow: hidden; vertical-align: top; } pre.sf-dump .sf-dump-ellipsis+.sf-dump-ellipsis { max-width: none; } pre.sf-dump code { display:inline; padding:0; background:none; } .sf-dump-str-collapse .sf-dump-str-collapse { display: none; } .sf-dump-str-expand .sf-dump-str-expand { display: none; } .sf-dump-public.sf-dump-highlight, .sf-dump-protected.sf-dump-highlight, .sf-dump-private.sf-dump-highlight, .sf-dump-str.sf-dump-highlight, .sf-dump-key.sf-dump-highlight { background: rgba(111, 172, 204, 0.3); border: 1px solid #7DA0B1; border-radius: 3px; } .sf-dump-public.sf-dump-highlight-active, .sf-dump-protected.sf-dump-highlight-active, .sf-dump-private.sf-dump-highlight-active, .sf-dump-str.sf-dump-highlight-active, .sf-dump-key.sf-dump-highlight-active { background: rgba(253, 175, 0, 0.4); border: 1px solid #ffa500; border-radius: 3px; } pre.sf-dump .sf-dump-search-hidden { display: none; } pre.sf-dump .sf-dump-search-wrapper { float: right; font-size: 0; white-space: nowrap; max-width: 100%; text-align: right; } pre.sf-dump .sf-dump-search-wrapper > * { vertical-align: top; box-sizing: border-box; height: 21px; font-weight: normal; border-radius: 0; background: #FFF; color: #757575; border: 1px solid #BBB; } pre.sf-dump .sf-dump-search-wrapper > input.sf-dump-search-input { padding: 3px; height: 21px; font-size: 12px; border-right: none; width: 140px; border-top-left-radius: 3px; border-bottom-left-radius: 3px; color: #000; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-next, pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-previous { background: #F2F2F2; outline: none; border-left: none; font-size: 0; line-height: 0; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-next { border-top-right-radius: 3px; border-bottom-right-radius: 3px; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-next > svg, pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-previous > svg { pointer-events: none; width: 12px; height: 12px; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-count { display: inline-block; padding: 0 5px; margin: 0; border-left: none; line-height: 21px; font-size: 12px; }pre.sf-dump, pre.sf-dump .sf-dump-default{color:#FFFFFF; line-height:normal; font:12px "Inconsolata", "Fira Mono", "Source Code Pro", Monaco, Consolas, "Lucida Console", monospace !important; word-wrap: break-word; white-space: pre-wrap; position:relative; z-index:99999; word-break: normal}pre.sf-dump .sf-dump-num{color:#BCD42A}pre.sf-dump .sf-dump-const{color: #4bb1b1;}pre.sf-dump .sf-dump-str{color:#BCD42A}pre.sf-dump .sf-dump-note{color:#ef7c61}pre.sf-dump .sf-dump-ref{color:#A0A0A0}pre.sf-dump .sf-dump-public{color:#FFFFFF}pre.sf-dump .sf-dump-protected{color:#FFFFFF}pre.sf-dump .sf-dump-private{color:#FFFFFF}pre.sf-dump .sf-dump-meta{color:#FFFFFF}pre.sf-dump .sf-dump-key{color:#BCD42A}pre.sf-dump .sf-dump-index{color:#ef7c61}pre.sf-dump .sf-dump-ellipsis{color:#FF8400}</style><pre class=sf-dump id=sf-dump-747706737 data-indent-pad="  ">"<span class=sf-dump-str title="194 characters">Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)</span>"\n
      </pre><script>Sfdump("sf-dump-747706737")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-1">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-1" class="code-block linenums:13">    public function favorites()\n
          {\n
              return $this-&gt;morphMany(Favorite::class, &#039;favorited&#039;);\n
          }\n
       \n
          public function favorite()\n
          {\n
              $this-&gt;favorites()-&gt;create([&#039;user_id&#039; =&gt; auth()-&gt;user()-&gt;id]);\n
       \n
              return $this;\n
          }\n
       \n
          public function unfavorite()\n
          {\n
              $this-&gt;favorites()-&gt;delete();\n
          }\n
       \n
          public function isFavorited()\n
          {\n
              return ! ! $this-&gt;favorites-&gt;where(&#039;user_id&#039;, auth()-&gt;user()-&gt;id)-&gt;count();\n
          }\n
      }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-1" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-559123502 data-indent-pad="  ">"<span class=sf-dump-str title="115 characters">Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)</span>"\n
      </pre><script>Sfdump("sf-dump-559123502")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments ">\n
                                        <div class="frame-comment" id="comment-1-0">\n
                    <span class="frame-comment-context">Exception message:</span>\n
                    Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)            </div>\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-2">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-2" class="code-block linenums:13">    public function favorites()\n
          {\n
              return $this-&gt;morphMany(Favorite::class, &#039;favorited&#039;);\n
          }\n
       \n
          public function favorite()\n
          {\n
              $this-&gt;favorites()-&gt;create([&#039;user_id&#039; =&gt; auth()-&gt;user()-&gt;id]);\n
       \n
              return $this;\n
          }\n
       \n
          public function unfavorite()\n
          {\n
              $this-&gt;favorites()-&gt;delete();\n
          }\n
       \n
          public function isFavorited()\n
          {\n
              return ! ! $this-&gt;favorites-&gt;where(&#039;user_id&#039;, auth()-&gt;user()-&gt;id)-&gt;count();\n
          }\n
      }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-2" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1146904289 data-indent-pad="  ">"<span class=sf-dump-str title="36 characters">Trying to get property of non-object</span>"\n
      </pre><script>Sfdump("sf-dump-1146904289")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments ">\n
                                        <div class="frame-comment" id="comment-2-0">\n
                    <span class="frame-comment-context">Exception message:</span>\n
                    Trying to get property of non-object            </div>\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-3">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-3" class="code-block linenums:13">    public function favorites()\n
          {\n
              return $this-&gt;morphMany(Favorite::class, &#039;favorited&#039;);\n
          }\n
       \n
          public function favorite()\n
          {\n
              $this-&gt;favorites()-&gt;create([&#039;user_id&#039; =&gt; auth()-&gt;user()-&gt;id]);\n
       \n
              return $this;\n
          }\n
       \n
          public function unfavorite()\n
          {\n
              $this-&gt;favorites()-&gt;delete();\n
          }\n
       \n
          public function isFavorited()\n
          {\n
              return ! ! $this-&gt;favorites-&gt;where(&#039;user_id&#039;, auth()-&gt;user()-&gt;id)-&gt;count();\n
          }\n
      }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-3" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1278470697 data-indent-pad="  "><span class=sf-dump-num>8</span>\n
      </pre><script>Sfdump("sf-dump-1278470697")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1863344603 data-indent-pad="  ">"<span class=sf-dump-str title="36 characters">Trying to get property of non-object</span>"\n
      </pre><script>Sfdump("sf-dump-1863344603")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-304659058 data-indent-pad="  ">"<span class=sf-dump-str title="50 characters">/Users/bobbyborisov/code/forum/app/Favoritable.php</span>"\n
      </pre><script>Sfdump("sf-dump-304659058")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1689710914 data-indent-pad="  "><span class=sf-dump-num>32</span>\n
      </pre><script>Sfdump("sf-dump-1689710914")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1818344337 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-1818344337")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-4">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">storage</div>/<div class="delimiter">framework</div>/<div class="delimiter">views</div>/<div class="delimiter">13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-4" class="code-block linenums:1">&lt;div class=&quot;panel panel-default&quot;&gt;\n
          &lt;div class=&quot;panel-heading level-end&quot;&gt;\n
              &lt;div&gt;\n
                  &lt;?php echo e($reply-&gt;owner-&gt;name); ?&gt; said\n
                  &lt;?php echo e($reply-&gt;created_at-&gt;diffForHumans()); ?&gt;\n
       \n
              &lt;/div&gt;\n
              &lt;div class=&quot;gotoend&quot;&gt;\n
                  &lt;?php if($reply-&gt;isFavorited()): ?&gt;\n
                      &lt;form method=&quot;POST&quot; action=&quot;/replies/&lt;?php echo e($reply-&gt;id); ?&gt;/favorites&quot;&gt;\n
                          &lt;?php echo e(csrf_field()); ?&gt;\n
       \n
                          &lt;input name=&quot;_method&quot; type=&quot;hidden&quot; value=&quot;DELETE&quot;&gt;\n
                          &lt;button type=&quot;submit&quot; class=&quot;btn btn-sm btn-danger&quot;&gt;\n
                              &lt;?php echo e($reply-&gt;favorites_count); ?&gt; &lt;?php echo e(str_plural(&#039;Favorite&#039;, $reply-&gt;favorites_count)); ?&gt;\n
       \n
                          &lt;/button&gt;\n
                      &lt;/form&gt;\n
                  &lt;?php else: ?&gt;\n
                      &lt;form method=&quot;POST&quot; action=&quot;/replies/&lt;?php echo e($reply-&gt;id); ?&gt;/favorites&quot;&gt;\n
                          &lt;?php echo e(csrf_field()); ?&gt;\n
       \n
                          &lt;button type=&quot;submit&quot; class=&quot;btn btn-sm btn-success&quot;&gt;\n
                              &lt;?php echo e($reply-&gt;favorites_count); ?&gt; &lt;?php echo e(str_plural(&#039;Favorite&#039;, $reply-&gt;favorites_count)); ?&gt;                    &lt;/button&gt;\n
                      &lt;/form&gt;\n
                  &lt;?php endif; ?&gt;\n
              &lt;/div&gt;\n
       \n
          &lt;/div&gt;\n
       \n
          &lt;div class=&quot;panel-body&quot;&gt;\n
              &lt;article&gt;\n
                  &lt;div class=&quot;body&quot;&gt;&lt;?php echo e($reply-&gt;body); ?&gt;&lt;/div&gt;\n
              &lt;/article&gt;\n
          &lt;/div&gt;\n
      &lt;/div&gt;</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-5">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">PhpEngine.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-5" class="code-block linenums:24">    /**\n
           * Get the evaluated contents of the view at the given path.\n
           *\n
           * @param  string  $__path\n
           * @param  array   $__data\n
           * @return string\n
           */\n
          protected function evaluatePath($__path, $__data)\n
          {\n
              $obLevel = ob_get_level();\n
       \n
              ob_start();\n
       \n
              extract($__data, EXTR_SKIP);\n
       \n
              // We&#039;ll evaluate the contents of the view inside a try/catch block so we can\n
              // flush out any stray output that might get out before an error occurs or\n
              // an exception is thrown. This prevents any partial views from leaking.\n
              try {\n
                  include $__path;\n
              } catch (Exception $e) {\n
                  $this-&gt;handleViewException($e, $obLevel);\n
              } catch (Throwable $e) {\n
                  $this-&gt;handleViewException(new FatalThrowableError($e), $obLevel);\n
              }\n
       \n
              return ltrim(ob_get_clean());\n
          }\n
       \n
          /**\n
           * Handle a view exception.\n
           *\n
           * @param  \Exception  $e\n
           * @param  int  $obLevel\n
           * @return void\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleViewException(Exception $e, $obLevel)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-5" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-644615226 data-indent-pad="  ">"<span class=sf-dump-str title="99 characters">/Users/bobbyborisov/code/forum/storage/framework/views/13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php</span>"\n
      </pre><script>Sfdump("sf-dump-644615226")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-6">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">CompilerEngine.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-6" class="code-block linenums:40">     * @param  array   $data\n
           * @return string\n
           */\n
          public function get($path, array $data = [])\n
          {\n
              $this-&gt;lastCompiled[] = $path;\n
       \n
              // If this given view has expired, which means it has simply been edited since\n
              // it was last compiled, we will re-compile the views so we can evaluate a\n
              // fresh copy of the view. We&#039;ll pass the compiler the path of the view.\n
              if ($this-&gt;compiler-&gt;isExpired($path)) {\n
                  $this-&gt;compiler-&gt;compile($path);\n
              }\n
       \n
              $compiled = $this-&gt;compiler-&gt;getCompiledPath($path);\n
       \n
              // Once we have the path to the compiled file, we will evaluate the paths with\n
              // typical PHP just like any other templates. We also keep a stack of views\n
              // which have been rendered for right exception messages to be generated.\n
              $results = $this-&gt;evaluatePath($compiled, $data);\n
       \n
              array_pop($this-&gt;lastCompiled);\n
       \n
              return $results;\n
          }\n
       \n
          /**\n
           * Handle a view exception.\n
           *\n
           * @param  \Exception  $e\n
           * @param  int  $obLevel\n
           * @return void\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleViewException(Exception $e, $obLevel)\n
          {\n
              $e = new ErrorException($this-&gt;getMessage($e), 0, 1, $e-&gt;getFile(), $e-&gt;getLine(), $e);\n
       \n
              parent::handleViewException($e, $obLevel);</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-6" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2042347468 data-indent-pad="  ">"<span class=sf-dump-str title="99 characters">/Users/bobbyborisov/code/forum/storage/framework/views/13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php</span>"\n
      </pre><script>Sfdump("sf-dump-2042347468")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1239231048 data-indent-pad="  "><span class=sf-dump-note>array:10</span> [<samp>\n
        "<span class=sf-dump-key>__env</span>" => <abbr title="Illuminate\View\Factory" class=sf-dump-note>Factory</abbr> {<a class=sf-dump-ref>#118</a>}\n
        "<span class=sf-dump-key>app</span>" => <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a>}\n
        "<span class=sf-dump-key>errors</span>" => <abbr title="Illuminate\Support\ViewErrorBag" class=sf-dump-note>ViewErrorBag</abbr> {<a class=sf-dump-ref>#800</a>}\n
        "<span class=sf-dump-key>obLevel</span>" => <span class=sf-dump-num>1</span>\n
        "<span class=sf-dump-key>thread</span>" => <abbr title="App\Thread" class=sf-dump-note>Thread</abbr> {<a class=sf-dump-ref>#858</a>}\n
        "<span class=sf-dump-key>replies</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref href=#sf-dump-1239231048-ref2938 title="2 occurrences">#938</a>}\n
        "<span class=sf-dump-key>channels</span>" => <abbr title="Illuminate\Database\Eloquent\Collection" class=sf-dump-note>Collection</abbr> {<a class=sf-dump-ref>#928</a>}\n
        "<span class=sf-dump-key>__currentLoopData</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref href=#sf-dump-1239231048-ref2938 title="2 occurrences">#938</a>}\n
        "<span class=sf-dump-key>reply</span>" => <abbr title="App\Reply" class=sf-dump-note>Reply</abbr> {<a class=sf-dump-ref>#869</a>}\n
        "<span class=sf-dump-key>loop</span>" => {<a class=sf-dump-ref>#863</a>}\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-1239231048")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-7">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-7" class="code-block linenums:118">        $this-&gt;factory-&gt;callComposer($this);\n
       \n
              $contents = $this-&gt;getContents();\n
       \n
              // Once we&#039;ve finished rendering the view, we&#039;ll decrement the render count\n
              // so that each sections get flushed out next time a view is created and\n
              // no old sections are staying around in the memory of an environment.\n
              $this-&gt;factory-&gt;decrementRender();\n
       \n
              return $contents;\n
          }\n
       \n
          /**\n
           * Get the evaluated contents of the view.\n
           *\n
           * @return string\n
           */\n
          protected function getContents()\n
          {\n
              return $this-&gt;engine-&gt;get($this-&gt;path, $this-&gt;gatherData());\n
          }\n
       \n
          /**\n
           * Get the data bound to the view instance.\n
           *\n
           * @return array\n
           */\n
          protected function gatherData()\n
          {\n
              $data = array_merge($this-&gt;factory-&gt;getShared(), $this-&gt;data);\n
       \n
              foreach ($data as $key =&gt; $value) {\n
                  if ($value instanceof Renderable) {\n
                      $data[$key] = $value-&gt;render();\n
                  }\n
              }\n
       \n
              return $data;\n
          }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-7" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1746279863 data-indent-pad="  ">"<span class=sf-dump-str title="70 characters">/Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php</span>"\n
      </pre><script>Sfdump("sf-dump-1746279863")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1495276190 data-indent-pad="  "><span class=sf-dump-note>array:10</span> [<samp>\n
        "<span class=sf-dump-key>__env</span>" => <abbr title="Illuminate\View\Factory" class=sf-dump-note>Factory</abbr> {<a class=sf-dump-ref>#118</a>}\n
        "<span class=sf-dump-key>app</span>" => <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a>}\n
        "<span class=sf-dump-key>errors</span>" => <abbr title="Illuminate\Support\ViewErrorBag" class=sf-dump-note>ViewErrorBag</abbr> {<a class=sf-dump-ref>#800</a>}\n
        "<span class=sf-dump-key>obLevel</span>" => <span class=sf-dump-num>1</span>\n
        "<span class=sf-dump-key>thread</span>" => <abbr title="App\Thread" class=sf-dump-note>Thread</abbr> {<a class=sf-dump-ref>#858</a>}\n
        "<span class=sf-dump-key>replies</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref href=#sf-dump-1495276190-ref2938 title="2 occurrences">#938</a>}\n
        "<span class=sf-dump-key>channels</span>" => <abbr title="Illuminate\Database\Eloquent\Collection" class=sf-dump-note>Collection</abbr> {<a class=sf-dump-ref>#928</a>}\n
        "<span class=sf-dump-key>__currentLoopData</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref href=#sf-dump-1495276190-ref2938 title="2 occurrences">#938</a>}\n
        "<span class=sf-dump-key>reply</span>" => <abbr title="App\Reply" class=sf-dump-note>Reply</abbr> {<a class=sf-dump-ref>#869</a>}\n
        "<span class=sf-dump-key>loop</span>" => {<a class=sf-dump-ref>#863</a>}\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-1495276190")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-8">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-8" class="code-block linenums:101"> \n
                  throw $e;\n
              }\n
          }\n
       \n
          /**\n
           * Get the contents of the view instance.\n
           *\n
           * @return string\n
           */\n
          protected function renderContents()\n
          {\n
              // We will keep track of the amount of views being rendered so we can flush\n
              // the section after the complete rendering operation is done. This will\n
              // clear out the sections for any separate views that may be rendered.\n
              $this-&gt;factory-&gt;incrementRender();\n
       \n
              $this-&gt;factory-&gt;callComposer($this);\n
       \n
              $contents = $this-&gt;getContents();\n
       \n
              // Once we&#039;ve finished rendering the view, we&#039;ll decrement the render count\n
              // so that each sections get flushed out next time a view is created and\n
              // no old sections are staying around in the memory of an environment.\n
              $this-&gt;factory-&gt;decrementRender();\n
       \n
              return $contents;\n
          }\n
       \n
          /**\n
           * Get the evaluated contents of the view.\n
           *\n
           * @return string\n
           */\n
          protected function getContents()\n
          {\n
              return $this-&gt;engine-&gt;get($this-&gt;path, $this-&gt;gatherData());\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-9">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-9" class="code-block linenums:66">        $this-&gt;view = $view;\n
              $this-&gt;path = $path;\n
              $this-&gt;engine = $engine;\n
              $this-&gt;factory = $factory;\n
       \n
              $this-&gt;data = $data instanceof Arrayable ? $data-&gt;toArray() : (array) $data;\n
          }\n
       \n
          /**\n
           * Get the string contents of the view.\n
           *\n
           * @param  callable|null  $callback\n
           * @return string\n
           *\n
           * @throws \Throwable\n
           */\n
          public function render(callable $callback = null)\n
          {\n
              try {\n
                  $contents = $this-&gt;renderContents();\n
       \n
                  $response = isset($callback) ? call_user_func($callback, $this, $contents) : null;\n
       \n
                  // Once we have the contents of the view, we will flush the sections if we are\n
                  // done rendering all views so that there is nothing left hanging over when\n
                  // another view gets rendered in the future by the application developer.\n
                  $this-&gt;factory-&gt;flushStateIfDoneRendering();\n
       \n
                  return ! is_null($response) ? $response : $contents;\n
              } catch (Exception $e) {\n
                  $this-&gt;factory-&gt;flushState();\n
       \n
                  throw $e;\n
              } catch (Throwable $e) {\n
                  $this-&gt;factory-&gt;flushState();\n
       \n
                  throw $e;\n
              }\n
          }\n
       </pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-10">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">storage</div>/<div class="delimiter">framework</div>/<div class="delimiter">views</div>/<div class="delimiter">1196ad017046e28c49972beca0e01e3c1eba8931.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-10" class="code-block linenums:12">                                &lt;form method=&quot;POST&quot; action=&quot;&lt;?php echo e(route(&#039;thread.delete&#039;, $thread)); ?&gt;&quot;&gt;\n
                                          &lt;?php echo e(csrf_field()); ?&gt;\n
       \n
                                          &lt;?php echo e(method_field(&quot;DELETE&quot;)); ?&gt;\n
       \n
                                          &lt;button type=&quot;submit&quot; class=&quot;btn btn-sm btn-danger&quot;&gt;Delete&lt;/button&gt;\n
                                      &lt;/form&gt;\n
                                  &lt;/div&gt;\n
                              &lt;?php endif; ?&gt;\n
                          &lt;/div&gt;\n
                          &lt;div class=&quot;panel-body&quot;&gt;\n
                              &lt;article&gt;\n
                                  &lt;h4&gt;&lt;?php echo e($thread-&gt;title); ?&gt;&lt;/h4&gt;\n
                                  &lt;div class=&quot;body&quot;&gt;&lt;?php echo e($thread-&gt;body); ?&gt;&lt;/div&gt;\n
                              &lt;/article&gt;\n
                          &lt;/div&gt;\n
                      &lt;/div&gt;\n
       \n
                      &lt;?php $__currentLoopData = $replies; $__env-&gt;addLoop($__currentLoopData); foreach($__currentLoopData as $reply): $__env-&gt;incrementLoopIndices(); $loop = $__env-&gt;getLastLoop(); ?&gt;\n
                          &lt;?php echo $__env-&gt;make(&#039;threads.reply&#039;, array_except(get_defined_vars(), array(&#039;__data&#039;, &#039;__path&#039;)))-&gt;render(); ?&gt;\n
                      &lt;?php endforeach; $__env-&gt;popLoop(); $loop = $__env-&gt;getLastLoop(); ?&gt;\n
       \n
                      &lt;?php echo e($replies-&gt;links()); ?&gt;\n
       \n
       \n
                      &lt;form method=&quot;POST&quot; action=&quot;&lt;?php echo e($thread-&gt;path().&#039;/replies&#039;); ?&gt;&quot;&gt;\n
                          &lt;?php echo e(csrf_field()); ?&gt;\n
       \n
                          &lt;div class=&quot;form-group&quot;&gt;\n
                              &lt;textarea name=&quot;body&quot; id=&quot;body&quot; class=&quot;form-control&quot; placeholder=&quot;Have something to say?&quot;&gt;&lt;/textarea&gt;\n
                          &lt;/div&gt;\n
                          &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Post&lt;/button&gt;\n
                      &lt;/form&gt;\n
       \n
                      &lt;?php if(auth()-&gt;guard()-&gt;guest()): ?&gt;\n
                          &lt;p class=&quot;text-center&quot;&gt;Please &lt;a href=&quot;&lt;?php echo e(route(&#039;login&#039;)); ?&gt;&quot;&gt;sign in&lt;/a&gt; to participate in this discussion&lt;/p&gt;\n
                      &lt;?php endif; ?&gt;\n
                  &lt;/div&gt;\n
                  &lt;div class=&quot;col-md-4&quot;&gt;\n
                      &lt;div class=&quot;panel panel-default&quot;&gt;</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-11">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">PhpEngine.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-11" class="code-block linenums:24">    /**\n
           * Get the evaluated contents of the view at the given path.\n
           *\n
           * @param  string  $__path\n
           * @param  array   $__data\n
           * @return string\n
           */\n
          protected function evaluatePath($__path, $__data)\n
          {\n
              $obLevel = ob_get_level();\n
       \n
              ob_start();\n
       \n
              extract($__data, EXTR_SKIP);\n
       \n
              // We&#039;ll evaluate the contents of the view inside a try/catch block so we can\n
              // flush out any stray output that might get out before an error occurs or\n
              // an exception is thrown. This prevents any partial views from leaking.\n
              try {\n
                  include $__path;\n
              } catch (Exception $e) {\n
                  $this-&gt;handleViewException($e, $obLevel);\n
              } catch (Throwable $e) {\n
                  $this-&gt;handleViewException(new FatalThrowableError($e), $obLevel);\n
              }\n
       \n
              return ltrim(ob_get_clean());\n
          }\n
       \n
          /**\n
           * Handle a view exception.\n
           *\n
           * @param  \Exception  $e\n
           * @param  int  $obLevel\n
           * @return void\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleViewException(Exception $e, $obLevel)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-11" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2121561684 data-indent-pad="  ">"<span class=sf-dump-str title="99 characters">/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php</span>"\n
      </pre><script>Sfdump("sf-dump-2121561684")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-12">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">CompilerEngine.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-12" class="code-block linenums:40">     * @param  array   $data\n
           * @return string\n
           */\n
          public function get($path, array $data = [])\n
          {\n
              $this-&gt;lastCompiled[] = $path;\n
       \n
              // If this given view has expired, which means it has simply been edited since\n
              // it was last compiled, we will re-compile the views so we can evaluate a\n
              // fresh copy of the view. We&#039;ll pass the compiler the path of the view.\n
              if ($this-&gt;compiler-&gt;isExpired($path)) {\n
                  $this-&gt;compiler-&gt;compile($path);\n
              }\n
       \n
              $compiled = $this-&gt;compiler-&gt;getCompiledPath($path);\n
       \n
              // Once we have the path to the compiled file, we will evaluate the paths with\n
              // typical PHP just like any other templates. We also keep a stack of views\n
              // which have been rendered for right exception messages to be generated.\n
              $results = $this-&gt;evaluatePath($compiled, $data);\n
       \n
              array_pop($this-&gt;lastCompiled);\n
       \n
              return $results;\n
          }\n
       \n
          /**\n
           * Handle a view exception.\n
           *\n
           * @param  \Exception  $e\n
           * @param  int  $obLevel\n
           * @return void\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleViewException(Exception $e, $obLevel)\n
          {\n
              $e = new ErrorException($this-&gt;getMessage($e), 0, 1, $e-&gt;getFile(), $e-&gt;getLine(), $e);\n
       \n
              parent::handleViewException($e, $obLevel);</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-12" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2072941294 data-indent-pad="  ">"<span class=sf-dump-str title="99 characters">/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php</span>"\n
      </pre><script>Sfdump("sf-dump-2072941294")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-990796753 data-indent-pad="  "><span class=sf-dump-note>array:6</span> [<samp>\n
        "<span class=sf-dump-key>__env</span>" => <abbr title="Illuminate\View\Factory" class=sf-dump-note>Factory</abbr> {<a class=sf-dump-ref>#118</a>}\n
        "<span class=sf-dump-key>app</span>" => <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a>}\n
        "<span class=sf-dump-key>errors</span>" => <abbr title="Illuminate\Support\ViewErrorBag" class=sf-dump-note>ViewErrorBag</abbr> {<a class=sf-dump-ref>#800</a>}\n
        "<span class=sf-dump-key>thread</span>" => <abbr title="App\Thread" class=sf-dump-note>Thread</abbr> {<a class=sf-dump-ref>#858</a>}\n
        "<span class=sf-dump-key>replies</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref>#938</a>}\n
        "<span class=sf-dump-key>channels</span>" => <abbr title="Illuminate\Database\Eloquent\Collection" class=sf-dump-note>Collection</abbr> {<a class=sf-dump-ref>#928</a>}\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-990796753")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-13">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-13" class="code-block linenums:118">        $this-&gt;factory-&gt;callComposer($this);\n
       \n
              $contents = $this-&gt;getContents();\n
       \n
              // Once we&#039;ve finished rendering the view, we&#039;ll decrement the render count\n
              // so that each sections get flushed out next time a view is created and\n
              // no old sections are staying around in the memory of an environment.\n
              $this-&gt;factory-&gt;decrementRender();\n
       \n
              return $contents;\n
          }\n
       \n
          /**\n
           * Get the evaluated contents of the view.\n
           *\n
           * @return string\n
           */\n
          protected function getContents()\n
          {\n
              return $this-&gt;engine-&gt;get($this-&gt;path, $this-&gt;gatherData());\n
          }\n
       \n
          /**\n
           * Get the data bound to the view instance.\n
           *\n
           * @return array\n
           */\n
          protected function gatherData()\n
          {\n
              $data = array_merge($this-&gt;factory-&gt;getShared(), $this-&gt;data);\n
       \n
              foreach ($data as $key =&gt; $value) {\n
                  if ($value instanceof Renderable) {\n
                      $data[$key] = $value-&gt;render();\n
                  }\n
              }\n
       \n
              return $data;\n
          }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-13" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1290690917 data-indent-pad="  ">"<span class=sf-dump-str title="69 characters">/Users/bobbyborisov/code/forum/resources/views/threads/show.blade.php</span>"\n
      </pre><script>Sfdump("sf-dump-1290690917")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-626350449 data-indent-pad="  "><span class=sf-dump-note>array:6</span> [<samp>\n
        "<span class=sf-dump-key>__env</span>" => <abbr title="Illuminate\View\Factory" class=sf-dump-note>Factory</abbr> {<a class=sf-dump-ref>#118</a>}\n
        "<span class=sf-dump-key>app</span>" => <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a>}\n
        "<span class=sf-dump-key>errors</span>" => <abbr title="Illuminate\Support\ViewErrorBag" class=sf-dump-note>ViewErrorBag</abbr> {<a class=sf-dump-ref>#800</a>}\n
        "<span class=sf-dump-key>thread</span>" => <abbr title="App\Thread" class=sf-dump-note>Thread</abbr> {<a class=sf-dump-ref>#858</a>}\n
        "<span class=sf-dump-key>replies</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref>#938</a>}\n
        "<span class=sf-dump-key>channels</span>" => <abbr title="Illuminate\Database\Eloquent\Collection" class=sf-dump-note>Collection</abbr> {<a class=sf-dump-ref>#928</a>}\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-626350449")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-14">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-14" class="code-block linenums:101"> \n
                  throw $e;\n
              }\n
          }\n
       \n
          /**\n
           * Get the contents of the view instance.\n
           *\n
           * @return string\n
           */\n
          protected function renderContents()\n
          {\n
              // We will keep track of the amount of views being rendered so we can flush\n
              // the section after the complete rendering operation is done. This will\n
              // clear out the sections for any separate views that may be rendered.\n
              $this-&gt;factory-&gt;incrementRender();\n
       \n
              $this-&gt;factory-&gt;callComposer($this);\n
       \n
              $contents = $this-&gt;getContents();\n
       \n
              // Once we&#039;ve finished rendering the view, we&#039;ll decrement the render count\n
              // so that each sections get flushed out next time a view is created and\n
              // no old sections are staying around in the memory of an environment.\n
              $this-&gt;factory-&gt;decrementRender();\n
       \n
              return $contents;\n
          }\n
       \n
          /**\n
           * Get the evaluated contents of the view.\n
           *\n
           * @return string\n
           */\n
          protected function getContents()\n
          {\n
              return $this-&gt;engine-&gt;get($this-&gt;path, $this-&gt;gatherData());\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-15">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-15" class="code-block linenums:66">        $this-&gt;view = $view;\n
              $this-&gt;path = $path;\n
              $this-&gt;engine = $engine;\n
              $this-&gt;factory = $factory;\n
       \n
              $this-&gt;data = $data instanceof Arrayable ? $data-&gt;toArray() : (array) $data;\n
          }\n
       \n
          /**\n
           * Get the string contents of the view.\n
           *\n
           * @param  callable|null  $callback\n
           * @return string\n
           *\n
           * @throws \Throwable\n
           */\n
          public function render(callable $callback = null)\n
          {\n
              try {\n
                  $contents = $this-&gt;renderContents();\n
       \n
                  $response = isset($callback) ? call_user_func($callback, $this, $contents) : null;\n
       \n
                  // Once we have the contents of the view, we will flush the sections if we are\n
                  // done rendering all views so that there is nothing left hanging over when\n
                  // another view gets rendered in the future by the application developer.\n
                  $this-&gt;factory-&gt;flushStateIfDoneRendering();\n
       \n
                  return ! is_null($response) ? $response : $contents;\n
              } catch (Exception $e) {\n
                  $this-&gt;factory-&gt;flushState();\n
       \n
                  throw $e;\n
              } catch (Throwable $e) {\n
                  $this-&gt;factory-&gt;flushState();\n
       \n
                  throw $e;\n
              }\n
          }\n
       </pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-16">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Http</div>/<div class="delimiter">Response.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-16" class="code-block linenums:23">     * @return $this\n
           */\n
          public function setContent($content)\n
          {\n
              $this-&gt;original = $content;\n
       \n
              // If the content is &quot;JSONable&quot; we will set the appropriate header and convert\n
              // the content to JSON. This is useful when returning something like models\n
              // from routes that will be automatically transformed to their JSON form.\n
              if ($this-&gt;shouldBeJson($content)) {\n
                  $this-&gt;header(&#039;Content-Type&#039;, &#039;application/json&#039;);\n
       \n
                  $content = $this-&gt;morphToJson($content);\n
              }\n
       \n
              // If this content implements the &quot;Renderable&quot; interface then we will call the\n
              // render method on the object so we will avoid any &quot;__toString&quot; exceptions\n
              // that might be thrown and have their errors obscured by PHP&#039;s handling.\n
              elseif ($content instanceof Renderable) {\n
                  $content = $content-&gt;render();\n
              }\n
       \n
              parent::setContent($content);\n
       \n
              return $this;\n
          }\n
       \n
          /**\n
           * Determine if the given content should be turned into JSON.\n
           *\n
           * @param  mixed  $content\n
           * @return bool\n
           */\n
          protected function shouldBeJson($content)\n
          {\n
              return $content instanceof Arrayable ||\n
                     $content instanceof Jsonable ||\n
                     $content instanceof ArrayObject ||\n
                     $content instanceof JsonSerializable ||\n
                     is_array($content);</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-17">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">symfony</div>/<div class="delimiter">http-foundation</div>/<div class="delimiter">Response.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-17" class="code-block linenums:181">        504 =&gt; &#039;Gateway Timeout&#039;,\n
              505 =&gt; &#039;HTTP Version Not Supported&#039;,\n
              506 =&gt; &#039;Variant Also Negotiates&#039;,                                     // RFC2295\n
              507 =&gt; &#039;Insufficient Storage&#039;,                                        // RFC4918\n
              508 =&gt; &#039;Loop Detected&#039;,                                               // RFC5842\n
              510 =&gt; &#039;Not Extended&#039;,                                                // RFC2774\n
              511 =&gt; &#039;Network Authentication Required&#039;,                             // RFC6585\n
          );\n
       \n
          /**\n
           * @param mixed $content The response content, see setContent()\n
           * @param int   $status  The response status code\n
           * @param array $headers An array of response headers\n
           *\n
           * @throws \InvalidArgumentException When the HTTP status code is not valid\n
           */\n
          public function __construct($content = &#039;&#039;, $status = 200, $headers = array())\n
          {\n
              $this-&gt;headers = new ResponseHeaderBag($headers);\n
              $this-&gt;setContent($content);\n
              $this-&gt;setStatusCode($status);\n
              $this-&gt;setProtocolVersion(&#039;1.0&#039;);\n
       \n
              /* RFC2616 - 14.18 says all Responses need to have a Date */\n
              if (!$this-&gt;headers-&gt;has(&#039;Date&#039;)) {\n
                  $this-&gt;setDate(\DateTime::createFromFormat(&#039;U&#039;, time()));\n
              }\n
          }\n
       \n
          /**\n
           * Factory method for chainability.\n
           *\n
           * Example:\n
           *\n
           *     return Response::create($body, 200)\n
           *         -&gt;setSharedMaxAge(300);\n
           *\n
           * @param mixed $content The response content, see setContent()\n
           * @param int   $status  The response status code\n
           * @param array $headers An array of response headers</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-17" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-917179200 data-indent-pad="  "><abbr title="Illuminate\View\View" class=sf-dump-note>View</abbr> {<a class=sf-dump-ref>#803</a>}\n
      </pre><script>Sfdump("sf-dump-917179200")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-18">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-18" class="code-block linenums:705">     * @param  mixed  $response\n
           * @return \Illuminate\Http\Response|\Illuminate\Http\JsonResponse\n
           */\n
          public static function toResponse($request, $response)\n
          {\n
              if ($response instanceof Responsable) {\n
                  $response = $response-&gt;toResponse($request);\n
              }\n
       \n
              if ($response instanceof PsrResponseInterface) {\n
                  $response = (new HttpFoundationFactory)-&gt;createResponse($response);\n
              } elseif (! $response instanceof SymfonyResponse &amp;&amp;\n
                         ($response instanceof Arrayable ||\n
                          $response instanceof Jsonable ||\n
                          $response instanceof ArrayObject ||\n
                          $response instanceof JsonSerializable ||\n
                          is_array($response))) {\n
                  $response = new JsonResponse($response);\n
              } elseif (! $response instanceof SymfonyResponse) {\n
                  $response = new Response($response);\n
              }\n
       \n
              if ($response-&gt;getStatusCode() === Response::HTTP_NOT_MODIFIED) {\n
                  $response-&gt;setNotModified();\n
              }\n
       \n
              return $response-&gt;prepare($request);\n
          }\n
       \n
          /**\n
           * Substitute the route bindings onto the route.\n
           *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @return \Illuminate\Routing\Route\n
           */\n
          public function substituteBindings($route)\n
          {\n
              foreach ($route-&gt;parameters() as $key =&gt; $value) {\n
                  if (isset($this-&gt;binders[$key])) {\n
                      $route-&gt;setParameter($key, $this-&gt;performBinding($key, $value, $route));</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-18" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1705576638 data-indent-pad="  "><abbr title="Illuminate\View\View" class=sf-dump-note>View</abbr> {<a class=sf-dump-ref>#803</a>}\n
      </pre><script>Sfdump("sf-dump-1705576638")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-19">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-19" class="code-block linenums:679">     * Sort the given middleware by priority.\n
           *\n
           * @param  \Illuminate\Support\Collection  $middlewares\n
           * @return array\n
           */\n
          protected function sortMiddleware(Collection $middlewares)\n
          {\n
              return (new SortedMiddleware($this-&gt;middlewarePriority, $middlewares))-&gt;all();\n
          }\n
       \n
          /**\n
           * Create a response instance from the given value.\n
           *\n
           * @param  \Symfony\Component\HttpFoundation\Request  $request\n
           * @param  mixed  $response\n
           * @return \Illuminate\Http\Response|\Illuminate\Http\JsonResponse\n
           */\n
          public function prepareResponse($request, $response)\n
          {\n
              return static::toResponse($request, $response);\n
          }\n
       \n
          /**\n
           * Static version of prepareResponse.\n
           *\n
           * @param  \Symfony\Component\HttpFoundation\Request  $request\n
           * @param  mixed  $response\n
           * @return \Illuminate\Http\Response|\Illuminate\Http\JsonResponse\n
           */\n
          public static function toResponse($request, $response)\n
          {\n
              if ($response instanceof Responsable) {\n
                  $response = $response-&gt;toResponse($request);\n
              }\n
       \n
              if ($response instanceof PsrResponseInterface) {\n
                  $response = (new HttpFoundationFactory)-&gt;createResponse($response);\n
              } elseif (! $response instanceof SymfonyResponse &amp;&amp;\n
                         ($response instanceof Arrayable ||\n
                          $response instanceof Jsonable ||</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-19" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1767809018 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1767809018-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1767809018-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1767809018")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-874415358 data-indent-pad="  "><abbr title="Illuminate\View\View" class=sf-dump-note>View</abbr> {<a class=sf-dump-ref>#803</a>}\n
      </pre><script>Sfdump("sf-dump-874415358")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-20">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-20" class="code-block linenums:639">    /**\n
           * Run the given route within a Stack &quot;onion&quot; instance.\n
           *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return mixed\n
           */\n
          protected function runRouteWithinStack(Route $route, Request $request)\n
          {\n
              $shouldSkipMiddleware = $this-&gt;container-&gt;bound(&#039;middleware.disable&#039;) &amp;&amp;\n
                                      $this-&gt;container-&gt;make(&#039;middleware.disable&#039;) === true;\n
       \n
              $middleware = $shouldSkipMiddleware ? [] : $this-&gt;gatherRouteMiddleware($route);\n
       \n
              return (new Pipeline($this-&gt;container))\n
                              -&gt;send($request)\n
                              -&gt;through($middleware)\n
                              -&gt;then(function ($request) use ($route) {\n
                                  return $this-&gt;prepareResponse(\n
                                      $request, $route-&gt;run()\n
                                  );\n
                              });\n
          }\n
       \n
          /**\n
           * Gather the middleware for the given route with resolved class names.\n
           *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @return array\n
           */\n
          public function gatherRouteMiddleware(Route $route)\n
          {\n
              $middleware = collect($route-&gt;gatherMiddleware())-&gt;map(function ($name) {\n
                  return (array) MiddlewareNameResolver::resolve($name, $this-&gt;middleware, $this-&gt;middlewareGroups);\n
              })-&gt;flatten();\n
       \n
              return $this-&gt;sortMiddleware($middleware);\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-20" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1724771355 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1724771355-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1724771355-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1724771355")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-2013814286 data-indent-pad="  "><abbr title="Illuminate\View\View" class=sf-dump-note>View</abbr> {<a class=sf-dump-ref>#803</a>}\n
      </pre><script>Sfdump("sf-dump-2013814286")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-21">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-21" class="code-block linenums:11">use Symfony\Component\Debug\Exception\FatalThrowableError;\n
       \n
      /**\n
       * This extended pipeline catches any exceptions that occur during each slice.\n
       *\n
       * The exceptions are converted to HTTP responses for proper middleware handling.\n
       */\n
      class Pipeline extends BasePipeline\n
      {\n
          /**\n
           * Get the final piece of the Closure onion.\n
           *\n
           * @param  \Closure  $destination\n
           * @return \Closure\n
           */\n
          protected function prepareDestination(Closure $destination)\n
          {\n
              return function ($passable) use ($destination) {\n
                  try {\n
                      return $destination($passable);\n
                  } catch (Exception $e) {\n
                      return $this-&gt;handleException($passable, $e);\n
                  } catch (Throwable $e) {\n
                      return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-21" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-902180903 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-902180903-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-902180903-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-902180903")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-22">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">SubstituteBindings.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-22" class="code-block linenums:22">     */\n
          public function __construct(Registrar $router)\n
          {\n
              $this-&gt;router = $router;\n
          }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              $this-&gt;router-&gt;substituteBindings($route = $request-&gt;route());\n
       \n
              $this-&gt;router-&gt;substituteImplicitBindings($route);\n
       \n
              return $next($request);\n
          }\n
      }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-22" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1985795719 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1985795719-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1985795719-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1985795719")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-23">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-23" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-23" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1521833975 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1521833975-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1521833975-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1521833975")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-636434563 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#771</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$destination</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#765</a> &hellip;}\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-636434563")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-24">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-24" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-24" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-663787748 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-663787748-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-663787748-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-663787748")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-25">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">VerifyCsrfToken.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-25" class="code-block linenums:48">    }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           *\n
           * @throws \Illuminate\Session\TokenMismatchException\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              if (\n
                  $this-&gt;isReading($request) ||\n
                  $this-&gt;runningUnitTests() ||\n
                  $this-&gt;inExceptArray($request) ||\n
                  $this-&gt;tokensMatch($request)\n
              ) {\n
                  return $this-&gt;addCookieToResponse($request, $next($request));\n
              }\n
       \n
              throw new TokenMismatchException;\n
          }\n
       \n
          /**\n
           * Determine if the HTTP request uses a ‘read’ verb.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return bool\n
           */\n
          protected function isReading($request)\n
          {\n
              return in_array($request-&gt;method(), [&#039;HEAD&#039;, &#039;GET&#039;, &#039;OPTIONS&#039;]);\n
          }\n
       \n
          /**\n
           * Determine if the application is running unit tests.\n
           *\n
           * @return bool</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-25" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-565519881 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-565519881-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-565519881-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-565519881")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-26">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-26" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-26" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1915014160 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1915014160-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1915014160-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1915014160")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1869609746 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#781</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#771</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="48 characters">Illuminate\Routing\Middleware\SubstituteBindings</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1869609746")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-27">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-27" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-27" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1644477479 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1644477479-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1644477479-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1644477479")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-28">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">ShareErrorsFromSession.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-28" class="code-block linenums:30">     * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              // If the current session has an &quot;errors&quot; variable bound to it, we will share\n
              // its value with all view instances so the views can easily access errors\n
              // without having to bind. An empty bag is set when there aren&#039;t errors.\n
              $this-&gt;view-&gt;share(\n
                  &#039;errors&#039;, $request-&gt;session()-&gt;get(&#039;errors&#039;) ?: new ViewErrorBag\n
              );\n
       \n
              // Putting the errors in the view for every view allows the developer to just\n
              // assume that some errors are always available, which is convenient since\n
              // they don&#039;t have to continually run checks for the presence of errors.\n
       \n
              return $next($request);\n
          }\n
      }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-28" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-669907661 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-669907661-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-669907661-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-669907661")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-29">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-29" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-29" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1619837080 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1619837080-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1619837080-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1619837080")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1093712131 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#782</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#781</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="35 characters">App\Http\Middleware\VerifyCsrfToken</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1093712131")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-30">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-30" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-30" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-384075601 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-384075601-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-384075601-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-384075601")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-31">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Session</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">StartSession.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-31" class="code-block linenums:44">     * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              $this-&gt;sessionHandled = true;\n
       \n
              // If a session driver has been configured, we will need to start the session here\n
              // so that the data is ready for an application. Note that the Laravel sessions\n
              // do not make use of PHP &quot;native&quot; sessions in any way since they are crappy.\n
              if ($this-&gt;sessionConfigured()) {\n
                  $request-&gt;setLaravelSession(\n
                      $session = $this-&gt;startSession($request)\n
                  );\n
       \n
                  $this-&gt;collectGarbage($session);\n
              }\n
       \n
              $response = $next($request);\n
       \n
              // Again, if the session has been configured we will need to close out the session\n
              // so that the attributes may be persisted to some storage medium. We will also\n
              // add the session identifier cookie to the application response headers now.\n
              if ($this-&gt;sessionConfigured()) {\n
                  $this-&gt;storeCurrentUrl($request, $session);\n
       \n
                  $this-&gt;addCookieToResponse($response, $session);\n
              }\n
       \n
              return $response;\n
          }\n
       \n
          /**\n
           * Perform any final actions for the request lifecycle.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Symfony\Component\HttpFoundation\Response  $response\n
           * @return void\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-31" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1168353394 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1168353394-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1168353394-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1168353394")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-32">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-32" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-32" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1532661793 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1532661793-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1532661793-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1532661793")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-209206497 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#783</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#782</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="49 characters">Illuminate\View\Middleware\ShareErrorsFromSession</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-209206497")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-33">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-33" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-33" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-317301924 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-317301924-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-317301924-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-317301924")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-34">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Cookie</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">AddQueuedCookiesToResponse.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-34" class="code-block linenums:18">     * Create a new CookieQueue instance.\n
           *\n
           * @param  \Illuminate\Contracts\Cookie\QueueingFactory  $cookies\n
           * @return void\n
           */\n
          public function __construct(CookieJar $cookies)\n
          {\n
              $this-&gt;cookies = $cookies;\n
          }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              $response = $next($request);\n
       \n
              foreach ($this-&gt;cookies-&gt;getQueuedCookies() as $cookie) {\n
                  $response-&gt;headers-&gt;setCookie($cookie);\n
              }\n
       \n
              return $response;\n
          }\n
      }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-34" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2088600465 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2088600465-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2088600465-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-2088600465")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-35">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-35" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-35" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1333975201 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1333975201-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1333975201-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1333975201")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1576124524 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#784</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#783</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="42 characters">Illuminate\Session\Middleware\StartSession</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1576124524")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-36">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-36" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-36" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1764288980 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1764288980-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1764288980-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1764288980")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-37">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Cookie</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">EncryptCookies.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-37" class="code-block linenums:40">     * Disable encryption for the given cookie name(s).\n
           *\n
           * @param  string|array  $cookieName\n
           * @return void\n
           */\n
          public function disableFor($cookieName)\n
          {\n
              $this-&gt;except = array_merge($this-&gt;except, (array) $cookieName);\n
          }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              return $this-&gt;encrypt($next($this-&gt;decrypt($request)));\n
          }\n
       \n
          /**\n
           * Decrypt the cookies on the request.\n
           *\n
           * @param  \Symfony\Component\HttpFoundation\Request  $request\n
           * @return \Symfony\Component\HttpFoundation\Request\n
           */\n
          protected function decrypt(Request $request)\n
          {\n
              foreach ($request-&gt;cookies as $key =&gt; $c) {\n
                  if ($this-&gt;isDisabled($key)) {\n
                      continue;\n
                  }\n
       \n
                  try {\n
                      $request-&gt;cookies-&gt;set($key, $this-&gt;decryptCookie($c));\n
                  } catch (DecryptException $e) {\n
                      $request-&gt;cookies-&gt;set($key, null);\n
                  }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-37" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-175443403 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-175443403-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-175443403-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-175443403")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-38">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-38" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-38" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1843443976 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1843443976-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1843443976-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1843443976")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-173331336 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#785</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#784</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="55 characters">Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-173331336")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-39">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-39" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-39" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1121182344 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1121182344-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1121182344-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1121182344")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-40">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-40" class="code-block linenums:83">    public function via($method)\n
          {\n
              $this-&gt;method = $method;\n
       \n
              return $this;\n
          }\n
       \n
          /**\n
           * Run the pipeline with a final destination callback.\n
           *\n
           * @param  \Closure  $destination\n
           * @return mixed\n
           */\n
          public function then(Closure $destination)\n
          {\n
              $pipeline = array_reduce(\n
                  array_reverse($this-&gt;pipes), $this-&gt;carry(), $this-&gt;prepareDestination($destination)\n
              );\n
       \n
              return $pipeline($this-&gt;passable);\n
          }\n
       \n
          /**\n
           * Get the final piece of the Closure onion.\n
           *\n
           * @param  \Closure  $destination\n
           * @return \Closure\n
           */\n
          protected function prepareDestination(Closure $destination)\n
          {\n
              return function ($passable) use ($destination) {\n
                  return $destination($passable);\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-40" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2120436011 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2120436011-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2120436011-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-2120436011")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-41">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-41" class="code-block linenums:641">     *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return mixed\n
           */\n
          protected function runRouteWithinStack(Route $route, Request $request)\n
          {\n
              $shouldSkipMiddleware = $this-&gt;container-&gt;bound(&#039;middleware.disable&#039;) &amp;&amp;\n
                                      $this-&gt;container-&gt;make(&#039;middleware.disable&#039;) === true;\n
       \n
              $middleware = $shouldSkipMiddleware ? [] : $this-&gt;gatherRouteMiddleware($route);\n
       \n
              return (new Pipeline($this-&gt;container))\n
                              -&gt;send($request)\n
                              -&gt;through($middleware)\n
                              -&gt;then(function ($request) use ($route) {\n
                                  return $this-&gt;prepareResponse(\n
                                      $request, $route-&gt;run()\n
                                  );\n
                              });\n
          }\n
       \n
          /**\n
           * Gather the middleware for the given route with resolved class names.\n
           *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @return array\n
           */\n
          public function gatherRouteMiddleware(Route $route)\n
          {\n
              $middleware = collect($route-&gt;gatherMiddleware())-&gt;map(function ($name) {\n
                  return (array) MiddlewareNameResolver::resolve($name, $this-&gt;middleware, $this-&gt;middlewareGroups);\n
              })-&gt;flatten();\n
       \n
              return $this-&gt;sortMiddleware($middleware);\n
          }\n
       \n
          /**\n
           * Sort the given middleware by priority.\n
           *</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-41" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1663568909 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#765</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$request</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1663568909")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-42">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-42" class="code-block linenums:616">        return $route;\n
          }\n
       \n
          /**\n
           * Return the response for the given route.\n
           *\n
           * @param  Route  $route\n
           * @param  Request  $request\n
           * @return mixed\n
           */\n
          protected function runRoute(Request $request, Route $route)\n
          {\n
              $request-&gt;setRouteResolver(function () use ($route) {\n
                  return $route;\n
              });\n
       \n
              $this-&gt;events-&gt;dispatch(new Events\RouteMatched($route, $request));\n
       \n
              return $this-&gt;prepareResponse($request,\n
                  $this-&gt;runRouteWithinStack($route, $request)\n
              );\n
          }\n
       \n
          /**\n
           * Run the given route within a Stack &quot;onion&quot; instance.\n
           *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return mixed\n
           */\n
          protected function runRouteWithinStack(Route $route, Request $request)\n
          {\n
              $shouldSkipMiddleware = $this-&gt;container-&gt;bound(&#039;middleware.disable&#039;) &amp;&amp;\n
                                      $this-&gt;container-&gt;make(&#039;middleware.disable&#039;) === true;\n
       \n
              $middleware = $shouldSkipMiddleware ? [] : $this-&gt;gatherRouteMiddleware($route);\n
       \n
              return (new Pipeline($this-&gt;container))\n
                              -&gt;send($request)\n
                              -&gt;through($middleware)</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-42" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1157271241 data-indent-pad="  "><abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a>}\n
      </pre><script>Sfdump("sf-dump-1157271241")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1446617465 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1446617465-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1446617465-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1446617465")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-43">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-43" class="code-block linenums:582">     *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Http\Response|\Illuminate\Http\JsonResponse\n
           */\n
          public function dispatch(Request $request)\n
          {\n
              $this-&gt;currentRequest = $request;\n
       \n
              return $this-&gt;dispatchToRoute($request);\n
          }\n
       \n
          /**\n
           * Dispatch the request to a route and return the response.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return mixed\n
           */\n
          public function dispatchToRoute(Request $request)\n
          {\n
              return $this-&gt;runRoute($request, $this-&gt;findRoute($request));\n
          }\n
       \n
          /**\n
           * Find the route matching a given request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Routing\Route\n
           */\n
          protected function findRoute($request)\n
          {\n
              $this-&gt;current = $route = $this-&gt;routes-&gt;match($request);\n
       \n
              $this-&gt;container-&gt;instance(Route::class, $route);\n
       \n
              return $route;\n
          }\n
       \n
          /**\n
           * Return the response for the given route.\n
           *</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-43" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-15025551 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-15025551-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-15025551-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-15025551")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-2013468099 data-indent-pad="  "><abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a>}\n
      </pre><script>Sfdump("sf-dump-2013468099")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-44">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-44" class="code-block linenums:571">     * @return mixed\n
           */\n
          public function respondWithRoute($name)\n
          {\n
              $route = tap($this-&gt;routes-&gt;getByName($name))-&gt;bind($this-&gt;currentRequest);\n
       \n
              return $this-&gt;runRoute($this-&gt;currentRequest, $route);\n
          }\n
       \n
          /**\n
           * Dispatch the request to the application.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Http\Response|\Illuminate\Http\JsonResponse\n
           */\n
          public function dispatch(Request $request)\n
          {\n
              $this-&gt;currentRequest = $request;\n
       \n
              return $this-&gt;dispatchToRoute($request);\n
          }\n
       \n
          /**\n
           * Dispatch the request to a route and return the response.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return mixed\n
           */\n
          public function dispatchToRoute(Request $request)\n
          {\n
              return $this-&gt;runRoute($request, $this-&gt;findRoute($request));\n
          }\n
       \n
          /**\n
           * Find the route matching a given request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Routing\Route\n
           */\n
          protected function findRoute($request)</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-44" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-152396809 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-152396809-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-152396809-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-152396809")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-45">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-45" class="code-block linenums:157">     * @return void\n
           */\n
          public function bootstrap()\n
          {\n
              if (! $this-&gt;app-&gt;hasBeenBootstrapped()) {\n
                  $this-&gt;app-&gt;bootstrapWith($this-&gt;bootstrappers());\n
              }\n
          }\n
       \n
          /**\n
           * Get the route dispatcher callback.\n
           *\n
           * @return \Closure\n
           */\n
          protected function dispatchToRouter()\n
          {\n
              return function ($request) {\n
                  $this-&gt;app-&gt;instance(&#039;request&#039;, $request);\n
       \n
                  return $this-&gt;router-&gt;dispatch($request);\n
              };\n
          }\n
       \n
          /**\n
           * Call the terminate method on any terminable middleware.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Illuminate\Http\Response  $response\n
           * @return void\n
           */\n
          public function terminate($request, $response)\n
          {\n
              $this-&gt;terminateMiddleware($request, $response);\n
       \n
              $this-&gt;app-&gt;terminate();\n
          }\n
       \n
          /**\n
           * Call the terminate method on any terminable middleware.\n
           *</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-45" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-924708914 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-924708914-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-924708914-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-924708914")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-46">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-46" class="code-block linenums:11">use Symfony\Component\Debug\Exception\FatalThrowableError;\n
       \n
      /**\n
       * This extended pipeline catches any exceptions that occur during each slice.\n
       *\n
       * The exceptions are converted to HTTP responses for proper middleware handling.\n
       */\n
      class Pipeline extends BasePipeline\n
      {\n
          /**\n
           * Get the final piece of the Closure onion.\n
           *\n
           * @param  \Closure  $destination\n
           * @return \Closure\n
           */\n
          protected function prepareDestination(Closure $destination)\n
          {\n
              return function ($passable) use ($destination) {\n
                  try {\n
                      return $destination($passable);\n
                  } catch (Exception $e) {\n
                      return $this-&gt;handleException($passable, $e);\n
                  } catch (Throwable $e) {\n
                      return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-46" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1851312527 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1851312527-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1851312527-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1851312527")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-47">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">barryvdh</div>/<div class="delimiter">laravel-debugbar</div>/<div class="delimiter">src</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">InjectDebugbar.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-47" class="code-block linenums:39">     * @param  LaravelDebugbar $debugbar\n
           */\n
          public function __construct(Container $container, LaravelDebugbar $debugbar)\n
          {\n
              $this-&gt;container = $container;\n
              $this-&gt;debugbar = $debugbar;\n
              $this-&gt;except = config(&#039;debugbar.except&#039;) ?: [];\n
          }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  Request  $request\n
           * @param  Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              if (!$this-&gt;debugbar-&gt;isEnabled() || $this-&gt;inExceptArray($request)) {\n
                  return $next($request);\n
              }\n
       \n
              $this-&gt;debugbar-&gt;boot();\n
       \n
              try {\n
                  /** @var \Illuminate\Http\Response $response */\n
                  $response = $next($request);\n
              } catch (Exception $e) {\n
                  $response = $this-&gt;handleException($request, $e);\n
              } catch (Error $error) {\n
                  $e = new FatalThrowableError($error);\n
                  $response = $this-&gt;handleException($request, $e);\n
              }\n
       \n
              // Modify the response to add the Debugbar\n
              $this-&gt;debugbar-&gt;modifyResponse($request, $response);\n
       \n
              return $response;\n
       \n
          }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-47" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1179395288 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1179395288-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1179395288-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1179395288")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-48">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-48" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-48" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2008538283 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2008538283-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2008538283-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-2008538283")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1981425396 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#49</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$destination</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#53</a> &hellip;}\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1981425396")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-49">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-49" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-49" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-592992278 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-592992278-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-592992278-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-592992278")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-50">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">fideloper</div>/<div class="delimiter">proxy</div>/<div class="delimiter">src</div>/<div class="delimiter">TrustProxies.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-50" class="code-block linenums:37">    {\n
              $this-&gt;config = $config;\n
          }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param \Illuminate\Http\Request $request\n
           * @param \Closure                 $next\n
           *\n
           * @throws \Symfony\Component\HttpKernel\Exception\HttpException\n
           *\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              $this-&gt;setTrustedProxyHeaderNames($request);\n
              $this-&gt;setTrustedProxyIpAddresses($request);\n
       \n
              return $next($request);\n
          }\n
       \n
          /**\n
           * Sets the trusted proxies on the request to the value of trustedproxy.proxies\n
           *\n
           * @param \Illuminate\Http\Request $request\n
           */\n
          protected function setTrustedProxyIpAddresses($request)\n
          {\n
              $trustedIps = $this-&gt;proxies ?: $this-&gt;config-&gt;get(&#039;trustedproxy.proxies&#039;);\n
       \n
              // We only trust specific IP addresses\n
              if (is_array($trustedIps)) {\n
                  return $this-&gt;setTrustedProxyIpAddressesToSpecificIps($request, $trustedIps);\n
              }\n
       \n
              // We trust any IP address that calls us, but not proxies further\n
              // up the forwarding chain.\n
              // TODO: Determine if this should only trust the first IP address\n
              //       Currently it trusts the entire chain (array of IPs),</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-50" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1668192410 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1668192410-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1668192410-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1668192410")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-51">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-51" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-51" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-914237719 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-914237719-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-914237719-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-914237719")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1748878436 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#51</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#49</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="43 characters">Barryvdh\Debugbar\Middleware\InjectDebugbar</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1748878436")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-52">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-52" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-52" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1344746976 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1344746976-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1344746976-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1344746976")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-53">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">TransformsRequest.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-53" class="code-block linenums:11">     * The additional attributes passed to the middleware.\n
           *\n
           * @var array\n
           */\n
          protected $attributes = [];\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next, ...$attributes)\n
          {\n
              $this-&gt;attributes = $attributes;\n
       \n
              $this-&gt;clean($request);\n
       \n
              return $next($request);\n
          }\n
       \n
          /**\n
           * Clean the request&#039;s data.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return void\n
           */\n
          protected function clean($request)\n
          {\n
              $this-&gt;cleanParameterBag($request-&gt;query);\n
       \n
              if ($request-&gt;isJson()) {\n
                  $this-&gt;cleanParameterBag($request-&gt;json());\n
              } else {\n
                  $this-&gt;cleanParameterBag($request-&gt;request);\n
              }\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-53" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-752408576 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-752408576-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-752408576-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-752408576")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-54">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-54" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-54" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1106997150 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1106997150-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1106997150-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1106997150")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1975352626 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#52</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#51</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="32 characters">App\Http\Middleware\TrustProxies</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1975352626")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-55">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-55" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-55" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-659618384 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-659618384-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-659618384-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-659618384")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-56">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">TransformsRequest.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-56" class="code-block linenums:11">     * The additional attributes passed to the middleware.\n
           *\n
           * @var array\n
           */\n
          protected $attributes = [];\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next, ...$attributes)\n
          {\n
              $this-&gt;attributes = $attributes;\n
       \n
              $this-&gt;clean($request);\n
       \n
              return $next($request);\n
          }\n
       \n
          /**\n
           * Clean the request&#039;s data.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return void\n
           */\n
          protected function clean($request)\n
          {\n
              $this-&gt;cleanParameterBag($request-&gt;query);\n
       \n
              if ($request-&gt;isJson()) {\n
                  $this-&gt;cleanParameterBag($request-&gt;json());\n
              } else {\n
                  $this-&gt;cleanParameterBag($request-&gt;request);\n
              }\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-56" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1835560850 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1835560850-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1835560850-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1835560850")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-57">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-57" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-57" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1435933971 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1435933971-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1435933971-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1435933971")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-979566198 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#54</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#52</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="63 characters">Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-979566198")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-58">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-58" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-58" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-858071660 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-858071660-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-858071660-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-858071660")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-59">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">ValidatePostSize.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-59" class="code-block linenums:8">class ValidatePostSize\n
      {\n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           *\n
           * @throws \Illuminate\Http\Exceptions\PostTooLargeException\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              $max = $this-&gt;getPostMaxSize();\n
       \n
              if ($max &gt; 0 &amp;&amp; $request-&gt;server(&#039;CONTENT_LENGTH&#039;) &gt; $max) {\n
                  throw new PostTooLargeException;\n
              }\n
       \n
              return $next($request);\n
          }\n
       \n
          /**\n
           * Determine the server &#039;post_max_size&#039; as bytes.\n
           *\n
           * @return int\n
           */\n
          protected function getPostMaxSize()\n
          {\n
              if (is_numeric($postMaxSize = ini_get(&#039;post_max_size&#039;))) {\n
                  return (int) $postMaxSize;\n
              }\n
       \n
              $metric = strtoupper(substr($postMaxSize, -1));\n
              $postMaxSize = (int) $postMaxSize;\n
       \n
              switch ($metric) {\n
                  case &#039;K&#039;:\n
                      return $postMaxSize * 1024;\n
                  case &#039;M&#039;:</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-59" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1659082786 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1659082786-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1659082786-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1659082786")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-60">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-60" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-60" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1140267334 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1140267334-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1140267334-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1140267334")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1363224412 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#48</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#54</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="31 characters">App\Http\Middleware\TrimStrings</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1363224412")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-61">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-61" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-61" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-616288143 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-616288143-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-616288143-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-616288143")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-62">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">CheckForMaintenanceMode.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-62" class="code-block linenums:27">    }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           *\n
           * @throws \Symfony\Component\HttpKernel\Exception\HttpException\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              if ($this-&gt;app-&gt;isDownForMaintenance()) {\n
                  $data = json_decode(file_get_contents($this-&gt;app-&gt;storagePath().&#039;/framework/down&#039;), true);\n
       \n
                  throw new MaintenanceModeException($data[&#039;time&#039;], $data[&#039;retry&#039;], $data[&#039;message&#039;]);\n
              }\n
       \n
              return $next($request);\n
          }\n
      }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-62" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1868740898 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1868740898-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1868740898-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1868740898")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-63">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-63" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-63" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-333596502 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-333596502-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-333596502-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-333596502")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1080845807 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#725</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#48</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="54 characters">Illuminate\Foundation\Http\Middleware\ValidatePostSize</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1080845807")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-64">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-64" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-64" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1266031918 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1266031918-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1266031918-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1266031918")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-65">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-65" class="code-block linenums:83">    public function via($method)\n
          {\n
              $this-&gt;method = $method;\n
       \n
              return $this;\n
          }\n
       \n
          /**\n
           * Run the pipeline with a final destination callback.\n
           *\n
           * @param  \Closure  $destination\n
           * @return mixed\n
           */\n
          public function then(Closure $destination)\n
          {\n
              $pipeline = array_reduce(\n
                  array_reverse($this-&gt;pipes), $this-&gt;carry(), $this-&gt;prepareDestination($destination)\n
              );\n
       \n
              return $pipeline($this-&gt;passable);\n
          }\n
       \n
          /**\n
           * Get the final piece of the Closure onion.\n
           *\n
           * @param  \Closure  $destination\n
           * @return \Closure\n
           */\n
          protected function prepareDestination(Closure $destination)\n
          {\n
              return function ($passable) use ($destination) {\n
                  return $destination($passable);\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-65" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1394104865 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1394104865-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1394104865-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1394104865")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-66">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-66" class="code-block linenums:132">    }\n
       \n
          /**\n
           * Send the given request through the middleware / router.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Http\Response\n
           */\n
          protected function sendRequestThroughRouter($request)\n
          {\n
              $this-&gt;app-&gt;instance(&#039;request&#039;, $request);\n
       \n
              Facade::clearResolvedInstance(&#039;request&#039;);\n
       \n
              $this-&gt;bootstrap();\n
       \n
              return (new Pipeline($this-&gt;app))\n
                          -&gt;send($request)\n
                          -&gt;through($this-&gt;app-&gt;shouldSkipMiddleware() ? [] : $this-&gt;middleware)\n
                          -&gt;then($this-&gt;dispatchToRouter());\n
          }\n
       \n
          /**\n
           * Bootstrap the application for HTTP requests.\n
           *\n
           * @return void\n
           */\n
          public function bootstrap()\n
          {\n
              if (! $this-&gt;app-&gt;hasBeenBootstrapped()) {\n
                  $this-&gt;app-&gt;bootstrapWith($this-&gt;bootstrappers());\n
              }\n
          }\n
       \n
          /**\n
           * Get the route dispatcher callback.\n
           *\n
           * @return \Closure\n
           */\n
          protected function dispatchToRouter()</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-66" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-604865354 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#53</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Foundation\Http\Kernel\n
      33 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Foundation\Http</span><span class=sf-dump-ellipsis>\</span>Kernel</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="App\Http\Kernel" class=sf-dump-note>Kernel</abbr> {<a class=sf-dump-ref>#129</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$request</span>: {}\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-604865354")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-67">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-67" class="code-block linenums:97">            $router-&gt;middlewareGroup($key, $middleware);\n
              }\n
       \n
              foreach ($this-&gt;routeMiddleware as $key =&gt; $middleware) {\n
                  $router-&gt;aliasMiddleware($key, $middleware);\n
              }\n
          }\n
       \n
          /**\n
           * Handle an incoming HTTP request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Http\Response\n
           */\n
          public function handle($request)\n
          {\n
              try {\n
                  $request-&gt;enableHttpMethodParameterOverride();\n
       \n
                  $response = $this-&gt;sendRequestThroughRouter($request);\n
              } catch (Exception $e) {\n
                  $this-&gt;reportException($e);\n
       \n
                  $response = $this-&gt;renderException($request, $e);\n
              } catch (Throwable $e) {\n
                  $this-&gt;reportException($e = new FatalThrowableError($e));\n
       \n
                  $response = $this-&gt;renderException($request, $e);\n
              }\n
       \n
              $this-&gt;app[&#039;events&#039;]-&gt;dispatch(\n
                  new Events\RequestHandled($request, $response)\n
              );\n
       \n
              return $response;\n
          }\n
       \n
          /**\n
           * Send the given request through the middleware / router.\n
           *</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-67" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-127981804 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-127981804-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-127981804-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-127981804")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-68">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Testing</div>/<div class="delimiter">Concerns</div>/<div class="delimiter">MakesHttpRequests.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-68" class="code-block linenums:305">     * @param  array  $parameters\n
           * @param  array  $cookies\n
           * @param  array  $files\n
           * @param  array  $server\n
           * @param  string  $content\n
           * @return \Illuminate\Foundation\Testing\TestResponse\n
           */\n
          public function call($method, $uri, $parameters = [], $cookies = [], $files = [], $server = [], $content = null)\n
          {\n
              $kernel = $this-&gt;app-&gt;make(HttpKernel::class);\n
       \n
              $files = array_merge($files, $this-&gt;extractFilesFromDataArray($parameters));\n
       \n
              $symfonyRequest = SymfonyRequest::create(\n
                  $this-&gt;prepareUrlForRequest($uri), $method, $parameters,\n
                  $cookies, $files, array_replace($this-&gt;serverVariables, $server), $content\n
              );\n
       \n
              $response = $kernel-&gt;handle(\n
                  $request = Request::createFromBase($symfonyRequest)\n
              );\n
       \n
              if ($this-&gt;followRedirects) {\n
                  $response = $this-&gt;followRedirects($response);\n
              }\n
       \n
              $kernel-&gt;terminate($request, $response);\n
       \n
              return $this-&gt;createTestResponse($response);\n
          }\n
       \n
          /**\n
           * Turn the given URI into a fully qualified URL.\n
           *\n
           * @param  string  $uri\n
           * @return string\n
           */\n
          protected function prepareUrlForRequest($uri)\n
          {\n
              if (Str::startsWith($uri, &#039;/&#039;)) {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-68" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-276446831 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-276446831-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-276446831-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-276446831")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-69">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Testing</div>/<div class="delimiter">Concerns</div>/<div class="delimiter">MakesHttpRequests.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-69" class="code-block linenums:128">     * @param  string  $url\n
           * @return $this\n
           */\n
          public function from(string $url)\n
          {\n
              return $this-&gt;withHeader(&#039;referer&#039;, $url);\n
          }\n
       \n
          /**\n
           * Visit the given URI with a GET request.\n
           *\n
           * @param  string  $uri\n
           * @param  array  $headers\n
           * @return \Illuminate\Foundation\Testing\TestResponse\n
           */\n
          public function get($uri, array $headers = [])\n
          {\n
              $server = $this-&gt;transformHeadersToServerVars($headers);\n
       \n
              return $this-&gt;call(&#039;GET&#039;, $uri, [], [], [], $server);\n
          }\n
       \n
          /**\n
           * Visit the given URI with a GET request, expecting a JSON response.\n
           *\n
           * @param  string  $uri\n
           * @param  array  $headers\n
           * @return \Illuminate\Foundation\Testing\TestResponse\n
           */\n
          public function getJson($uri, array $headers = [])\n
          {\n
              return $this-&gt;json(&#039;GET&#039;, $uri, [], $headers);\n
          }\n
       \n
          /**\n
           * Visit the given URI with a POST request.\n
           *\n
           * @param  string  $uri\n
           * @param  array  $data\n
           * @param  array  $headers</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-69" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1365857477 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">GET</span>"\n
      </pre><script>Sfdump("sf-dump-1365857477")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1398605976 data-indent-pad="  ">"<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
      </pre><script>Sfdump("sf-dump-1398605976")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-960532775 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-960532775")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-10940435 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-10940435")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-965064580 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-965064580")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-986106960 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-986106960")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-70">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">tests</div>/<div class="delimiter">Feature</div>/<div class="delimiter">ReadThreadsTest.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-70" class="code-block linenums:24">        $response = $this-&gt;get(&#039;/threads&#039;);\n
       \n
              $response-&gt;assertStatus(200)\n
                      -&gt;assertSee($this-&gt;thread-&gt;title);\n
          }\n
       \n
          /** @test */\n
          public function a_user_can_visit_specific_thread()\n
          {\n
              $response = $this-&gt;get($this-&gt;thread-&gt;path());\n
       \n
              $response-&gt;assertSee($this-&gt;thread-&gt;title);\n
          }\n
       \n
          /** @test */\n
          public function a_user_is_able_to_read_replies_that_are_associated_with_the_thread()\n
          {\n
              $reply = factory(Reply::class)-&gt;create([&#039;thread_id&#039;=&gt; $this-&gt;thread-&gt;id]);\n
       \n
              $response = $this-&gt;get($this-&gt;thread-&gt;path());\n
              dd($response);\n
                               //-&gt;assertSee($reply-&gt;body);\n
          }\n
       \n
          /** @test */\n
          public function a_user_can_filter_threads_according_to_a_tag()\n
          {\n
              $channel = factory(\App\Channel::class)-&gt;create();\n
              $thread = factory(\App\Thread::class)-&gt;create([&#039;channel_id&#039; =&gt; $channel-&gt;id]);\n
              $secondThread = factory(\App\Thread::class)-&gt;create();\n
       \n
              $this-&gt;get(&#039;/threads/&#039;.$channel-&gt;slug)\n
                   -&gt;assertSee($thread-&gt;title)-&gt;assertDontSee($secondThread-&gt;title);\n
          }\n
       \n
          /** @test */\n
          public function a_user_can_filter_thread_by_username()\n
          {\n
              $user = factory(\App\User::class)-&gt;create([&#039;name&#039; =&gt; &#039;Bobby&#039;]);\n
              $threadByBobby = factory(\App\Thread::class)-&gt;create([&#039;user_id&#039; =&gt; $user-&gt;id]);</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-70" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-46287616 data-indent-pad="  ">"<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
      </pre><script>Sfdump("sf-dump-46287616")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-71">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">[internal]</div></strong>\n
                        </div>\n
                      \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-72">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-72" class="code-block linenums:1050">    {\n
              if ($this-&gt;name === null) {\n
                  throw new Exception(\n
                      &#039;PHPUnit\Framework\TestCase::$name must not be null.&#039;\n
                  );\n
              }\n
       \n
              try {\n
                  $class  = new ReflectionClass($this);\n
                  $method = $class-&gt;getMethod($this-&gt;name);\n
              } catch (ReflectionException $e) {\n
                  $this-&gt;fail($e-&gt;getMessage());\n
              }\n
       \n
              $testArguments = \array_merge($this-&gt;data, $this-&gt;dependencyInput);\n
       \n
              $this-&gt;registerMockObjectsFromTestArguments($testArguments);\n
       \n
              try {\n
                  $testResult = $method-&gt;invokeArgs($this, $testArguments);\n
              } catch (Throwable $_e) {\n
                  $e = $_e;\n
              }\n
       \n
              if (isset($e)) {\n
                  $checkException = false;\n
       \n
                  if (!($e instanceof SkippedTestError) &amp;&amp; \is_string($this-&gt;expectedException)) {\n
                      $checkException = true;\n
       \n
                      if ($e instanceof Exception) {\n
                          $checkException = false;\n
                      }\n
       \n
                      $reflector = new ReflectionClass($this-&gt;expectedException);\n
       \n
                      if ($this-&gt;expectedException === &#039;PHPUnit\Framework\Exception&#039; ||\n
                          $this-&gt;expectedException === &#039;\PHPUnit\Framework\Exception&#039; ||\n
                          $reflector-&gt;isSubclassOf(&#039;PHPUnit\Framework\Exception&#039;)) {\n
                          $checkException = true;</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-72" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2147284072 data-indent-pad="  "><abbr title="Tests\Feature\ReadThreadsTest" class=sf-dump-note>ReadThreadsTest</abbr> {<a class=sf-dump-ref>#387</a>}\n
      </pre><script>Sfdump("sf-dump-2147284072")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-375024953 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-375024953")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-73">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-73" class="code-block linenums:909">        try {\n
                  $hasMetRequirements = false;\n
                  $this-&gt;checkRequirements();\n
                  $hasMetRequirements = true;\n
       \n
                  if ($this-&gt;inIsolation) {\n
                      foreach ($hookMethods[&#039;beforeClass&#039;] as $method) {\n
                          $this-&gt;$method();\n
                      }\n
                  }\n
       \n
                  $this-&gt;setExpectedExceptionFromAnnotation();\n
                  $this-&gt;setDoesNotPerformAssertionsFromAnnotation();\n
       \n
                  foreach ($hookMethods[&#039;before&#039;] as $method) {\n
                      $this-&gt;$method();\n
                  }\n
       \n
                  $this-&gt;assertPreConditions();\n
                  $this-&gt;testResult = $this-&gt;runTest();\n
                  $this-&gt;verifyMockObjects();\n
                  $this-&gt;assertPostConditions();\n
       \n
                  if (!empty($this-&gt;warnings)) {\n
                      throw new Warning(\n
                          \implode(\n
                              &quot;\n&quot;,\n
                              \array_unique($this-&gt;warnings)\n
                          )\n
                      );\n
                  }\n
       \n
                  $this-&gt;status = BaseTestRunner::STATUS_PASSED;\n
              } catch (IncompleteTest $e) {\n
                  $this-&gt;status        = BaseTestRunner::STATUS_INCOMPLETE;\n
                  $this-&gt;statusMessage = $e-&gt;getMessage();\n
              } catch (SkippedTest $e) {\n
                  $this-&gt;status        = BaseTestRunner::STATUS_SKIPPED;\n
                  $this-&gt;statusMessage = $e-&gt;getMessage();\n
              } catch (Warning $e) {</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-74">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestResult.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-74" class="code-block linenums:676">                $this-&gt;enforceTimeLimit &amp;&amp;\n
                      \extension_loaded(&#039;pcntl&#039;) &amp;&amp; \class_exists(&#039;PHP_Invoker&#039;)) {\n
                      switch ($test-&gt;getSize()) {\n
                          case \PHPUnit\Util\Test::SMALL:\n
                              $_timeout = $this-&gt;timeoutForSmallTests;\n
                              break;\n
       \n
                          case \PHPUnit\Util\Test::MEDIUM:\n
                              $_timeout = $this-&gt;timeoutForMediumTests;\n
                              break;\n
       \n
                          case \PHPUnit\Util\Test::LARGE:\n
                              $_timeout = $this-&gt;timeoutForLargeTests;\n
                              break;\n
                      }\n
       \n
                      $invoker = new PHP_Invoker;\n
                      $invoker-&gt;invoke([$test, &#039;runBare&#039;], [], $_timeout);\n
                  } else {\n
                      $test-&gt;runBare();\n
                  }\n
              } catch (PHP_Invoker_TimeoutException $e) {\n
                  $this-&gt;addFailure(\n
                      $test,\n
                      new RiskyTestError(\n
                          $e-&gt;getMessage()\n
                      ),\n
                      $_timeout\n
                  );\n
       \n
                  $risky = true;\n
              } catch (PHPUnit_Framework_MockObject_Exception $e) {\n
                  $e = new Warning(\n
                      $e-&gt;getMessage()\n
                  );\n
       \n
                  $warning = true;\n
              } catch (AssertionFailedError $e) {\n
                  $failure = true;\n
       </pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-75">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-75" class="code-block linenums:864">                &#039;isStrictAboutTodoAnnotatedTests&#039;            =&gt; $isStrictAboutTodoAnnotatedTests,\n
                      &#039;isStrictAboutResourceUsageDuringSmallTests&#039; =&gt; $isStrictAboutResourceUsageDuringSmallTests,\n
                      &#039;codeCoverageFilter&#039;                         =&gt; $codeCoverageFilter,\n
                      &#039;configurationFilePath&#039;                      =&gt; $configurationFilePath\n
                  ];\n
       \n
                  if (!$runEntireClass) {\n
                      $var[&#039;methodName&#039;] = $this-&gt;name;\n
                  }\n
       \n
                  $template-&gt;setVar(\n
                      $var\n
                  );\n
       \n
                  $this-&gt;prepareTemplate($template);\n
       \n
                  $php = AbstractPhpProcess::factory();\n
                  $php-&gt;runTestJob($template-&gt;render(), $this, $result);\n
              } else {\n
                  $result-&gt;run($this);\n
              }\n
       \n
              if ($this-&gt;useErrorHandler !== null) {\n
                  $result-&gt;convertErrorsToExceptions($oldErrorHandlerSetting);\n
              }\n
       \n
              $this-&gt;result = null;\n
       \n
              return $result;\n
          }\n
       \n
          /**\n
           * Runs the bare test sequence.\n
           */\n
          public function runBare()\n
          {\n
              $this-&gt;numAssertions = 0;\n
       \n
              $this-&gt;snapshotGlobalState();\n
              $this-&gt;startOutputBuffering();</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-75" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1488358972 data-indent-pad="  "><abbr title="Tests\Feature\ReadThreadsTest" class=sf-dump-note>ReadThreadsTest</abbr> {<a class=sf-dump-ref>#387</a>}\n
      </pre><script>Sfdump("sf-dump-1488358972")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-76">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-76" class="code-block linenums:725"> \n
                  $this-&gt;tearDown();\n
                  $result-&gt;endTestSuite($this);\n
       \n
                  return $result;\n
              }\n
       \n
              foreach ($this as $test) {\n
                  if ($result-&gt;shouldStop()) {\n
                      break;\n
                  }\n
       \n
                  if ($test instanceof TestCase || $test instanceof self) {\n
                      $test-&gt;setbeStrictAboutChangesToGlobalState($this-&gt;beStrictAboutChangesToGlobalState);\n
                      $test-&gt;setBackupGlobals($this-&gt;backupGlobals);\n
                      $test-&gt;setBackupStaticAttributes($this-&gt;backupStaticAttributes);\n
                      $test-&gt;setRunTestInSeparateProcess($this-&gt;runTestInSeparateProcess);\n
                  }\n
       \n
                  $test-&gt;run($result);\n
              }\n
       \n
              foreach ($hookMethods[&#039;afterClass&#039;] as $afterClassMethod) {\n
                  if ($this-&gt;testCase === true &amp;&amp; \class_exists($this-&gt;name, false) &amp;&amp; \method_exists($this-&gt;name, $afterClassMethod)) {\n
                      \call_user_func([$this-&gt;name, $afterClassMethod]);\n
                  }\n
              }\n
       \n
              $this-&gt;tearDown();\n
       \n
              $result-&gt;endTestSuite($this);\n
       \n
              return $result;\n
          }\n
       \n
          /**\n
           * @param bool $runTestInSeparateProcess\n
           *\n
           * @throws Exception\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-76" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1881769741 data-indent-pad="  "><abbr title="PHPUnit\Framework\TestResult" class=sf-dump-note>TestResult</abbr> {<a class=sf-dump-ref>#13</a>}\n
      </pre><script>Sfdump("sf-dump-1881769741")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-77">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-77" class="code-block linenums:725"> \n
                  $this-&gt;tearDown();\n
                  $result-&gt;endTestSuite($this);\n
       \n
                  return $result;\n
              }\n
       \n
              foreach ($this as $test) {\n
                  if ($result-&gt;shouldStop()) {\n
                      break;\n
                  }\n
       \n
                  if ($test instanceof TestCase || $test instanceof self) {\n
                      $test-&gt;setbeStrictAboutChangesToGlobalState($this-&gt;beStrictAboutChangesToGlobalState);\n
                      $test-&gt;setBackupGlobals($this-&gt;backupGlobals);\n
                      $test-&gt;setBackupStaticAttributes($this-&gt;backupStaticAttributes);\n
                      $test-&gt;setRunTestInSeparateProcess($this-&gt;runTestInSeparateProcess);\n
                  }\n
       \n
                  $test-&gt;run($result);\n
              }\n
       \n
              foreach ($hookMethods[&#039;afterClass&#039;] as $afterClassMethod) {\n
                  if ($this-&gt;testCase === true &amp;&amp; \class_exists($this-&gt;name, false) &amp;&amp; \method_exists($this-&gt;name, $afterClassMethod)) {\n
                      \call_user_func([$this-&gt;name, $afterClassMethod]);\n
                  }\n
              }\n
       \n
              $this-&gt;tearDown();\n
       \n
              $result-&gt;endTestSuite($this);\n
       \n
              return $result;\n
          }\n
       \n
          /**\n
           * @param bool $runTestInSeparateProcess\n
           *\n
           * @throws Exception\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-77" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1666440818 data-indent-pad="  "><abbr title="PHPUnit\Framework\TestResult" class=sf-dump-note>TestResult</abbr> {<a class=sf-dump-ref>#13</a>}\n
      </pre><script>Sfdump("sf-dump-1666440818")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-78">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-78" class="code-block linenums:725"> \n
                  $this-&gt;tearDown();\n
                  $result-&gt;endTestSuite($this);\n
       \n
                  return $result;\n
              }\n
       \n
              foreach ($this as $test) {\n
                  if ($result-&gt;shouldStop()) {\n
                      break;\n
                  }\n
       \n
                  if ($test instanceof TestCase || $test instanceof self) {\n
                      $test-&gt;setbeStrictAboutChangesToGlobalState($this-&gt;beStrictAboutChangesToGlobalState);\n
                      $test-&gt;setBackupGlobals($this-&gt;backupGlobals);\n
                      $test-&gt;setBackupStaticAttributes($this-&gt;backupStaticAttributes);\n
                      $test-&gt;setRunTestInSeparateProcess($this-&gt;runTestInSeparateProcess);\n
                  }\n
       \n
                  $test-&gt;run($result);\n
              }\n
       \n
              foreach ($hookMethods[&#039;afterClass&#039;] as $afterClassMethod) {\n
                  if ($this-&gt;testCase === true &amp;&amp; \class_exists($this-&gt;name, false) &amp;&amp; \method_exists($this-&gt;name, $afterClassMethod)) {\n
                      \call_user_func([$this-&gt;name, $afterClassMethod]);\n
                  }\n
              }\n
       \n
              $this-&gt;tearDown();\n
       \n
              $result-&gt;endTestSuite($this);\n
       \n
              return $result;\n
          }\n
       \n
          /**\n
           * @param bool $runTestInSeparateProcess\n
           *\n
           * @throws Exception\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-78" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1856804519 data-indent-pad="  "><abbr title="PHPUnit\Framework\TestResult" class=sf-dump-note>TestResult</abbr> {<a class=sf-dump-ref>#13</a>}\n
      </pre><script>Sfdump("sf-dump-1856804519")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-79">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">TestRunner.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-79" class="code-block linenums:518"> \n
                  if ($codeCoverageReports &gt; 1 &amp;&amp; isset($arguments[&#039;cacheTokens&#039;])) {\n
                      $codeCoverage-&gt;setCacheTokens($arguments[&#039;cacheTokens&#039;]);\n
                  }\n
              }\n
       \n
              $result-&gt;beStrictAboutTestsThatDoNotTestAnything($arguments[&#039;reportUselessTests&#039;]);\n
              $result-&gt;beStrictAboutOutputDuringTests($arguments[&#039;disallowTestOutput&#039;]);\n
              $result-&gt;beStrictAboutTodoAnnotatedTests($arguments[&#039;disallowTodoAnnotatedTests&#039;]);\n
              $result-&gt;beStrictAboutResourceUsageDuringSmallTests($arguments[&#039;beStrictAboutResourceUsageDuringSmallTests&#039;]);\n
              $result-&gt;enforceTimeLimit($arguments[&#039;enforceTimeLimit&#039;]);\n
              $result-&gt;setTimeoutForSmallTests($arguments[&#039;timeoutForSmallTests&#039;]);\n
              $result-&gt;setTimeoutForMediumTests($arguments[&#039;timeoutForMediumTests&#039;]);\n
              $result-&gt;setTimeoutForLargeTests($arguments[&#039;timeoutForLargeTests&#039;]);\n
       \n
              if ($suite instanceof TestSuite) {\n
                  $suite-&gt;setRunTestInSeparateProcess($arguments[&#039;processIsolation&#039;]);\n
              }\n
       \n
              $suite-&gt;run($result);\n
       \n
              unset($suite);\n
              $result-&gt;flushListeners();\n
       \n
              if ($this-&gt;printer instanceof ResultPrinter) {\n
                  $this-&gt;printer-&gt;printResult($result);\n
              }\n
       \n
              if (isset($codeCoverage)) {\n
                  if (isset($arguments[&#039;coverageClover&#039;])) {\n
                      $this-&gt;printer-&gt;write(\n
                          &quot;\nGenerating code coverage report in Clover XML format ...&quot;\n
                      );\n
       \n
                      try {\n
                          $writer = new CloverReport;\n
                          $writer-&gt;process($codeCoverage, $arguments[&#039;coverageClover&#039;]);\n
       \n
                          $this-&gt;printer-&gt;write(&quot; done\n&quot;);\n
                          unset($writer);</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-79" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-425130545 data-indent-pad="  "><abbr title="PHPUnit\Framework\TestResult" class=sf-dump-note>TestResult</abbr> {<a class=sf-dump-ref>#13</a>}\n
      </pre><script>Sfdump("sf-dump-425130545")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-80">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">Command.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-80" class="code-block linenums:193"> \n
                  $suiteNames = $configuration-&gt;getTestSuiteNames();\n
                  foreach ($suiteNames as $suiteName) {\n
                      print &quot; - $suiteName\n&quot;;\n
                  }\n
       \n
                  if ($exit) {\n
                      exit(TestRunner::SUCCESS_EXIT);\n
                  }\n
       \n
                  return TestRunner::SUCCESS_EXIT;\n
              }\n
       \n
              unset(\n
                  $this-&gt;arguments[&#039;test&#039;],\n
                  $this-&gt;arguments[&#039;testFile&#039;]\n
              );\n
       \n
              try {\n
                  $result = $runner-&gt;doRun($suite, $this-&gt;arguments, $exit);\n
              } catch (Exception $e) {\n
                  print $e-&gt;getMessage() . &quot;\n&quot;;\n
              }\n
       \n
              $return = TestRunner::FAILURE_EXIT;\n
       \n
              if (isset($result) &amp;&amp; $result-&gt;wasSuccessful()) {\n
                  $return = TestRunner::SUCCESS_EXIT;\n
              } elseif (!isset($result) || $result-&gt;errorCount() &gt; 0) {\n
                  $return = TestRunner::EXCEPTION_EXIT;\n
              }\n
       \n
              if ($exit) {\n
                  exit($return);\n
              }\n
       \n
              return $return;\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-80" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-85321781 data-indent-pad="  "><abbr title="PHPUnit\Framework\TestSuite" class=sf-dump-note>TestSuite</abbr> {<a class=sf-dump-ref>#7</a>}\n
      </pre><script>Sfdump("sf-dump-85321781")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-473387170 data-indent-pad="  "><span class=sf-dump-note>array:53</span> [<samp>\n
        "<span class=sf-dump-key>listGroups</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>listSuites</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>loader</span>" => <span class=sf-dump-const>null</span>\n
        "<span class=sf-dump-key>useDefaultConfiguration</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>loadedExtensions</span>" => []\n
        "<span class=sf-dump-key>notLoadedExtensions</span>" => []\n
        "<span class=sf-dump-key>filter</span>" => "<span class=sf-dump-str title="66 characters">a_user_is_able_to_read_replies_that_are_associated_with_the_thread</span>"\n
        "<span class=sf-dump-key>testSuffixes</span>" => <span class=sf-dump-note>array:2</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="8 characters">Test.php</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="5 characters">.phpt</span>"\n
        </samp>]\n
        "<span class=sf-dump-key>configuration</span>" => <abbr title="PHPUnit\Util\Configuration" class=sf-dump-note>Configuration</abbr> {<a class=sf-dump-ref>#2</a>}\n
        "<span class=sf-dump-key>debug</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>listeners</span>" => []\n
        "<span class=sf-dump-key>backupGlobals</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>backupStaticAttributes</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>bootstrap</span>" => "<span class=sf-dump-str title="50 characters">/Users/bobbyborisov/code/forum/vendor/autoload.php</span>"\n
        "<span class=sf-dump-key>colors</span>" => "<span class=sf-dump-str title="4 characters">auto</span>"\n
        "<span class=sf-dump-key>convertErrorsToExceptions</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>convertNoticesToExceptions</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>convertWarningsToExceptions</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>processIsolation</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnFailure</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>testdoxGroups</span>" => []\n
        "<span class=sf-dump-key>testdoxExcludeGroups</span>" => []\n
        "<span class=sf-dump-key>addUncoveredFilesFromWhitelist</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>beStrictAboutChangesToGlobalState</span>" => <span class=sf-dump-const>null</span>\n
        "<span class=sf-dump-key>beStrictAboutResourceUsageDuringSmallTests</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>cacheTokens</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>columns</span>" => <span class=sf-dump-num>80</span>\n
        "<span class=sf-dump-key>convertDeprecationsToExceptions</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>crap4jThreshold</span>" => <span class=sf-dump-num>30</span>\n
        "<span class=sf-dump-key>disallowTestOutput</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>disallowTodoAnnotatedTests</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>enforceTimeLimit</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>excludeGroups</span>" => []\n
        "<span class=sf-dump-key>failOnRisky</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>failOnWarning</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>groups</span>" => []\n
        "<span class=sf-dump-key>processUncoveredFilesFromWhitelist</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>registerMockObjectsFromTestArgumentsRecursively</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>repeat</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>reportHighLowerBound</span>" => <span class=sf-dump-num>90</span>\n
        "<span class=sf-dump-key>reportLowUpperBound</span>" => <span class=sf-dump-num>50</span>\n
        "<span class=sf-dump-key>reportUselessTests</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>reverseList</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnError</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnIncomplete</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnRisky</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnSkipped</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnWarning</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>strictCoverage</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>timeoutForLargeTests</span>" => <span class=sf-dump-num>60</span>\n
        "<span class=sf-dump-key>timeoutForMediumTests</span>" => <span class=sf-dump-num>10</span>\n
        "<span class=sf-dump-key>timeoutForSmallTests</span>" => <span class=sf-dump-num>1</span>\n
        "<span class=sf-dump-key>verbose</span>" => <span class=sf-dump-const>false</span>\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-473387170")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-2117601606 data-indent-pad="  "><span class=sf-dump-const>true</span>\n
      </pre><script>Sfdump("sf-dump-2117601606")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-81">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">Command.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-81" class="code-block linenums:122">        &#039;test-suffix=&#039;              =&gt; null,\n
              &#039;testsuite=&#039;                =&gt; null,\n
              &#039;verbose&#039;                   =&gt; null,\n
              &#039;version&#039;                   =&gt; null,\n
              &#039;whitelist=&#039;                =&gt; null\n
          ];\n
       \n
          /**\n
           * @var bool\n
           */\n
          private $versionStringPrinted = false;\n
       \n
          /**\n
           * @param bool $exit\n
           */\n
          public static function main($exit = true)\n
          {\n
              $command = new static;\n
       \n
              return $command-&gt;run($_SERVER[&#039;argv&#039;], $exit);\n
          }\n
       \n
          /**\n
           * @param array $argv\n
           * @param bool  $exit\n
           *\n
           * @return int\n
           */\n
          public function run(array $argv, $exit = true)\n
          {\n
              $this-&gt;handleArguments($argv);\n
       \n
              $runner = $this-&gt;createRunner();\n
       \n
              if ($this-&gt;arguments[&#039;test&#039;] instanceof Test) {\n
                  $suite = $this-&gt;arguments[&#039;test&#039;];\n
              } else {\n
                  $suite = $runner-&gt;getTest(\n
                      $this-&gt;arguments[&#039;test&#039;],\n
                      $this-&gt;arguments[&#039;testFile&#039;],</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-81" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1864931430 data-indent-pad="  "><span class=sf-dump-note>array:2</span> [<samp>\n
        <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
        <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="75 characters">--filter=a_user_is_able_to_read_replies_that_are_associated_with_the_thread</span>"\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-1864931430")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-639509773 data-indent-pad="  "><span class=sf-dump-const>true</span>\n
      </pre><script>Sfdump("sf-dump-639509773")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-82">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-82" class="code-block linenums:532">require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Mixed_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Null_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Nullable.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Object_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Parent_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Resource_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Scalar.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Self_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Static_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/String_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/This.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Void_.php&#039;;\n
       \n
      if ($execute) {\n
          if (isset($_SERVER[&#039;argv&#039;][1]) &amp;&amp; $_SERVER[&#039;argv&#039;][1] == &#039;--manifest&#039;) {\n
              print file_get_contents(__PHPUNIT_PHAR_ROOT__ . &#039;/manifest.txt&#039;);\n
              exit;\n
          }\n
       \n
          PHPUnit\TextUI\Command::main();\n
      }\n
       \n
      __HALT_COMPILER(); ?&gt;\r\n
      D�\x00\x00H\x02\x00\x00\x11\x00\x00\x00\x01\x00\x12\x00\x00\x00phpunit-6.2.4.phar\x00\x00\x00\x00\f\x00\x00\x00manifest.txtj\x03\x00\x00M,�Yj\x03\x00\x00����\x01\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00ca.pem�\x05\x00\x00M,�Y�\x05\x00\x00�by�\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00php-code-coverage/LICENSE\x0F\x06\x00\x00M,�Y\x0F\x06\x00\x00ЉxZ�\x01\x00\x00\x00\x00\x00\x00&quot;\x00\x00\x00php-code-coverage/CodeCoverage.php�y\x00\x00M,�Y�y\x00\x00Z�\x03��\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Driver/Driver.php\x11\x04\x00\x00M,�Y\x11\x04\x00\x00�\x00��\x01\x00\x00\x00\x00\x00\x00!\x00\x00\x00php-code-coverage/Driver/HHVM.php�\x02\x00\x00M,�Y�\x02\x00\x00Ն\x0F7�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Driver/PHPDBG.php]\v\x00\x00M,�Y]\v\x00\x00\x01ӔӶ\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Driver/Xdebug.php�\n
      \x00\x00M,�Y�\n
      \x00\x00��\x1D�\x01\x00\x00\x00\x00\x00\x00?\x00\x00\x00php-code-coverage/Exception/CoveredCodeNotExecutedException.php�\x01\x00\x00M,�Y�\x01\x00\x00/�/��\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00php-code-coverage/Exception/Exception.php~\x01\x00\x00M,�Y~\x01\x00\x00\x11��u�\x01\x00\x00\x00\x00\x00\x008\x00\x00\x00php-code-coverage/Exception/InvalidArgumentException.php�\x03\x00\x00M,�Y�\x03\x00\x00�N�\x14�\x01\x00\x00\x00\x00\x00\x00@\x00\x00\x00php-code-coverage/Exception/MissingCoversAnnotationException.php�\x01\x00\x00M,�Y�\x01\x00\x00�f\x1AM�\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00php-code-coverage/Exception/RuntimeException.phpp\x01\x00\x00M,�Yp\x01\x00\x00w�C\x0E�\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Exception/UnintentionallyCoveredCodeException.php�\x04\x00\x00M,�Y�\x04\x00\x00�F�+�\x01\x00\x00\x00\x00\x00\x00\x1C\x00\x00\x00php-code-coverage/Filter.php�\x0F\x00\x00M,�Y�\x0F\x00\x00\x1A��ʶ\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Node/AbstractNode.php�\e\x00\x00M,�Y�\e\x00\x00�_�\x1E�\x01\x00\x00\x00\x00\x00\x00&quot;\x00\x00\x00php-code-coverage/Node/Builder.phpf\x16\x00\x00M,�Yf\x16\x00\x00\x16r���\x01\x00\x00\x00\x00\x00\x00$\x00\x00\x00php-code-coverage/Node/Directory.php�&amp;\x00\x00M,�Y�&amp;\x00\x00\x01�k�\x01\x00\x00\x00\x00\x00\x00\x1F\x00\x00\x00php-code-coverage/Node/File.phpwL\x00\x00M,�YwL\x00\x00o�8�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Node/Iterator.php�\x07\x00\x00M,�Y�\x07\x00\x009��Q�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Report/Clover.php�&amp;\x00\x00M,�Y�&amp;\x00\x001\x1E\x0F\x18�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Report/Crap4j.php�\x16\x00\x00M,�Y�\x16\x00\x00qro��\x01\x00\x00\x00\x00\x00\x00(\x00\x00\x00php-code-coverage/Report/Html/Facade.php&#039;\x16\x00\x00M,�Y&#039;\x16\x00\x00W\x01\n
      ն\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00php-code-coverage/Report/Html/Renderer.phpe&quot;\x00\x00M,�Ye&quot;\x00\x00�\x7F���\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00php-code-coverage/Report/Html/Renderer/Dashboard.phpm&amp;\x00\x00M,�Ym&amp;\x00\x00!\x1Fmu�\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00php-code-coverage/Report/Html/Renderer/Directory.php�\f\x00\x00M,�Y�\f\x00\x00;$�\f�\x01\x00\x00\x00\x00\x00\x00/\x00\x00\x00php-code-coverage/Report/Html/Renderer/File.php�J\x00\x00M,�Y�J\x00\x00�Hˮ�\x01\x00\x00\x00\x00\x00\x00F\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/coverage_bar.html.dist1\x01\x00\x00M,�Y1\x01\x00\x00itL�\x01\x00\x00\x00\x00\x00\x00E\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/css/bootstrap.min.cssp�\x01\x00M,�Yp�\x01\x00X|\x7FF�\x01\x00\x00\x00\x00\x00\x00A\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/css/nv.d3.min.cssX%\x00\x00M,�YX%\x00\x00�\x060,�\x01\x00\x00\x00\x00\x00\x00=\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/css/style.css+\x07\x00\x00M,�Y+\x07\x00\x00Y`�g�\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/dashboard.html.dist�\e\x00\x00M,�Y�\e\x00\x00X�nb�\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/directory.html.dist(\x08\x00\x00M,�Y(\x08\x00\x00\x0F\x02d׶\x01\x00\x00\x00\x00\x00\x00H\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/directory_item.html.dist5\x03\x00\x00M,�Y5\x03\x00\x00�Z�]�\x01\x00\x00\x00\x00\x00\x00&gt;\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/file.html.dist�\x08\x00\x00M,�Y�\x08\x00\x00��\x1CF�\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/file_item.html.distg\x03\x00\x00M,�Yg\x03\x00\x00V�\rP�\x01\x00\x00\x00\x00\x00\x00V\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/fonts/glyphicons-halflings-regular.eot�N\x00\x00M,�Y�N\x00\x00XǱ��\x01\x00\x00\x00\x00\x00\x00V\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/fonts/glyphicons-halflings-regular.svg¨\x01\x00M,�Y¨\x01\x00|��ɶ\x01\x00\x00\x00\x00\x00\x00V\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/fonts/glyphicons-halflings-regular.ttf\�\x00\x00M,�Y\�\x00\x00�\x17&lt;��\x01\x00\x00\x00\x00\x00\x00W\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/fonts/glyphicons-halflings-regular.woff�[\x00\x00M,�Y�[\x00\x00�\x14{��\x01\x00\x00\x00\x00\x00\x00X\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/fonts/glyphicons-halflings-regular.woff2lF\x00\x00M,�YlF\x00\x00v��a�\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/bootstrap.min.js��\x00\x00M,�Y��\x00\x00/��j�\x01\x00\x00\x00\x00\x00\x00&lt;\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/d3.min.js�P\x02\x00M,�Y�P\x02\x00�h�b�\x01\x00\x00\x00\x00\x00\x00:\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/file.js�\x05\x00\x00M,�Y�\x05\x00\x00�\x0E&#039;��\x01\x00\x00\x00\x00\x00\x00@\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/holder.min.js�m\x00\x00M,�Y�m\x00\x00J�sѶ\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/html5shiv.min.js[(\x00\x00M,�Y[(\x00\x00\vü,�\x01\x00\x00\x00\x00\x00\x00@\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/jquery.min.js�R\x01\x00M,�Y�R\x01\x00~���\x01\x00\x00\x00\x00\x00\x00?\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/nv.d3.min.js�R\x03\x00M,�Y�R\x03\x00&lt;M\x17s�\x01\x00\x00\x00\x00\x00\x00A\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/respond.min.js\x19\x11\x00\x00M,�Y\x19\x11\x00\x00�\x16\x16{�\x01\x00\x00\x00\x00\x00\x00E\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/method_item.html.distx\x02\x00\x00M,�Yx\x02\x00\x00*\x1A���\x01\x00\x00\x00\x00\x00\x00 \x00\x00\x00php-code-coverage/Report/PHP.php�\x04\x00\x00M,�Y�\x04\x00\x00DP��\x01\x00\x00\x00\x00\x00\x00!\x00\x00\x00php-code-coverage/Report/Text.php\x03&quot;\x00\x00M,�Y\x03&quot;\x00\x00�\x19jڶ\x01\x00\x00\x00\x00\x00\x001\x00\x00\x00php-code-coverage/Report/Xml/BuildInformation.php�\n
      \x00\x00M,�Y�\n
      \x00\x00{\eh��\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00php-code-coverage/Report/Xml/Coverage.phpE\x06\x00\x00M,�YE\x06\x00\x00Η&gt;��\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00php-code-coverage/Report/Xml/Directory.phpR\x01\x00\x00M,�YR\x01\x00\x00&amp;�a�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Report/Xml/Facade.phpG\x1F\x00\x00M,�YG\x1F\x00\x00�Uo˶\x01\x00\x00\x00\x00\x00\x00%\x00\x00\x00php-code-coverage/Report/Xml/File.php�\x07\x00\x00M,�Y�\x07\x00\x00��ڿ�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Report/Xml/Method.phpW\x05\x00\x00M,�YW\x05\x00\x00\x11�    \�\x01\x00\x00\x00\x00\x00\x00%\x00\x00\x00php-code-coverage/Report/Xml/Node.php�\x07\x00\x00M,�Y�\x07\x00\x00;�#P�\x01\x00\x00\x00\x00\x00\x00(\x00\x00\x00php-code-coverage/Report/Xml/Project.phpX    \x00\x00M,�YX    \x00\x00�7�\x7F�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Report/Xml/Report.phpi    \x00\x00M,�Yi    \x00\x00���E�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Report/Xml/Source.php&lt;\x04\x00\x00M,�Y&lt;\x04\x00\x00yZF��\x01\x00\x00\x00\x00\x00\x00&amp;\x00\x00\x00php-code-coverage/Report/Xml/Tests.php\x04\x06\x00\x00M,�Y\x04\x06\x00\x00��M��\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Report/Xml/Totals.phpP\x0F\x00\x00M,�YP\x0F\x00\x00���\x18�\x01\x00\x00\x00\x00\x00\x00%\x00\x00\x00php-code-coverage/Report/Xml/Unit.php\x03\n
      \x00\x00M,�Y\x03\n
      \x00\x00-5�^�\x01\x00\x00\x00\x00\x00\x00\x1A\x00\x00\x00php-code-coverage/Util.php�\x03\x00\x00M,�Y�\x03\x00\x00\x05��3�\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00php-code-coverage/Version.php�\x02\x00\x00M,�Y�\x02\x00\x00m����\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00php-file-iterator/LICENSE\f\x06\x00\x00M,�Y\f\x06\x00\x00��s��\x01\x00\x00\x00\x00\x00\x00\x1C\x00\x00\x00php-file-iterator/Facade.php�\v\x00\x00M,�Y�\v\x00\x00��0��\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00php-file-iterator/Factory.php�    \x00\x00M,�Y�    \x00\x00�y���\x01\x00\x00\x00\x00\x00\x00\x1E\x00\x00\x00php-file-iterator/Iterator.phpa\x0F\x00\x00M,�Ya\x0F\x00\x00����\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00php-text-template/LICENSE\f\x06\x00\x00M,�Y\f\x06\x00\x00S�:��\x01\x00\x00\x00\x00\x00\x00\x1E\x00\x00\x00php-text-template/Template.php�\v\x00\x00M,�Y�\v\x00\x00�w4��\x01\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00php-timer/LICENSE\x08\x06\x00\x00M,�Y\x08\x06\x00\x00ǨAE�\x01\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00php-timer/Timer.php\x0F    \x00\x00M,�Y\x0F    \x00\x00�GT�\x01\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00php-token-stream/LICENSE\x0E\x06\x00\x00M,�Y\x0E\x06\x00\x00�-&amp; �\x01\x00\x00\x00\x00\x00\x00\x1A\x00\x00\x00php-token-stream/Token.php�b\x00\x00M,�Y�b\x00\x00�l&lt;I�\x01\x00\x00\x00\x00\x00\x00!\x00\x00\x00php-token-stream/Token/Stream.php�A\x00\x00M,�Y�A\x00\x00\x17����\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00php-token-stream/Token/Stream/CachingFactory.php\x16\x05\x00\x00M,�Y\x16\x05\x00\x00_\x04\e\x13�\x01\x00\x00\x00\x00\x00\x00\x1C\x00\x00\x00phpunit-mock-objects/LICENSE\x13\x06\x00\x00M,�Y\x13\x06\x00\x00�t0��\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00phpunit-mock-objects/Builder/Identity.phpi\x03\x00\x00M,�Yi\x03\x00\x005�h��\x01\x00\x00\x00\x00\x00\x001\x00\x00\x00phpunit-mock-objects/Builder/InvocationMocker.phpo\x1F\x00\x00M,�Yo\x1F\x00\x00{��Ķ\x01\x00\x00\x00\x00\x00\x00&amp;\x00\x00\x00phpunit-mock-objects/Builder/Match.php�\x02\x00\x00M,�Y�\x02\x00\x00\x14�&quot;׶\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00phpunit-mock-objects/Builder/MethodNameMatch.phpO\x03\x00\x00M,�YO\x03\x00\x00�W�    �\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00phpunit-mock-objects/Builder/Namespace.php�\x04\x00\x00M,�Y�\x04\x00\x00��R��\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00phpunit-mock-objects/Builder/ParametersMatch.php�\x05\x00\x00M,�Y�\x05\x00\x00v���\x01\x00\x00\x00\x00\x00\x00%\x00\x00\x00phpunit-mock-objects/Builder/Stub.php%\x03\x00\x00M,�Y%\x03\x00\x00�\x17\x1D��\x01\x00\x00\x00\x00\x00\x009\x00\x00\x00phpunit-mock-objects/Exception/BadMethodCallException.php�\x01\x00\x00M,�Y�\x01\x00\x00��� �\x01\x00\x00\x00\x00\x00\x00,\x00\x00\x00phpunit-mock-objects/Exception/Exception.phps\x01\x00\x00M,�Ys\x01\x00\x00�\x1A��\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Exception/RuntimeException.php�\x01\x00\x00M,�Y�\x01\x00\x00\x7Fe�7�\x01\x00\x00\x00\x00\x00\x00&quot;\x00\x00\x00phpunit-mock-objects/Generator.php��\x00\x00M,�Y��\x00\x00\n
      �b&lt;�\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Generator/deprecation.tpl.dist;\x00\x00\x00M,�Y;\x00\x00\x00O5�s�\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00phpunit-mock-objects/Generator/mocked_class.tpl.dist�\x04\x00\x00M,�Y�\x04\x00\x00�z�Q�\x01\x00\x00\x00\x00\x00\x00;\x00\x00\x00phpunit-mock-objects/Generator/mocked_class_method.tpl.dist�\x00\x00\x00M,�Y�\x00\x00\x00�\x104޶\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00phpunit-mock-objects/Generator/mocked_clone.tpl.dist�\x00\x00\x00M,�Y�\x00\x00\x00�\x17aT�\x01\x00\x00\x00\x00\x00\x005\x00\x00\x00phpunit-mock-objects/Generator/mocked_method.tpl.dist�\x02\x00\x00M,�Y�\x02\x00\x00����\x01\x00\x00\x00\x00\x00\x00:\x00\x00\x00phpunit-mock-objects/Generator/mocked_method_void.tpl.dist�\x02\x00\x00M,�Y�\x02\x00\x00~G&#039;ڶ\x01\x00\x00\x00\x00\x00\x00&lt;\x00\x00\x00phpunit-mock-objects/Generator/mocked_static_method.tpl.dist�\x00\x00\x00M,�Y�\x00\x00\x00\x1C�N��\x01\x00\x00\x00\x00\x00\x006\x00\x00\x00phpunit-mock-objects/Generator/proxied_method.tpl.dist\x00\x03\x00\x00M,�Y\x00\x03\x00\x00���\v�\x01\x00\x00\x00\x00\x00\x00;\x00\x00\x00phpunit-mock-objects/Generator/proxied_method_void.tpl.dist�\x02\x00\x00M,�Y�\x02\x00\x00�gEm�\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Generator/trait_class.tpl.dist7\x00\x00\x00M,�Y7\x00\x00\x00�[$~�\x01\x00\x00\x00\x00\x00\x006\x00\x00\x00phpunit-mock-objects/Generator/unmocked_clone.tpl.dist�\x00\x00\x00M,�Y�\x00\x00\x008W}ض\x01\x00\x00\x00\x00\x00\x002\x00\x00\x00phpunit-mock-objects/Generator/wsdl_class.tpl.dist�\x00\x00\x00M,�Y�\x00\x00\x00w\x1F&amp;S�\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Generator/wsdl_method.tpl.dist&lt;\x00\x00\x00M,�Y&lt;\x00\x00\x00��i��\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00phpunit-mock-objects/Invocation.php�\x01\x00\x00M,�Y�\x01\x00\x00\x15���\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00phpunit-mock-objects/Invocation/Object.php�\x03\x00\x00M,�Y�\x03\x00\x00�e�H�\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00phpunit-mock-objects/Invocation/Static.php�\x14\x00\x00M,�Y�\x14\x00\x00o�쾶\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00phpunit-mock-objects/InvocationMocker.phph\x11\x00\x00M,�Yh\x11\x00\x007_�X�\x01\x00\x00\x00\x00\x00\x00&quot;\x00\x00\x00phpunit-mock-objects/Invokable.php�\x04\x00\x00M,�Y�\x04\x00\x00��\x03\x0F�\x01\x00\x00\x00\x00\x00\x00 \x00\x00\x00phpunit-mock-objects/Matcher.php� \x00\x00M,�Y� \x00\x00~�/\r�\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00phpunit-mock-objects/Matcher/AnyInvokedCount.php�\x02\x00\x00M,�Y�\x02\x00\x00E�k�\x01\x00\x00\x00\x00\x00\x00.\x00\x00\x00phpunit-mock-objects/Matcher/AnyParameters.php\x1A\x03\x00\x00M,�Y\x1A\x03\x00\x005���\x01\x00\x00\x00\x00\x00\x006\x00\x00\x00phpunit-mock-objects/Matcher/ConsecutiveParameters.php�\x0E\x00\x00M,�Y�\x0E\x00\x00P�\x7F6�\x01\x00\x00\x00\x00\x00\x00+\x00\x00\x00phpunit-mock-objects/Matcher/Invocation.php�\x06\x00\x00M,�Y�\x06\x00\x00�KM\x11�\x01\x00\x00\x00\x00\x00\x00/\x00\x00\x00phpunit-mock-objects/Matcher/InvokedAtIndex.php�\x08\x00\x00M,�Y�\x08\x00\x00r�-\x07�\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00phpunit-mock-objects/Matcher/InvokedAtLeastCount.php�\x05\x00\x00M,�Y�\x05\x00\x00V�c��\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Matcher/InvokedAtLeastOnce.php�\x04\x00\x00M,�Y�\x04\x00\x00C�\x19m�\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Matcher/InvokedAtMostCount.php�\x05\x00\x00M,�Y�\x05\x00\x00�\n
      �`�\x01\x00\x00\x00\x00\x00\x00-\x00\x00\x00phpunit-mock-objects/Matcher/InvokedCount.php]\v\x00\x00M,�Y]\v\x00\x00��\x03O�\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00phpunit-mock-objects/Matcher/InvokedRecorder.php&amp;\x06\x00\x00M,�Y&amp;\x06\x00\x00yxQ\x13�\x01\x00\x00\x00\x00\x00\x00+\x00\x00\x00phpunit-mock-objects/Matcher/MethodName.php\f\x07\x00\x00M,�Y\f\x07\x00\x00�&#039;\x12��\x01\x00\x00\x00\x00\x00\x00+\x00\x00\x00phpunit-mock-objects/Matcher/Parameters.phpB\x12\x00\x00M,�YB\x12\x00\x00�\v�ɶ\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00phpunit-mock-objects/Matcher/StatelessInvocation.php-\x07\x00\x00M,�Y-\x07\x00\x00�\x7F\x01\x00\x00\x00\x00\x00\x00$\x00\x00\x00phpunit-mock-objects/MockBuilder.php� \x00\x00M,�Y� \x00\x00u7&gt;z�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00phpunit-mock-objects/MockObject.phpH\x06\x00\x00M,�YH\x06\x00\x00\��t�\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00phpunit-mock-objects/Stub.php�\x03\x00\x00M,�Y�\x03\x00\x00�C�w�\x01\x00\x00\x00\x00\x00\x00.\x00\x00\x00phpunit-mock-objects/Stub/ConsecutiveCalls.phpd\x04\x00\x00M,�Yd\x04\x00\x00�~{\e�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00phpunit-mock-objects/Stub/Exception.php�\x04\x00\x00M,�Y�\x04\x00\x00\x1D���\x01\x00\x00\x00\x00\x00\x00/\x00\x00\x00phpunit-mock-objects/Stub/MatcherCollection.php�\x02\x00\x00M,�Y�\x02\x00\x00@M�@�\x01\x00\x00\x00\x00\x00\x00$\x00\x00\x00phpunit-mock-objects/Stub/Return.phpu\x03\x00\x00M,�Yu\x03\x00\x004�nܶ\x01\x00\x00\x00\x00\x00\x00,\x00\x00\x00phpunit-mock-objects/Stub/ReturnArgument.php�\x03\x00\x00M,�Y�\x03\x00\x00ͭ�\x06�\x01\x00\x00\x00\x00\x00\x00,\x00\x00\x00phpunit-mock-objects/Stub/ReturnCallback.phpa\x05\x00\x00M,�Ya\x05\x00\x00[�\x7F0�\x01\x00\x00\x00\x00\x00\x00-\x00\x00\x00phpunit-mock-objects/Stub/ReturnReference.php\f\x02\x00\x00M,�Y\f\x02\x00\x00����\x01\x00\x00\x00\x00\x00\x00(\x00\x00\x00phpunit-mock-objects/Stub/ReturnSelf.php�\x03\x00\x00M,�Y�\x03\x00\x00\x1C=���\x01\x00\x00\x00\x00\x00\x00,\x00\x00\x00phpunit-mock-objects/Stub/ReturnValueMap.phpM\x04\x00\x00M,�YM\x04\x00\x00\x19\x18�Ҷ\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00phpunit-mock-objects/Verifiable.php�\x02\x00\x00M,�Y�\x02\x00\x00τ ��\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00sebastian-code-unit-reverse-lookup/LICENSE\x17\x06\x00\x00M,�Y\x17\x06\x00\x00XX��\x01\x00\x00\x00\x00\x00\x00-\x00\x00\x00sebastian-code-unit-reverse-lookup/Wizard.phpe\v\x00\x00M,�Ye\v\x00\x00���\x01\x00\x00\x00\x00\x00\x00\x1C\x00\x00\x00sebastian-comparator/LICENSE    \x06\x00\x00M,�Y    \x06\x00\x00V7?.�\x01\x00\x00\x00\x00\x00\x00(\x00\x00\x00sebastian-comparator/ArrayComparator.php`\x10\x00\x00M,�Y`\x10\x00\x00?a�ɶ\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00sebastian-comparator/Comparator.php�\x06\x00\x00M,�Y�\x06\x00\x00~O�7�\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00sebastian-comparator/ComparisonFailure.php�\v\x00\x00M,�Y�\v\x00\x000����\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00sebastian-comparator/DOMNodeComparator.phpW\f\x00\x00M,�YW\f\x00\x00֊���\x01\x00\x00\x00\x00\x00\x00+\x00\x00\x00sebastian-comparator/DateTimeComparator.phpV\n
      \x00\x00M,�YV\n
      \x00\x00���e�\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-comparator/DoubleComparator.phps\x06\x00\x00M,�Ys\x06\x00\x00���̶\x01\x00\x00\x00\x00\x00\x00,\x00\x00\x00sebastian-comparator/ExceptionComparator.php�\x04\x00\x00M,�Y�\x04\x00\x00\x11��ȶ\x01\x00\x00\x00\x00\x00\x00 \x00\x00\x00sebastian-comparator/Factory.phpZ\v\x00\x00M,�YZ\v\x00\x00�^�R�\x01\x00\x00\x00\x00\x00\x00-\x00\x00\x00sebastian-comparator/MockObjectComparator.php�\x04\x00\x00M,�Y�\x04\x00\x00�a6~�\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00sebastian-comparator/NumericComparator.php�\x08\x00\x00M,�Y�\x08\x00\x00ݫ\x1A[�\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-comparator/ObjectComparator.php\x0F\x0E\x00\x00M,�Y\x0F\x0E\x00\x00\e�ne�\x01\x00\x00\x00\x00\x00\x00+\x00\x00\x00sebastian-comparator/ResourceComparator.php/\x06\x00\x00M,�Y/\x06\x00\x00�    PM�\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-comparator/ScalarComparator.php�\f\x00\x00M,�Y�\f\x00\x00��鎶\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00sebastian-comparator/SplObjectStorageComparator.php�\x08\x00\x00M,�Y�\x08\x00\x00�!�ڶ\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00sebastian-comparator/TypeComparator.php�\x06\x00\x00M,�Y�\x06\x00\x00�#�ն\x01\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00sebastian-diff/LICENSE\r\x06\x00\x00M,�Y\r\x06\x00\x00\n
      �~��\x01\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00sebastian-diff/Chunk.php�\x06\x00\x00M,�Y�\x06\x00\x00v�|��\x01\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00sebastian-diff/Diff.php�\x04\x00\x00M,�Y�\x04\x00\x00S\fdh�\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00sebastian-diff/Differ.php\x18)\x00\x00M,�Y\x18)\x00\x00S�9R�\x01\x00\x00\x00\x00\x00\x00/\x00\x00\x00sebastian-diff/LCS/LongestCommonSubsequence.phpj\x02\x00\x00M,�Yj\x02\x00\x00�\x06\/�\x01\x00\x00\x00\x00\x00\x00L\x00\x00\x00sebastian-diff/LCS/MemoryEfficientLongestCommonSubsequenceImplementation.phpR    \x00\x00M,�YR    \x00\x00�o��\x01\x00\x00\x00\x00\x00\x00J\x00\x00\x00sebastian-diff/LCS/TimeEfficientLongestCommonSubsequenceImplementation.php�\x07\x00\x00M,�Y�\x07\x00\x00��\x07��\x01\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00sebastian-diff/Line.php�\x03\x00\x00M,�Y�\x03\x00\x00\x1Ee�ܶ\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00sebastian-diff/Parser.php�\v\x00\x00M,�Y�\v\x00\x00&amp;�\fǶ\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00sebastian-environment/LICENSE\x14\x06\x00\x00M,�Y\x14\x06\x00\x00\x07r�=�\x01\x00\x00\x00\x00\x00\x00!\x00\x00\x00sebastian-environment/Console.phpP\x0E\x00\x00M,�YP\x0E\x00\x00Ű�p�\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-environment/OperatingSystem.php�\x04\x00\x00M,�Y�\x04\x00\x00�&lt;\x12\x01�\x01\x00\x00\x00\x00\x00\x00!\x00\x00\x00sebastian-environment/Runtime.php�\x12\x00\x00M,�Y�\x12\x00\x00U�J��\x01\x00\x00\x00\x00\x00\x00\x1A\x00\x00\x00sebastian-exporter/LICENSE\x07\x06\x00\x00M,�Y\x07\x06\x00\x00��`\x00�\x01\x00\x00\x00\x00\x00\x00\x1F\x00\x00\x00sebastian-exporter/Exporter.php�#\x00\x00M,�Y�#\x00\x00!�Y��\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00sebastian-recursion-context/LICENSE\x10\x06\x00\x00M,�Y\x10\x06\x00\x00\v��&gt;�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00sebastian-recursion-context/Context.php{\x0F\x00\x00M,�Y{\x0F\x00\x00�\x7F���\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-recursion-context/Exception.phpJ\x01\x00\x00M,�YJ\x01\x00\x00���\x01\x00\x00\x00\x00\x00\x008\x00\x00\x00sebastian-recursion-context/InvalidArgumentException.php�\x01\x00\x00M,�Y�\x01\x00\x00m\x18\x15H�\x01\x00\x00\x00\x00\x00\x00%\x00\x00\x00sebastian-resource-operations/LICENSE\r\x06\x00\x00M,�Y\r\x06\x00\x00I���\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00sebastian-resource-operations/ResourceOperations.php�U\x00\x00M,�Y�U\x00\x00�\x11hն\x01\x00\x00\x00\x00\x00\x00\x1E\x00\x00\x00sebastian-global-state/LICENSE\x15\x06\x00\x00M,�Y\x15\x06\x00\x00q~Pd�\x01\x00\x00\x00\x00\x00\x00$\x00\x00\x00sebastian-global-state/Blacklist.php�\n
      \x00\x00M,�Y�\n
      \x00\x00ܫ9��\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00sebastian-global-state/CodeExporter.phpf    \x00\x00M,�Yf    \x00\x00\x15|�!�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00sebastian-global-state/Restorer.php&quot;\x11\x00\x00M,�Y&quot;\x11\x00\x00M��\x1F�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00sebastian-global-state/Snapshot.php�!\x00\x00M,�Y�!\x00\x00Ò���\x01\x00\x00\x00\x00\x00\x00/\x00\x00\x00sebastian-global-state/exceptions/Exception.phpP\x01\x00\x00M,�YP\x01\x00\x00W\x14�Z�\x01\x00\x00\x00\x00\x00\x006\x00\x00\x00sebastian-global-state/exceptions/RuntimeException.php�\x01\x00\x00M,�Y�\x01\x00\x00\f�y˶\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00object-enumerator/LICENSE\x10\x06\x00\x00M,�Y\x10\x06\x00\x00�f�ζ\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00sebastian-object-enumerator/Enumerator.phpr\x08\x00\x00M,�Yr\x08\x00\x00z�\��\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-object-enumerator/Exception.php6\x01\x00\x00M,�Y6\x01\x00\x00n$*a�\x01\x00\x00\x00\x00\x00\x008\x00\x00\x00sebastian-object-enumerator/InvalidArgumentException.phpx\x01\x00\x00M,�Yx\x01\x00\x00��&#039;�\x01\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00object-reflector/LICENSE\n
      \x06\x00\x00M,�Y\n
      \x06\x00\x00�F���\x01\x00\x00\x00\x00\x00\x00(\x00\x00\x00sebastian-object-reflector/Exception.phpN\x01\x00\x00M,�YN\x01\x00\x00� ^�\x01\x00\x00\x00\x00\x00\x007\x00\x00\x00sebastian-object-reflector/InvalidArgumentException.php�\x01\x00\x00M,�Y�\x01\x00\x00Y\x0E�J�\x01\x00\x00\x00\x00\x00\x00.\x00\x00\x00sebastian-object-reflector/ObjectReflector.php�\x04\x00\x00M,�Y�\x04\x00\x00�\f&quot;\x19�\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00sebastian-version/LICENSE\x06\x06\x00\x00M,�Y\x06\x06\x00\x00\x04n\x1E\x1D�\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00sebastian-version/Version.php�\x08\x00\x00M,�Y�\x08\x00\x00N\x19\Ƕ\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00doctrine-instantiator/LICENSE$\x04\x00\x00M,�Y$\x04\x00\x00</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
        </div>\n
      <div class="details">\n
        <h2 class="details-heading">Environment &amp; details:</h2>\n
      \n
        <div class="data-table-container" id="data-tables">\n
                <div class="data-table" id="sg-get-data">\n
                          <label class="empty">GET Data</label>\n
                  <span class="empty">empty</span>\n
                    </div>\n
                <div class="data-table" id="sg-post-data">\n
                          <label class="empty">POST Data</label>\n
                  <span class="empty">empty</span>\n
                    </div>\n
                <div class="data-table" id="sg-files">\n
                          <label class="empty">Files</label>\n
                  <span class="empty">empty</span>\n
                    </div>\n
                <div class="data-table" id="sg-cookies">\n
                          <label class="empty">Cookies</label>\n
                  <span class="empty">empty</span>\n
                    </div>\n
                <div class="data-table" id="sg-session">\n
                          <label class="empty">Session</label>\n
                  <span class="empty">empty</span>\n
                    </div>\n
                <div class="data-table" id="sg-serverrequest-data">\n
                          <label>Server/Request Data</label>\n
                  <table class="data-table">\n
                    <thead>\n
                      <tr>\n
                        <td class="data-table-k">Key</td>\n
                        <td class="data-table-v">Value</td>\n
                      </tr>\n
                    </thead>\n
                                <tr>\n
                      <td>TERM_SESSION_ID</td>\n
                      <td><pre class=sf-dump id=sf-dump-502077652 data-indent-pad="  ">"<span class=sf-dump-str title="43 characters">w0t0p0:E0869161-47E9-457D-94C7-81FF98761D2C</span>"\n
      </pre><script>Sfdump("sf-dump-502077652")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SSH_AUTH_SOCK</td>\n
                      <td><pre class=sf-dump id=sf-dump-1802107623 data-indent-pad="  ">"<span class=sf-dump-str title="51 characters">/private/tmp/com.apple.launchd.jpHJ0Dv97i/Listeners</span>"\n
      </pre><script>Sfdump("sf-dump-1802107623")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>Apple_PubSub_Socket_Render</td>\n
                      <td><pre class=sf-dump id=sf-dump-1786954138 data-indent-pad="  ">"<span class=sf-dump-str title="48 characters">/private/tmp/com.apple.launchd.9ThrN4DPao/Render</span>"\n
      </pre><script>Sfdump("sf-dump-1786954138")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>COLORFGBG</td>\n
                      <td><pre class=sf-dump id=sf-dump-1611348006 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">15;0</span>"\n
      </pre><script>Sfdump("sf-dump-1611348006")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>ITERM_PROFILE</td>\n
                      <td><pre class=sf-dump id=sf-dump-349818334 data-indent-pad="  ">"<span class=sf-dump-str title="7 characters">Default</span>"\n
      </pre><script>Sfdump("sf-dump-349818334")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>XPC_FLAGS</td>\n
                      <td><pre class=sf-dump id=sf-dump-481450098 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">0x0</span>"\n
      </pre><script>Sfdump("sf-dump-481450098")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>LANG</td>\n
                      <td><pre class=sf-dump id=sf-dump-37026279 data-indent-pad="  ">"<span class=sf-dump-str title="11 characters">en_US.UTF-8</span>"\n
      </pre><script>Sfdump("sf-dump-37026279")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PWD</td>\n
                      <td><pre class=sf-dump id=sf-dump-1097413323 data-indent-pad="  ">"<span class=sf-dump-str title="30 characters">/Users/bobbyborisov/code/forum</span>"\n
      </pre><script>Sfdump("sf-dump-1097413323")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SHELL</td>\n
                      <td><pre class=sf-dump id=sf-dump-831518771 data-indent-pad="  ">"<span class=sf-dump-str title="8 characters">/bin/zsh</span>"\n
      </pre><script>Sfdump("sf-dump-831518771")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>TERM_PROGRAM_VERSION</td>\n
                      <td><pre class=sf-dump id=sf-dump-1096512854 data-indent-pad="  ">"<span class=sf-dump-str title="5 characters">3.1.2</span>"\n
      </pre><script>Sfdump("sf-dump-1096512854")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>TERM_PROGRAM</td>\n
                      <td><pre class=sf-dump id=sf-dump-1672234066 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">iTerm.app</span>"\n
      </pre><script>Sfdump("sf-dump-1672234066")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PATH</td>\n
                      <td><pre class=sf-dump id=sf-dump-868528780 data-indent-pad="  ">"<span class=sf-dump-str title="107 characters">/usr/local/gradle/bin:/Users/bobbyborisov/.composer/vendor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin</span>"\n
      </pre><script>Sfdump("sf-dump-868528780")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>COLORTERM</td>\n
                      <td><pre class=sf-dump id=sf-dump-745661040 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">truecolor</span>"\n
      </pre><script>Sfdump("sf-dump-745661040")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>TERM</td>\n
                      <td><pre class=sf-dump id=sf-dump-930963024 data-indent-pad="  ">"<span class=sf-dump-str title="14 characters">xterm-256color</span>"\n
      </pre><script>Sfdump("sf-dump-930963024")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>HOME</td>\n
                      <td><pre class=sf-dump id=sf-dump-730727498 data-indent-pad="  ">"<span class=sf-dump-str title="19 characters">/Users/bobbyborisov</span>"\n
      </pre><script>Sfdump("sf-dump-730727498")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>TMPDIR</td>\n
                      <td><pre class=sf-dump id=sf-dump-1506893094 data-indent-pad="  ">"<span class=sf-dump-str title="49 characters">/var/folders/48/1z2968xj6p5g6fzc1pwqnrp40000gn/T/</span>"\n
      </pre><script>Sfdump("sf-dump-1506893094")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>USER</td>\n
                      <td><pre class=sf-dump id=sf-dump-1633894028 data-indent-pad="  ">"<span class=sf-dump-str title="12 characters">bobbyborisov</span>"\n
      </pre><script>Sfdump("sf-dump-1633894028")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>XPC_SERVICE_NAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-809707388 data-indent-pad="  ">"<span class=sf-dump-str>0</span>"\n
      </pre><script>Sfdump("sf-dump-809707388")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>LOGNAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-2044048919 data-indent-pad="  ">"<span class=sf-dump-str title="12 characters">bobbyborisov</span>"\n
      </pre><script>Sfdump("sf-dump-2044048919")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>__CF_USER_TEXT_ENCODING</td>\n
                      <td><pre class=sf-dump id=sf-dump-1600172470 data-indent-pad="  ">"<span class=sf-dump-str title="13 characters">0x1F5:0x0:0x0</span>"\n
      </pre><script>Sfdump("sf-dump-1600172470")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>ITERM_SESSION_ID</td>\n
                      <td><pre class=sf-dump id=sf-dump-876475283 data-indent-pad="  ">"<span class=sf-dump-str title="43 characters">w0t0p0:E0869161-47E9-457D-94C7-81FF98761D2C</span>"\n
      </pre><script>Sfdump("sf-dump-876475283")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SHLVL</td>\n
                      <td><pre class=sf-dump id=sf-dump-855686973 data-indent-pad="  ">"<span class=sf-dump-str>1</span>"\n
      </pre><script>Sfdump("sf-dump-855686973")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>OLDPWD</td>\n
                      <td><pre class=sf-dump id=sf-dump-2078806905 data-indent-pad="  ">"<span class=sf-dump-str title="24 characters">/Users/bobbyborisov/code</span>"\n
      </pre><script>Sfdump("sf-dump-2078806905")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>ZSH</td>\n
                      <td><pre class=sf-dump id=sf-dump-1591830494 data-indent-pad="  ">"<span class=sf-dump-str title="30 characters">/Users/bobbyborisov/.oh-my-zsh</span>"\n
      </pre><script>Sfdump("sf-dump-1591830494")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PAGER</td>\n
                      <td><pre class=sf-dump id=sf-dump-2111928134 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">less</span>"\n
      </pre><script>Sfdump("sf-dump-2111928134")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>LESS</td>\n
                      <td><pre class=sf-dump id=sf-dump-1553033259 data-indent-pad="  ">"<span class=sf-dump-str title="2 characters">-R</span>"\n
      </pre><script>Sfdump("sf-dump-1553033259")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>LC_CTYPE</td>\n
                      <td><pre class=sf-dump id=sf-dump-878988406 data-indent-pad="  ">"<span class=sf-dump-str title="11 characters">en_US.UTF-8</span>"\n
      </pre><script>Sfdump("sf-dump-878988406")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>LSCOLORS</td>\n
                      <td><pre class=sf-dump id=sf-dump-1473469668 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">Gxfxcxdxbxegedabagacad</span>"\n
      </pre><script>Sfdump("sf-dump-1473469668")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>JAVA_HOME</td>\n
                      <td><pre class=sf-dump id=sf-dump-244666803 data-indent-pad="  ">"<span class=sf-dump-str title="64 characters">/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home</span>"\n
      </pre><script>Sfdump("sf-dump-244666803")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>GRADLE_HOME</td>\n
                      <td><pre class=sf-dump id=sf-dump-1453875119 data-indent-pad="  ">"<span class=sf-dump-str title="17 characters">/usr/local/gradle</span>"\n
      </pre><script>Sfdump("sf-dump-1453875119")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>_</td>\n
                      <td><pre class=sf-dump id=sf-dump-1680976053 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
      </pre><script>Sfdump("sf-dump-1680976053")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PHP_SELF</td>\n
                      <td><pre class=sf-dump id=sf-dump-1362472841 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
      </pre><script>Sfdump("sf-dump-1362472841")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SCRIPT_NAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-246340785 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
      </pre><script>Sfdump("sf-dump-246340785")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SCRIPT_FILENAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-1036405980 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
      </pre><script>Sfdump("sf-dump-1036405980")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PATH_TRANSLATED</td>\n
                      <td><pre class=sf-dump id=sf-dump-612607643 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
      </pre><script>Sfdump("sf-dump-612607643")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DOCUMENT_ROOT</td>\n
                      <td><pre class=sf-dump id=sf-dump-940497177 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-940497177")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REQUEST_TIME_FLOAT</td>\n
                      <td><pre class=sf-dump id=sf-dump-1480857994 data-indent-pad="  "><span class=sf-dump-num>1510988518.2235</span>\n
      </pre><script>Sfdump("sf-dump-1480857994")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REQUEST_TIME</td>\n
                      <td><pre class=sf-dump id=sf-dump-143292338 data-indent-pad="  "><span class=sf-dump-num>1510988518</span>\n
      </pre><script>Sfdump("sf-dump-143292338")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>argv</td>\n
                      <td><pre class=sf-dump id=sf-dump-1008977220 data-indent-pad="  "><span class=sf-dump-note>array:2</span> [<samp>\n
        <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
        <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="75 characters">--filter=a_user_is_able_to_read_replies_that_are_associated_with_the_thread</span>"\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-1008977220")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>argc</td>\n
                      <td><pre class=sf-dump id=sf-dump-41614247 data-indent-pad="  "><span class=sf-dump-num>2</span>\n
      </pre><script>Sfdump("sf-dump-41614247")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_NAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-1307217272 data-indent-pad="  ">"<span class=sf-dump-str title="7 characters">Laravel</span>"\n
      </pre><script>Sfdump("sf-dump-1307217272")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_KEY</td>\n
                      <td><pre class=sf-dump id=sf-dump-1455956998 data-indent-pad="  ">"<span class=sf-dump-str title="51 characters">base64:kUmPYbNSRg37PUwL1En4OyhgSo5fzxgYyO2WhCIWLF8=</span>"\n
      </pre><script>Sfdump("sf-dump-1455956998")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_DEBUG</td>\n
                      <td><pre class=sf-dump id=sf-dump-1845091589 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">true</span>"\n
      </pre><script>Sfdump("sf-dump-1845091589")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_LOG_LEVEL</td>\n
                      <td><pre class=sf-dump id=sf-dump-358630324 data-indent-pad="  ">"<span class=sf-dump-str title="5 characters">debug</span>"\n
      </pre><script>Sfdump("sf-dump-358630324")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_URL</td>\n
                      <td><pre class=sf-dump id=sf-dump-1750157085 data-indent-pad="  ">"<span class=sf-dump-str title="16 characters">http://localhost</span>"\n
      </pre><script>Sfdump("sf-dump-1750157085")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-1582763845 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">127.0.0.1</span>"\n
      </pre><script>Sfdump("sf-dump-1582763845")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-824952199 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">3306</span>"\n
      </pre><script>Sfdump("sf-dump-824952199")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_USERNAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-11568563 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">root</span>"\n
      </pre><script>Sfdump("sf-dump-11568563")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-2007231846 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-2007231846")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>BROADCAST_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-1033900582 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">log</span>"\n
      </pre><script>Sfdump("sf-dump-1033900582")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SESSION_LIFETIME</td>\n
                      <td><pre class=sf-dump id=sf-dump-203619075 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">120</span>"\n
      </pre><script>Sfdump("sf-dump-203619075")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-923926514 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">127.0.0.1</span>"\n
      </pre><script>Sfdump("sf-dump-923926514")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-1178534385 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-1178534385")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-94950474 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">6379</span>"\n
      </pre><script>Sfdump("sf-dump-94950474")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-114148675 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">smtp</span>"\n
      </pre><script>Sfdump("sf-dump-114148675")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-993203120 data-indent-pad="  ">"<span class=sf-dump-str title="16 characters">smtp.mailtrap.io</span>"\n
      </pre><script>Sfdump("sf-dump-993203120")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-439406905 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">2525</span>"\n
      </pre><script>Sfdump("sf-dump-439406905")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_USERNAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-5427774 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-5427774")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-2070859528 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-2070859528")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_ENCRYPTION</td>\n
                      <td><pre class=sf-dump id=sf-dump-963523903 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-963523903")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_ID</td>\n
                      <td><pre class=sf-dump id=sf-dump-232626543 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-232626543")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_KEY</td>\n
                      <td><pre class=sf-dump id=sf-dump-476824068 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-476824068")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_SECRET</td>\n
                      <td><pre class=sf-dump id=sf-dump-1030192769 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-1030192769")</script>\n
      </td>\n
                    </tr>\n
                              </table>\n
                    </div>\n
                <div class="data-table" id="sg-environment-variables">\n
                          <label>Environment Variables</label>\n
                  <table class="data-table">\n
                    <thead>\n
                      <tr>\n
                        <td class="data-table-k">Key</td>\n
                        <td class="data-table-v">Value</td>\n
                      </tr>\n
                    </thead>\n
                                <tr>\n
                      <td>APP_ENV</td>\n
                      <td><pre class=sf-dump id=sf-dump-1107680747 data-indent-pad="  ">"<span class=sf-dump-str title="7 characters">testing</span>"\n
      </pre><script>Sfdump("sf-dump-1107680747")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_CONNECTION</td>\n
                      <td><pre class=sf-dump id=sf-dump-665339983 data-indent-pad="  ">"<span class=sf-dump-str title="6 characters">sqlite</span>"\n
      </pre><script>Sfdump("sf-dump-665339983")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_DATABASE</td>\n
                      <td><pre class=sf-dump id=sf-dump-2086464153 data-indent-pad="  ">"<span class=sf-dump-str title="8 characters">:memory:</span>"\n
      </pre><script>Sfdump("sf-dump-2086464153")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>CACHE_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-2105875412 data-indent-pad="  ">"<span class=sf-dump-str title="5 characters">array</span>"\n
      </pre><script>Sfdump("sf-dump-2105875412")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SESSION_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-1363592122 data-indent-pad="  ">"<span class=sf-dump-str title="5 characters">array</span>"\n
      </pre><script>Sfdump("sf-dump-1363592122")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>QUEUE_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-941318718 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">sync</span>"\n
      </pre><script>Sfdump("sf-dump-941318718")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_NAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-447164609 data-indent-pad="  ">"<span class=sf-dump-str title="7 characters">Laravel</span>"\n
      </pre><script>Sfdump("sf-dump-447164609")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_KEY</td>\n
                      <td><pre class=sf-dump id=sf-dump-1880999971 data-indent-pad="  ">"<span class=sf-dump-str title="51 characters">base64:kUmPYbNSRg37PUwL1En4OyhgSo5fzxgYyO2WhCIWLF8=</span>"\n
      </pre><script>Sfdump("sf-dump-1880999971")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_DEBUG</td>\n
                      <td><pre class=sf-dump id=sf-dump-1680348974 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">true</span>"\n
      </pre><script>Sfdump("sf-dump-1680348974")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_LOG_LEVEL</td>\n
                      <td><pre class=sf-dump id=sf-dump-454612625 data-indent-pad="  ">"<span class=sf-dump-str title="5 characters">debug</span>"\n
      </pre><script>Sfdump("sf-dump-454612625")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_URL</td>\n
                      <td><pre class=sf-dump id=sf-dump-30811562 data-indent-pad="  ">"<span class=sf-dump-str title="16 characters">http://localhost</span>"\n
      </pre><script>Sfdump("sf-dump-30811562")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-426477360 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">127.0.0.1</span>"\n
      </pre><script>Sfdump("sf-dump-426477360")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-1327943342 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">3306</span>"\n
      </pre><script>Sfdump("sf-dump-1327943342")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_USERNAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-873378738 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">root</span>"\n
      </pre><script>Sfdump("sf-dump-873378738")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-467818904 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-467818904")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>BROADCAST_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-1474706439 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">log</span>"\n
      </pre><script>Sfdump("sf-dump-1474706439")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SESSION_LIFETIME</td>\n
                      <td><pre class=sf-dump id=sf-dump-621119624 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">120</span>"\n
      </pre><script>Sfdump("sf-dump-621119624")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-1493733566 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">127.0.0.1</span>"\n
      </pre><script>Sfdump("sf-dump-1493733566")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-643016579 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-643016579")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-1641240560 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">6379</span>"\n
      </pre><script>Sfdump("sf-dump-1641240560")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-882459785 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">smtp</span>"\n
      </pre><script>Sfdump("sf-dump-882459785")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-834802396 data-indent-pad="  ">"<span class=sf-dump-str title="16 characters">smtp.mailtrap.io</span>"\n
      </pre><script>Sfdump("sf-dump-834802396")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-1549846620 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">2525</span>"\n
      </pre><script>Sfdump("sf-dump-1549846620")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_USERNAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-1780732001 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-1780732001")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-1171563577 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-1171563577")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_ENCRYPTION</td>\n
                      <td><pre class=sf-dump id=sf-dump-514255889 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-514255889")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_ID</td>\n
                      <td><pre class=sf-dump id=sf-dump-743595330 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-743595330")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_KEY</td>\n
                      <td><pre class=sf-dump id=sf-dump-1634927311 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-1634927311")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_SECRET</td>\n
                      <td><pre class=sf-dump id=sf-dump-1867684562 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-1867684562")</script>\n
      </td>\n
                    </tr>\n
                              </table>\n
                    </div>\n
            </div>\n
      \n
          <div class="data-table-container" id="handlers">\n
          <label>Registered Handlers</label>\n
                <div class="handler active">\n
              0. Whoops\Handler\PrettyPageHandler      </div>\n
            </div>\n
      \n
      </div>\n
      </div>\n
            </div>\n
          </div>\n
      \n
          <script>var r=null;window.PR_SHOULD_USE_CONTINUATION=!0;\n
      (function(){function O(a){function i(d){var a=d.charCodeAt(0);if(a!==92)return a;var f=d.charAt(1);return(a=s[f])?a:"0"<=f&&f<="7"?parseInt(d.substring(1),8):f==="u"||f==="x"?parseInt(d.substring(2),16):d.charCodeAt(1)}function g(d){if(d<32)return(d<16?"\\x0":"\\x")+d.toString(16);d=String.fromCharCode(d);return d==="\\"||d==="-"||d==="]"||d==="^"?"\\"+d:d}function j(d){var a=d.substring(1,d.length-1).match(/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g),d=[],f=\n
      a[0]==="^",b=["["];f&&b.push("^");for(var f=f?1:0,c=a.length;f<c;++f){var h=a[f];if(/\\[bdsw]/i.test(h))b.push(h);else{var h=i(h),e;f+2<c&&"-"===a[f+1]?(e=i(a[f+2]),f+=2):e=h;d.push([h,e]);e<65||h>122||(e<65||h>90||d.push([Math.max(65,h)|32,Math.min(e,90)|32]),e<97||h>122||d.push([Math.max(97,h)&-33,Math.min(e,122)&-33]))}}d.sort(function(d,a){return d[0]-a[0]||a[1]-d[1]});a=[];c=[];for(f=0;f<d.length;++f)h=d[f],h[0]<=c[1]+1?c[1]=Math.max(c[1],h[1]):a.push(c=h);for(f=0;f<a.length;++f)h=a[f],b.push(g(h[0])),\n
      h[1]>h[0]&&(h[1]+1>h[0]&&b.push("-"),b.push(g(h[1])));b.push("]");return b.join("")}function t(d){for(var a=d.source.match(/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g),b=a.length,i=[],c=0,h=0;c<b;++c){var e=a[c];e==="("?++h:"\\"===e.charAt(0)&&(e=+e.substring(1))&&(e<=h?i[e]=-1:a[c]=g(e))}for(c=1;c<i.length;++c)-1===i[c]&&(i[c]=++z);for(h=c=0;c<b;++c)e=a[c],e==="("?(++h,i[h]||(a[c]="(?:")):"\\"===e.charAt(0)&&(e=+e.substring(1))&&e<=h&&\n
      (a[c]="\\"+i[e]);for(c=0;c<b;++c)"^"===a[c]&&"^"!==a[c+1]&&(a[c]="");if(d.ignoreCase&&w)for(c=0;c<b;++c)e=a[c],d=e.charAt(0),e.length>=2&&d==="["?a[c]=j(e):d!=="\\"&&(a[c]=e.replace(/[A-Za-z]/g,function(d){d=d.charCodeAt(0);return"["+String.fromCharCode(d&-33,d|32)+"]"}));return a.join("")}for(var z=0,w=!1,k=!1,m=0,b=a.length;m<b;++m){var o=a[m];if(o.ignoreCase)k=!0;else if(/[a-z]/i.test(o.source.replace(/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi,""))){w=!0;k=!1;break}}for(var s={b:8,t:9,n:10,v:11,\n
      f:12,r:13},q=[],m=0,b=a.length;m<b;++m){o=a[m];if(o.global||o.multiline)throw Error(""+o);q.push("(?:"+t(o)+")")}return RegExp(q.join("|"),k?"gi":"g")}function P(a,i){function g(a){switch(a.nodeType){case 1:if(j.test(a.className))break;for(var b=a.firstChild;b;b=b.nextSibling)g(b);b=a.nodeName.toLowerCase();if("br"===b||"li"===b)t[k]="\n",w[k<<1]=z++,w[k++<<1|1]=a;break;case 3:case 4:b=a.nodeValue,b.length&&(b=i?b.replace(/\r\n?/g,"\n"):b.replace(/[\t\n\r ]+/g," "),t[k]=b,w[k<<1]=z,z+=b.length,w[k++<<\n
      1|1]=a)}}var j=/(?:^|\s)nocode(?:\s|$)/,t=[],z=0,w=[],k=0;g(a);return{a:t.join("").replace(/\n$/,""),d:w}}function E(a,i,g,j){i&&(a={a:i,e:a},g(a),j.push.apply(j,a.g))}function x(a,i){function g(a){for(var k=a.e,m=[k,"pln"],b=0,o=a.a.match(t)||[],s={},q=0,d=o.length;q<d;++q){var v=o[q],f=s[v],u=void 0,c;if(typeof f==="string")c=!1;else{var h=j[v.charAt(0)];if(h)u=v.match(h[1]),f=h[0];else{for(c=0;c<z;++c)if(h=i[c],u=v.match(h[1])){f=h[0];break}u||(f="pln")}if((c=f.length>=5&&"lang-"===f.substring(0,\n
      5))&&!(u&&typeof u[1]==="string"))c=!1,f="src";c||(s[v]=f)}h=b;b+=v.length;if(c){c=u[1];var e=v.indexOf(c),p=e+c.length;u[2]&&(p=v.length-u[2].length,e=p-c.length);f=f.substring(5);E(k+h,v.substring(0,e),g,m);E(k+h+e,c,F(f,c),m);E(k+h+p,v.substring(p),g,m)}else m.push(k+h,f)}a.g=m}var j={},t;(function(){for(var g=a.concat(i),k=[],m={},b=0,o=g.length;b<o;++b){var s=g[b],q=s[3];if(q)for(var d=q.length;--d>=0;)j[q.charAt(d)]=s;s=s[1];q=""+s;m.hasOwnProperty(q)||(k.push(s),m[q]=r)}k.push(/[\S\s]/);t=\n
      O(k)})();var z=i.length;return g}function l(a){var i=[],g=[];a.tripleQuotedStrings?i.push(["str",/^(?:'''(?:[^'\\]|\\[\S\s]|''?(?=[^']))*(?:'''|$)|"""(?:[^"\\]|\\[\S\s]|""?(?=[^"]))*(?:"""|$)|'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$))/,r,"'\""]):a.multiLineStrings?i.push(["str",/^(?:'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/,r,"'\"`"]):i.push(["str",/^(?:'(?:[^\n\r'\\]|\\.)*(?:'|$)|"(?:[^\n\r"\\]|\\.)*(?:"|$))/,r,"\"'"]);a.verbatimStrings&&\n
      g.push(["str",/^@"(?:[^"]|"")*(?:"|$)/,r]);var j=a.hashComments;j&&(a.cStyleComments?(j>1?i.push(["com",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,r,"#"]):i.push(["com",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\n\r]*)/,r,"#"]),g.push(["str",/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,r])):i.push(["com",/^#[^\n\r]*/,r,"#"]));a.cStyleComments&&(g.push(["com",/^\/\/[^\n\r]*/,r]),g.push(["com",/^\/\*[\S\s]*?(?:\*\/|$)/,\n
      r]));a.regexLiterals&&g.push(["lang-regex",/^(?:^^\.?|[+-]|[!=]={0,2}|#|%=?|&&?=?|\(|\*=?|[+-]=|->|\/=?|::?|<<?=?|>{1,3}=?|[,;?@[{~]|\^\^?=?|\|\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\s*(\/(?=[^*/])(?:[^/[\\]|\\[\S\s]|\[(?:[^\\\]]|\\[\S\s])*(?:]|$))+\/)/]);(j=a.types)&&g.push(["typ",j]);a=(""+a.keywords).replace(/^ | $/g,"");a.length&&g.push(["kwd",RegExp("^(?:"+a.replace(/[\s,]+/g,"|")+")\\b"),r]);i.push(["pln",/^\s+/,r," \r\n\t\u00a0"]);g.push(["lit",\n
      /^@[$_a-z][\w$@]*/i,r],["typ",/^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/,r],["pln",/^[$_a-z][\w$@]*/i,r],["lit",/^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i,r,"0123456789"],["pln",/^\\[\S\s]?/,r],["pun",/^.[^\s\w"$'./@\\`]*/,r]);return x(i,g)}function G(a,i,g){function j(a){switch(a.nodeType){case 1:if(z.test(a.className))break;if("br"===a.nodeName)t(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)j(a);break;case 3:case 4:if(g){var b=\n
      a.nodeValue,f=b.match(n);if(f){var i=b.substring(0,f.index);a.nodeValue=i;(b=b.substring(f.index+f[0].length))&&a.parentNode.insertBefore(k.createTextNode(b),a.nextSibling);t(a);i||a.parentNode.removeChild(a)}}}}function t(a){function i(a,b){var d=b?a.cloneNode(!1):a,e=a.parentNode;if(e){var e=i(e,1),f=a.nextSibling;e.appendChild(d);for(var g=f;g;g=f)f=g.nextSibling,e.appendChild(g)}return d}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;for(var a=i(a.nextSibling,0),f;(f=a.parentNode)&&f.nodeType===\n
      1;)a=f;b.push(a)}for(var z=/(?:^|\s)nocode(?:\s|$)/,n=/\r\n?|\n/,k=a.ownerDocument,m=k.createElement("li");a.firstChild;)m.appendChild(a.firstChild);for(var b=[m],o=0;o<b.length;++o)j(b[o]);i===(i|0)&&b[0].setAttribute("value",i);var s=k.createElement("ol");s.className="linenums";for(var i=Math.max(0,i-1|0)||0,o=0,q=b.length;o<q;++o)m=b[o],m.className="L"+(o+i)%10,m.firstChild||m.appendChild(k.createTextNode("\u00a0")),s.appendChild(m);a.appendChild(s)}function n(a,i){for(var g=i.length;--g>=0;){var j=\n
      i[g];A.hasOwnProperty(j)?C.console&&console.warn("cannot override language handler %s",j):A[j]=a}}function F(a,i){if(!a||!A.hasOwnProperty(a))a=/^\s*</.test(i)?"default-markup":"default-code";return A[a]}function H(a){var i=a.h;try{var g=P(a.c,a.i),j=g.a;a.a=j;a.d=g.d;a.e=0;F(i,j)(a);var t=/\bMSIE\s(\d+)/.exec(navigator.userAgent),t=t&&+t[1]<=8,i=/\n/g,n=a.a,w=n.length,g=0,k=a.d,m=k.length,j=0,b=a.g,o=b.length,s=0;b[o]=w;var q,d;for(d=q=0;d<o;)b[d]!==b[d+2]?(b[q++]=b[d++],b[q++]=b[d++]):d+=2;o=q;\n
      for(d=q=0;d<o;){for(var v=b[d],f=b[d+1],u=d+2;u+2<=o&&b[u+1]===f;)u+=2;b[q++]=v;b[q++]=f;d=u}b.length=q;var c=a.c,h;if(c)h=c.style.display,c.style.display="none";try{for(;j<m;){var e=k[j+2]||w,p=b[s+2]||w,u=Math.min(e,p),l=k[j+1],D;if(l.nodeType!==1&&(D=n.substring(g,u))){t&&(D=D.replace(i,"\r"));l.nodeValue=D;var y=l.ownerDocument,x=y.createElement("span");x.className=b[s+1];var B=l.parentNode;B.replaceChild(x,l);x.appendChild(l);g<e&&(k[j+1]=l=y.createTextNode(n.substring(u,e)),B.insertBefore(l,\n
      x.nextSibling))}g=u;g>=e&&(j+=2);g>=p&&(s+=2)}}finally{if(c)c.style.display=h}}catch(A){C.console&&console.log(A&&A.stack?A.stack:A)}}var C=window,y=["break,continue,do,else,for,if,return,while"],B=[[y,"auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"],I=[B,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],\n
      J=[B,"abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient"],K=[J,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,let,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var,virtual,where"],B=[B,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"],\n
      L=[y,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],M=[y,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],y=[y,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"],N=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/,\n
      Q=/\S/,R=l({keywords:[I,K,B,"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END"+L,M,y],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),A={};n(R,["default-code"]);n(x([],[["pln",/^[^<?]+/],["dec",/^<!\w[^>]*(?:>|$)/],["com",/^<\!--[\S\s]*?(?:--\>|$)/],["lang-",/^<\?([\S\s]+?)(?:\?>|$)/],["lang-",/^<%([\S\s]+?)(?:%>|$)/],["pun",/^(?:<[%?]|[%?]>)/],["lang-",\n
      /^<xmp\b[^>]*>([\S\s]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\S\s]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\S\s]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]);n(x([["pln",/^\s+/,r," \t\r\n"],["atv",/^(?:"[^"]*"?|'[^']*'?)/,r,"\"'"]],[["tag",/^^<\/?[a-z](?:[\w-.:]*\w)?|\/?>$/i],["atn",/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^\s"'>]*(?:[^\s"'/>]|\/(?=\s)))/],["pun",/^[/<->]+/],\n
      ["lang-js",/^on\w+\s*=\s*"([^"]+)"/i],["lang-js",/^on\w+\s*=\s*'([^']+)'/i],["lang-js",/^on\w+\s*=\s*([^\s"'>]+)/i],["lang-css",/^style\s*=\s*"([^"]+)"/i],["lang-css",/^style\s*=\s*'([^']+)'/i],["lang-css",/^style\s*=\s*([^\s"'>]+)/i]]),["in.tag"]);n(x([],[["atv",/^[\S\s]+/]]),["uq.val"]);n(l({keywords:I,hashComments:!0,cStyleComments:!0,types:N}),["c","cc","cpp","cxx","cyc","m"]);n(l({keywords:"null,true,false"}),["json"]);n(l({keywords:K,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:N}),\n
      ["cs"]);n(l({keywords:J,cStyleComments:!0}),["java"]);n(l({keywords:y,hashComments:!0,multiLineStrings:!0}),["bsh","csh","sh"]);n(l({keywords:L,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),["cv","py"]);n(l({keywords:"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["perl","pl","pm"]);n(l({keywords:M,hashComments:!0,\n
      multiLineStrings:!0,regexLiterals:!0}),["rb"]);n(l({keywords:B,cStyleComments:!0,regexLiterals:!0}),["js"]);n(l({keywords:"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),["coffee"]);n(x([],[["str",/^[\S\s]+/]]),["regex"]);var S=C.PR={createSimpleLexer:x,registerLangHandler:n,sourceDecorator:l,\n
      PR_ATTRIB_NAME:"atn",PR_ATTRIB_VALUE:"atv",PR_COMMENT:"com",PR_DECLARATION:"dec",PR_KEYWORD:"kwd",PR_LITERAL:"lit",PR_NOCODE:"nocode",PR_PLAIN:"pln",PR_PUNCTUATION:"pun",PR_SOURCE:"src",PR_STRING:"str",PR_TAG:"tag",PR_TYPE:"typ",prettyPrintOne:C.prettyPrintOne=function(a,i,g){var j=document.createElement("pre");j.innerHTML=a;g&&G(j,g,!0);H({h:i,j:g,c:j,i:1});return j.innerHTML},prettyPrint:C.prettyPrint=function(a){function i(){var u;for(var g=C.PR_SHOULD_USE_CONTINUATION?k.now()+250:Infinity;m<j.length&&\n
      k.now()<g;m++){var c=j[m],h=c.className;if(s.test(h)&&!q.test(h)){for(var e=!1,p=c.parentNode;p;p=p.parentNode)if(f.test(p.tagName)&&p.className&&s.test(p.className)){e=!0;break}if(!e){c.className+=" prettyprinted";var h=h.match(o),n;if(e=!h){for(var e=c,p=void 0,l=e.firstChild;l;l=l.nextSibling)var t=l.nodeType,p=t===1?p?e:l:t===3?Q.test(l.nodeValue)?e:p:p;e=(n=p===e?void 0:p)&&v.test(n.tagName)}e&&(h=n.className.match(o));h&&(h=h[1]);u=d.test(c.tagName)?1:(e=(e=c.currentStyle)?e.whiteSpace:document.defaultView&&\n
      document.defaultView.getComputedStyle?document.defaultView.getComputedStyle(c,r).getPropertyValue("white-space"):0)&&"pre"===e.substring(0,3),e=u;(p=(p=c.className.match(/\blinenums\b(?::(\d+))?/))?p[1]&&p[1].length?+p[1]:!0:!1)&&G(c,p,e);b={h:h,c:c,j:p,i:e};H(b)}}}m<j.length?setTimeout(i,250):a&&a()}for(var g=[document.getElementsByTagName("pre"),document.getElementsByTagName("code"),document.getElementsByTagName("xmp")],j=[],n=0;n<g.length;++n)for(var l=0,w=g[n].length;l<w;++l)j.push(g[n][l]);var g=\n
      r,k=Date;k.now||(k={now:function(){return+new Date}});var m=0,b,o=/\blang(?:uage)?-([\w.]+)(?!\S)/,s=/\bprettyprint\b/,q=/\bprettyprinted\b/,d=/pre|xmp/i,v=/^code$/i,f=/^(?:pre|code|xmp)$/i;i()}};typeof define==="function"&&define.amd&&define("google-code-prettify",[],function(){return S})})();\n
      </script>\n
          <script>/* Zepto v1.1.3 - zepto event ajax form ie - zeptojs.com/license */\n
      var Zepto=function(){function L(t){return null==t?String(t):j[T.call(t)]||"object"}function Z(t){return"function"==L(t)}function $(t){return null!=t&&t==t.window}function _(t){return null!=t&&t.nodeType==t.DOCUMENT_NODE}function D(t){return"object"==L(t)}function R(t){return D(t)&&!$(t)&&Object.getPrototypeOf(t)==Object.prototype}function M(t){return"number"==typeof t.length}function k(t){return s.call(t,function(t){return null!=t})}function z(t){return t.length>0?n.fn.concat.apply([],t):t}function F(t){return t.replace(/::/g,"/").replace(/([A-Z]+)([A-Z][a-z])/g,"$1_$2").replace(/([a-z\d])([A-Z])/g,"$1_$2").replace(/_/g,"-").toLowerCase()}function q(t){return t in f?f[t]:f[t]=new RegExp("(^|\\s)"+t+"(\\s|$)")}function H(t,e){return"number"!=typeof e||c[F(t)]?e:e+"px"}function I(t){var e,n;return u[t]||(e=a.createElement(t),a.body.appendChild(e),n=getComputedStyle(e,"").getPropertyValue("display"),e.parentNode.removeChild(e),"none"==n&&(n="block"),u[t]=n),u[t]}function V(t){return"children"in t?o.call(t.children):n.map(t.childNodes,function(t){return 1==t.nodeType?t:void 0})}function U(n,i,r){for(e in i)r&&(R(i[e])||A(i[e]))?(R(i[e])&&!R(n[e])&&(n[e]={}),A(i[e])&&!A(n[e])&&(n[e]=[]),U(n[e],i[e],r)):i[e]!==t&&(n[e]=i[e])}function B(t,e){return null==e?n(t):n(t).filter(e)}function J(t,e,n,i){return Z(e)?e.call(t,n,i):e}function X(t,e,n){null==n?t.removeAttribute(e):t.setAttribute(e,n)}function W(e,n){var i=e.className,r=i&&i.baseVal!==t;return n===t?r?i.baseVal:i:void(r?i.baseVal=n:e.className=n)}function Y(t){var e;try{return t?"true"==t||("false"==t?!1:"null"==t?null:/^0/.test(t)||isNaN(e=Number(t))?/^[\[\{]/.test(t)?n.parseJSON(t):t:e):t}catch(i){return t}}function G(t,e){e(t);for(var n in t.childNodes)G(t.childNodes[n],e)}var t,e,n,i,C,N,r=[],o=r.slice,s=r.filter,a=window.document,u={},f={},c={"column-count":1,columns:1,"font-weight":1,"line-height":1,opacity:1,"z-index":1,zoom:1},l=/^\s*<(\w+|!)[^>]*>/,h=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,p=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,d=/^(?:body|html)$/i,m=/([A-Z])/g,g=["val","css","html","text","data","width","height","offset"],v=["after","prepend","before","append"],y=a.createElement("table"),x=a.createElement("tr"),b={tr:a.createElement("tbody"),tbody:y,thead:y,tfoot:y,td:x,th:x,"*":a.createElement("div")},w=/complete|loaded|interactive/,E=/^[\w-]*$/,j={},T=j.toString,S={},O=a.createElement("div"),P={tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},A=Array.isArray||function(t){return t instanceof Array};return S.matches=function(t,e){if(!e||!t||1!==t.nodeType)return!1;var n=t.webkitMatchesSelector||t.mozMatchesSelector||t.oMatchesSelector||t.matchesSelector;if(n)return n.call(t,e);var i,r=t.parentNode,o=!r;return o&&(r=O).appendChild(t),i=~S.qsa(r,e).indexOf(t),o&&O.removeChild(t),i},C=function(t){return t.replace(/-+(.)?/g,function(t,e){return e?e.toUpperCase():""})},N=function(t){return s.call(t,function(e,n){return t.indexOf(e)==n})},S.fragment=function(e,i,r){var s,u,f;return h.test(e)&&(s=n(a.createElement(RegExp.$1))),s||(e.replace&&(e=e.replace(p,"<$1></$2>")),i===t&&(i=l.test(e)&&RegExp.$1),i in b||(i="*"),f=b[i],f.innerHTML=""+e,s=n.each(o.call(f.childNodes),function(){f.removeChild(this)})),R(r)&&(u=n(s),n.each(r,function(t,e){g.indexOf(t)>-1?u[t](e):u.attr(t,e)})),s},S.Z=function(t,e){return t=t||[],t.__proto__=n.fn,t.selector=e||"",t},S.isZ=function(t){return t instanceof S.Z},S.init=function(e,i){var r;if(!e)return S.Z();if("string"==typeof e)if(e=e.trim(),"<"==e[0]&&l.test(e))r=S.fragment(e,RegExp.$1,i),e=null;else{if(i!==t)return n(i).find(e);r=S.qsa(a,e)}else{if(Z(e))return n(a).ready(e);if(S.isZ(e))return e;if(A(e))r=k(e);else if(D(e))r=[e],e=null;else if(l.test(e))r=S.fragment(e.trim(),RegExp.$1,i),e=null;else{if(i!==t)return n(i).find(e);r=S.qsa(a,e)}}return S.Z(r,e)},n=function(t,e){return S.init(t,e)},n.extend=function(t){var e,n=o.call(arguments,1);return"boolean"==typeof t&&(e=t,t=n.shift()),n.forEach(function(n){U(t,n,e)}),t},S.qsa=function(t,e){var n,i="#"==e[0],r=!i&&"."==e[0],s=i||r?e.slice(1):e,a=E.test(s);return _(t)&&a&&i?(n=t.getElementById(s))?[n]:[]:1!==t.nodeType&&9!==t.nodeType?[]:o.call(a&&!i?r?t.getElementsByClassName(s):t.getElementsByTagName(e):t.querySelectorAll(e))},n.contains=function(t,e){return t!==e&&t.contains(e)},n.type=L,n.isFunction=Z,n.isWindow=$,n.isArray=A,n.isPlainObject=R,n.isEmptyObject=function(t){var e;for(e in t)return!1;return!0},n.inArray=function(t,e,n){return r.indexOf.call(e,t,n)},n.camelCase=C,n.trim=function(t){return null==t?"":String.prototype.trim.call(t)},n.uuid=0,n.support={},n.expr={},n.map=function(t,e){var n,r,o,i=[];if(M(t))for(r=0;r<t.length;r++)n=e(t[r],r),null!=n&&i.push(n);else for(o in t)n=e(t[o],o),null!=n&&i.push(n);return z(i)},n.each=function(t,e){var n,i;if(M(t)){for(n=0;n<t.length;n++)if(e.call(t[n],n,t[n])===!1)return t}else for(i in t)if(e.call(t[i],i,t[i])===!1)return t;return t},n.grep=function(t,e){return s.call(t,e)},window.JSON&&(n.parseJSON=JSON.parse),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(t,e){j["[object "+e+"]"]=e.toLowerCase()}),n.fn={forEach:r.forEach,reduce:r.reduce,push:r.push,sort:r.sort,indexOf:r.indexOf,concat:r.concat,map:function(t){return n(n.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return n(o.apply(this,arguments))},ready:function(t){return w.test(a.readyState)&&a.body?t(n):a.addEventListener("DOMContentLoaded",function(){t(n)},!1),this},get:function(e){return e===t?o.call(this):this[e>=0?e:e+this.length]},toArray:function(){return this.get()},size:function(){return this.length},remove:function(){return this.each(function(){null!=this.parentNode&&this.parentNode.removeChild(this)})},each:function(t){return r.every.call(this,function(e,n){return t.call(e,n,e)!==!1}),this},filter:function(t){return Z(t)?this.not(this.not(t)):n(s.call(this,function(e){return S.matches(e,t)}))},add:function(t,e){return n(N(this.concat(n(t,e))))},is:function(t){return this.length>0&&S.matches(this[0],t)},not:function(e){var i=[];if(Z(e)&&e.call!==t)this.each(function(t){e.call(this,t)||i.push(this)});else{var r="string"==typeof e?this.filter(e):M(e)&&Z(e.item)?o.call(e):n(e);this.forEach(function(t){r.indexOf(t)<0&&i.push(t)})}return n(i)},has:function(t){return this.filter(function(){return D(t)?n.contains(this,t):n(this).find(t).size()})},eq:function(t){return-1===t?this.slice(t):this.slice(t,+t+1)},first:function(){var t=this[0];return t&&!D(t)?t:n(t)},last:function(){var t=this[this.length-1];return t&&!D(t)?t:n(t)},find:function(t){var e,i=this;return e="object"==typeof t?n(t).filter(function(){var t=this;return r.some.call(i,function(e){return n.contains(e,t)})}):1==this.length?n(S.qsa(this[0],t)):this.map(function(){return S.qsa(this,t)})},closest:function(t,e){var i=this[0],r=!1;for("object"==typeof t&&(r=n(t));i&&!(r?r.indexOf(i)>=0:S.matches(i,t));)i=i!==e&&!_(i)&&i.parentNode;return n(i)},parents:function(t){for(var e=[],i=this;i.length>0;)i=n.map(i,function(t){return(t=t.parentNode)&&!_(t)&&e.indexOf(t)<0?(e.push(t),t):void 0});return B(e,t)},parent:function(t){return B(N(this.pluck("parentNode")),t)},children:function(t){return B(this.map(function(){return V(this)}),t)},contents:function(){return this.map(function(){return o.call(this.childNodes)})},siblings:function(t){return B(this.map(function(t,e){return s.call(V(e.parentNode),function(t){return t!==e})}),t)},empty:function(){return this.each(function(){this.innerHTML=""})},pluck:function(t){return n.map(this,function(e){return e[t]})},show:function(){return this.each(function(){"none"==this.style.display&&(this.style.display=""),"none"==getComputedStyle(this,"").getPropertyValue("display")&&(this.style.display=I(this.nodeName))})},replaceWith:function(t){return this.before(t).remove()},wrap:function(t){var e=Z(t);if(this[0]&&!e)var i=n(t).get(0),r=i.parentNode||this.length>1;return this.each(function(o){n(this).wrapAll(e?t.call(this,o):r?i.cloneNode(!0):i)})},wrapAll:function(t){if(this[0]){n(this[0]).before(t=n(t));for(var e;(e=t.children()).length;)t=e.first();n(t).append(this)}return this},wrapInner:function(t){var e=Z(t);return this.each(function(i){var r=n(this),o=r.contents(),s=e?t.call(this,i):t;o.length?o.wrapAll(s):r.append(s)})},unwrap:function(){return this.parent().each(function(){n(this).replaceWith(n(this).children())}),this},clone:function(){return this.map(function(){return this.cloneNode(!0)})},hide:function(){return this.css("display","none")},toggle:function(e){return this.each(function(){var i=n(this);(e===t?"none"==i.css("display"):e)?i.show():i.hide()})},prev:function(t){return n(this.pluck("previousElementSibling")).filter(t||"*")},next:function(t){return n(this.pluck("nextElementSibling")).filter(t||"*")},html:function(t){return 0===arguments.length?this.length>0?this[0].innerHTML:null:this.each(function(e){var i=this.innerHTML;n(this).empty().append(J(this,t,e,i))})},text:function(e){return 0===arguments.length?this.length>0?this[0].textContent:null:this.each(function(){this.textContent=e===t?"":""+e})},attr:function(n,i){var r;return"string"==typeof n&&i===t?0==this.length||1!==this[0].nodeType?t:"value"==n&&"INPUT"==this[0].nodeName?this.val():!(r=this[0].getAttribute(n))&&n in this[0]?this[0][n]:r:this.each(function(t){if(1===this.nodeType)if(D(n))for(e in n)X(this,e,n[e]);else X(this,n,J(this,i,t,this.getAttribute(n)))})},removeAttr:function(t){return this.each(function(){1===this.nodeType&&X(this,t)})},prop:function(e,n){return e=P[e]||e,n===t?this[0]&&this[0][e]:this.each(function(t){this[e]=J(this,n,t,this[e])})},data:function(e,n){var i=this.attr("data-"+e.replace(m,"-$1").toLowerCase(),n);return null!==i?Y(i):t},val:function(t){return 0===arguments.length?this[0]&&(this[0].multiple?n(this[0]).find("option").filter(function(){return this.selected}).pluck("value"):this[0].value):this.each(function(e){this.value=J(this,t,e,this.value)})},offset:function(t){if(t)return this.each(function(e){var i=n(this),r=J(this,t,e,i.offset()),o=i.offsetParent().offset(),s={top:r.top-o.top,left:r.left-o.left};"static"==i.css("position")&&(s.position="relative"),i.css(s)});if(0==this.length)return null;var e=this[0].getBoundingClientRect();return{left:e.left+window.pageXOffset,top:e.top+window.pageYOffset,width:Math.round(e.width),height:Math.round(e.height)}},css:function(t,i){if(arguments.length<2){var r=this[0],o=getComputedStyle(r,"");if(!r)return;if("string"==typeof t)return r.style[C(t)]||o.getPropertyValue(t);if(A(t)){var s={};return n.each(A(t)?t:[t],function(t,e){s[e]=r.style[C(e)]||o.getPropertyValue(e)}),s}}var a="";if("string"==L(t))i||0===i?a=F(t)+":"+H(t,i):this.each(function(){this.style.removeProperty(F(t))});else for(e in t)t[e]||0===t[e]?a+=F(e)+":"+H(e,t[e])+";":this.each(function(){this.style.removeProperty(F(e))});return this.each(function(){this.style.cssText+=";"+a})},index:function(t){return t?this.indexOf(n(t)[0]):this.parent().children().indexOf(this[0])},hasClass:function(t){return t?r.some.call(this,function(t){return this.test(W(t))},q(t)):!1},addClass:function(t){return t?this.each(function(e){i=[];var r=W(this),o=J(this,t,e,r);o.split(/\s+/g).forEach(function(t){n(this).hasClass(t)||i.push(t)},this),i.length&&W(this,r+(r?" ":"")+i.join(" "))}):this},removeClass:function(e){return this.each(function(n){return e===t?W(this,""):(i=W(this),J(this,e,n,i).split(/\s+/g).forEach(function(t){i=i.replace(q(t)," ")}),void W(this,i.trim()))})},toggleClass:function(e,i){return e?this.each(function(r){var o=n(this),s=J(this,e,r,W(this));s.split(/\s+/g).forEach(function(e){(i===t?!o.hasClass(e):i)?o.addClass(e):o.removeClass(e)})}):this},scrollTop:function(e){if(this.length){var n="scrollTop"in this[0];return e===t?n?this[0].scrollTop:this[0].pageYOffset:this.each(n?function(){this.scrollTop=e}:function(){this.scrollTo(this.scrollX,e)})}},scrollLeft:function(e){if(this.length){var n="scrollLeft"in this[0];return e===t?n?this[0].scrollLeft:this[0].pageXOffset:this.each(n?function(){this.scrollLeft=e}:function(){this.scrollTo(e,this.scrollY)})}},position:function(){if(this.length){var t=this[0],e=this.offsetParent(),i=this.offset(),r=d.test(e[0].nodeName)?{top:0,left:0}:e.offset();return i.top-=parseFloat(n(t).css("margin-top"))||0,i.left-=parseFloat(n(t).css("margin-left"))||0,r.top+=parseFloat(n(e[0]).css("border-top-width"))||0,r.left+=parseFloat(n(e[0]).css("border-left-width"))||0,{top:i.top-r.top,left:i.left-r.left}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent||a.body;t&&!d.test(t.nodeName)&&"static"==n(t).css("position");)t=t.offsetParent;return t})}},n.fn.detach=n.fn.remove,["width","height"].forEach(function(e){var i=e.replace(/./,function(t){return t[0].toUpperCase()});n.fn[e]=function(r){var o,s=this[0];return r===t?$(s)?s["inner"+i]:_(s)?s.documentElement["scroll"+i]:(o=this.offset())&&o[e]:this.each(function(t){s=n(this),s.css(e,J(this,r,t,s[e]()))})}}),v.forEach(function(t,e){var i=e%2;n.fn[t]=function(){var t,o,r=n.map(arguments,function(e){return t=L(e),"object"==t||"array"==t||null==e?e:S.fragment(e)}),s=this.length>1;return r.length<1?this:this.each(function(t,a){o=i?a:a.parentNode,a=0==e?a.nextSibling:1==e?a.firstChild:2==e?a:null,r.forEach(function(t){if(s)t=t.cloneNode(!0);else if(!o)return n(t).remove();G(o.insertBefore(t,a),function(t){null==t.nodeName||"SCRIPT"!==t.nodeName.toUpperCase()||t.type&&"text/javascript"!==t.type||t.src||window.eval.call(window,t.innerHTML)})})})},n.fn[i?t+"To":"insert"+(e?"Before":"After")]=function(e){return n(e)[t](this),this}}),S.Z.prototype=n.fn,S.uniq=N,S.deserializeValue=Y,n.zepto=S,n}();window.Zepto=Zepto,void 0===window.$&&(window.$=Zepto),function(t){function l(t){return t._zid||(t._zid=e++)}function h(t,e,n,i){if(e=p(e),e.ns)var r=d(e.ns);return(s[l(t)]||[]).filter(function(t){return!(!t||e.e&&t.e!=e.e||e.ns&&!r.test(t.ns)||n&&l(t.fn)!==l(n)||i&&t.sel!=i)})}function p(t){var e=(""+t).split(".");return{e:e[0],ns:e.slice(1).sort().join(" ")}}function d(t){return new RegExp("(?:^| )"+t.replace(" "," .* ?")+"(?: |$)")}function m(t,e){return t.del&&!u&&t.e in f||!!e}function g(t){return c[t]||u&&f[t]||t}function v(e,i,r,o,a,u,f){var h=l(e),d=s[h]||(s[h]=[]);i.split(/\s/).forEach(function(i){if("ready"==i)return t(document).ready(r);var s=p(i);s.fn=r,s.sel=a,s.e in c&&(r=function(e){var n=e.relatedTarget;return!n||n!==this&&!t.contains(this,n)?s.fn.apply(this,arguments):void 0}),s.del=u;var l=u||r;s.proxy=function(t){if(t=j(t),!t.isImmediatePropagationStopped()){t.data=o;var i=l.apply(e,t._args==n?[t]:[t].concat(t._args));return i===!1&&(t.preventDefault(),t.stopPropagation()),i}},s.i=d.length,d.push(s),"addEventListener"in e&&e.addEventListener(g(s.e),s.proxy,m(s,f))})}function y(t,e,n,i,r){var o=l(t);(e||"").split(/\s/).forEach(function(e){h(t,e,n,i).forEach(function(e){delete s[o][e.i],"removeEventListener"in t&&t.removeEventListener(g(e.e),e.proxy,m(e,r))})})}function j(e,i){return(i||!e.isDefaultPrevented)&&(i||(i=e),t.each(E,function(t,n){var r=i[t];e[t]=function(){return this[n]=x,r&&r.apply(i,arguments)},e[n]=b}),(i.defaultPrevented!==n?i.defaultPrevented:"returnValue"in i?i.returnValue===!1:i.getPreventDefault&&i.getPreventDefault())&&(e.isDefaultPrevented=x)),e}function T(t){var e,i={originalEvent:t};for(e in t)w.test(e)||t[e]===n||(i[e]=t[e]);return j(i,t)}var n,e=1,i=Array.prototype.slice,r=t.isFunction,o=function(t){return"string"==typeof t},s={},a={},u="onfocusin"in window,f={focus:"focusin",blur:"focusout"},c={mouseenter:"mouseover",mouseleave:"mouseout"};a.click=a.mousedown=a.mouseup=a.mousemove="MouseEvents",t.event={add:v,remove:y},t.proxy=function(e,n){if(r(e)){var i=function(){return e.apply(n,arguments)};return i._zid=l(e),i}if(o(n))return t.proxy(e[n],e);throw new TypeError("expected function")},t.fn.bind=function(t,e,n){return this.on(t,e,n)},t.fn.unbind=function(t,e){return this.off(t,e)},t.fn.one=function(t,e,n,i){return this.on(t,e,n,i,1)};var x=function(){return!0},b=function(){return!1},w=/^([A-Z]|returnValue$|layer[XY]$)/,E={preventDefault:"isDefaultPrevented",stopImmediatePropagation:"isImmediatePropagationStopped",stopPropagation:"isPropagationStopped"};t.fn.delegate=function(t,e,n){return this.on(e,t,n)},t.fn.undelegate=function(t,e,n){return this.off(e,t,n)},t.fn.live=function(e,n){return t(document.body).delegate(this.selector,e,n),this},t.fn.die=function(e,n){return t(document.body).undelegate(this.selector,e,n),this},t.fn.on=function(e,s,a,u,f){var c,l,h=this;return e&&!o(e)?(t.each(e,function(t,e){h.on(t,s,a,e,f)}),h):(o(s)||r(u)||u===!1||(u=a,a=s,s=n),(r(a)||a===!1)&&(u=a,a=n),u===!1&&(u=b),h.each(function(n,r){f&&(c=function(t){return y(r,t.type,u),u.apply(this,arguments)}),s&&(l=function(e){var n,o=t(e.target).closest(s,r).get(0);return o&&o!==r?(n=t.extend(T(e),{currentTarget:o,liveFired:r}),(c||u).apply(o,[n].concat(i.call(arguments,1)))):void 0}),v(r,e,u,a,s,l||c)}))},t.fn.off=function(e,i,s){var a=this;return e&&!o(e)?(t.each(e,function(t,e){a.off(t,i,e)}),a):(o(i)||r(s)||s===!1||(s=i,i=n),s===!1&&(s=b),a.each(function(){y(this,e,s,i)}))},t.fn.trigger=function(e,n){return e=o(e)||t.isPlainObject(e)?t.Event(e):j(e),e._args=n,this.each(function(){"dispatchEvent"in this?this.dispatchEvent(e):t(this).triggerHandler(e,n)})},t.fn.triggerHandler=function(e,n){var i,r;return this.each(function(s,a){i=T(o(e)?t.Event(e):e),i._args=n,i.target=a,t.each(h(a,e.type||e),function(t,e){return r=e.proxy(i),i.isImmediatePropagationStopped()?!1:void 0})}),r},"focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error".split(" ").forEach(function(e){t.fn[e]=function(t){return t?this.bind(e,t):this.trigger(e)}}),["focus","blur"].forEach(function(e){t.fn[e]=function(t){return t?this.bind(e,t):this.each(function(){try{this[e]()}catch(t){}}),this}}),t.Event=function(t,e){o(t)||(e=t,t=e.type);var n=document.createEvent(a[t]||"Events"),i=!0;if(e)for(var r in e)"bubbles"==r?i=!!e[r]:n[r]=e[r];return n.initEvent(t,i,!0),j(n)}}(Zepto),function(t){function l(e,n,i){var r=t.Event(n);return t(e).trigger(r,i),!r.isDefaultPrevented()}function h(t,e,i,r){return t.global?l(e||n,i,r):void 0}function p(e){e.global&&0===t.active++&&h(e,null,"ajaxStart")}function d(e){e.global&&!--t.active&&h(e,null,"ajaxStop")}function m(t,e){var n=e.context;return e.beforeSend.call(n,t,e)===!1||h(e,n,"ajaxBeforeSend",[t,e])===!1?!1:void h(e,n,"ajaxSend",[t,e])}function g(t,e,n,i){var r=n.context,o="success";n.success.call(r,t,o,e),i&&i.resolveWith(r,[t,o,e]),h(n,r,"ajaxSuccess",[e,n,t]),y(o,e,n)}function v(t,e,n,i,r){var o=i.context;i.error.call(o,n,e,t),r&&r.rejectWith(o,[n,e,t]),h(i,o,"ajaxError",[n,i,t||e]),y(e,n,i)}function y(t,e,n){var i=n.context;n.complete.call(i,e,t),h(n,i,"ajaxComplete",[e,n]),d(n)}function x(){}function b(t){return t&&(t=t.split(";",2)[0]),t&&(t==f?"html":t==u?"json":s.test(t)?"script":a.test(t)&&"xml")||"text"}function w(t,e){return""==e?t:(t+"&"+e).replace(/[&?]{1,2}/,"?")}function E(e){e.processData&&e.data&&"string"!=t.type(e.data)&&(e.data=t.param(e.data,e.traditional)),!e.data||e.type&&"GET"!=e.type.toUpperCase()||(e.url=w(e.url,e.data),e.data=void 0)}function j(e,n,i,r){return t.isFunction(n)&&(r=i,i=n,n=void 0),t.isFunction(i)||(r=i,i=void 0),{url:e,data:n,success:i,dataType:r}}function S(e,n,i,r){var o,s=t.isArray(n),a=t.isPlainObject(n);t.each(n,function(n,u){o=t.type(u),r&&(n=i?r:r+"["+(a||"object"==o||"array"==o?n:"")+"]"),!r&&s?e.add(u.name,u.value):"array"==o||!i&&"object"==o?S(e,u,i,n):e.add(n,u)})}var i,r,e=0,n=window.document,o=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,s=/^(?:text|application)\/javascript/i,a=/^(?:text|application)\/xml/i,u="application/json",f="text/html",c=/^\s*$/;t.active=0,t.ajaxJSONP=function(i,r){if(!("type"in i))return t.ajax(i);var f,h,o=i.jsonpCallback,s=(t.isFunction(o)?o():o)||"jsonp"+ ++e,a=n.createElement("script"),u=window[s],c=function(e){t(a).triggerHandler("error",e||"abort")},l={abort:c};return r&&r.promise(l),t(a).on("load error",function(e,n){clearTimeout(h),t(a).off().remove(),"error"!=e.type&&f?g(f[0],l,i,r):v(null,n||"error",l,i,r),window[s]=u,f&&t.isFunction(u)&&u(f[0]),u=f=void 0}),m(l,i)===!1?(c("abort"),l):(window[s]=function(){f=arguments},a.src=i.url.replace(/\?(.+)=\?/,"?$1="+s),n.head.appendChild(a),i.timeout>0&&(h=setTimeout(function(){c("timeout")},i.timeout)),l)},t.ajaxSettings={type:"GET",beforeSend:x,success:x,error:x,complete:x,context:null,global:!0,xhr:function(){return new window.XMLHttpRequest},accepts:{script:"text/javascript, application/javascript, application/x-javascript",json:u,xml:"application/xml, text/xml",html:f,text:"text/plain"},crossDomain:!1,timeout:0,processData:!0,cache:!0},t.ajax=function(e){var n=t.extend({},e||{}),o=t.Deferred&&t.Deferred();for(i in t.ajaxSettings)void 0===n[i]&&(n[i]=t.ajaxSettings[i]);p(n),n.crossDomain||(n.crossDomain=/^([\w-]+:)?\/\/([^\/]+)/.test(n.url)&&RegExp.$2!=window.location.host),n.url||(n.url=window.location.toString()),E(n),n.cache===!1&&(n.url=w(n.url,"_="+Date.now()));var s=n.dataType,a=/\?.+=\?/.test(n.url);if("jsonp"==s||a)return a||(n.url=w(n.url,n.jsonp?n.jsonp+"=?":n.jsonp===!1?"":"callback=?")),t.ajaxJSONP(n,o);var j,u=n.accepts[s],f={},l=function(t,e){f[t.toLowerCase()]=[t,e]},h=/^([\w-]+:)\/\//.test(n.url)?RegExp.$1:window.location.protocol,d=n.xhr(),y=d.setRequestHeader;if(o&&o.promise(d),n.crossDomain||l("X-Requested-With","XMLHttpRequest"),l("Accept",u||"*/*"),(u=n.mimeType||u)&&(u.indexOf(",")>-1&&(u=u.split(",",2)[0]),d.overrideMimeType&&d.overrideMimeType(u)),(n.contentType||n.contentType!==!1&&n.data&&"GET"!=n.type.toUpperCase())&&l("Content-Type",n.contentType||"application/x-www-form-urlencoded"),n.headers)for(r in n.headers)l(r,n.headers[r]);if(d.setRequestHeader=l,d.onreadystatechange=function(){if(4==d.readyState){d.onreadystatechange=x,clearTimeout(j);var e,i=!1;if(d.status>=200&&d.status<300||304==d.status||0==d.status&&"file:"==h){s=s||b(n.mimeType||d.getResponseHeader("content-type")),e=d.responseText;try{"script"==s?(1,eval)(e):"xml"==s?e=d.responseXML:"json"==s&&(e=c.test(e)?null:t.parseJSON(e))}catch(r){i=r}i?v(i,"parsererror",d,n,o):g(e,d,n,o)}else v(d.statusText||null,d.status?"error":"abort",d,n,o)}},m(d,n)===!1)return d.abort(),v(null,"abort",d,n,o),d;if(n.xhrFields)for(r in n.xhrFields)d[r]=n.xhrFields[r];var T="async"in n?n.async:!0;d.open(n.type,n.url,T,n.username,n.password);for(r in f)y.apply(d,f[r]);return n.timeout>0&&(j=setTimeout(function(){d.onreadystatechange=x,d.abort(),v(null,"timeout",d,n,o)},n.timeout)),d.send(n.data?n.data:null),d},t.get=function(){return t.ajax(j.apply(null,arguments))},t.post=function(){var e=j.apply(null,arguments);return e.type="POST",t.ajax(e)},t.getJSON=function(){var e=j.apply(null,arguments);return e.dataType="json",t.ajax(e)},t.fn.load=function(e,n,i){if(!this.length)return this;var a,r=this,s=e.split(/\s/),u=j(e,n,i),f=u.success;return s.length>1&&(u.url=s[0],a=s[1]),u.success=function(e){r.html(a?t("<div>").html(e.replace(o,"")).find(a):e),f&&f.apply(r,arguments)},t.ajax(u),this};var T=encodeURIComponent;t.param=function(t,e){var n=[];return n.add=function(t,e){this.push(T(t)+"="+T(e))},S(n,t,e),n.join("&").replace(/%20/g,"+")}}(Zepto),function(t){t.fn.serializeArray=function(){var n,e=[];return t([].slice.call(this.get(0).elements)).each(function(){n=t(this);var i=n.attr("type");"fieldset"!=this.nodeName.toLowerCase()&&!this.disabled&&"submit"!=i&&"reset"!=i&&"button"!=i&&("radio"!=i&&"checkbox"!=i||this.checked)&&e.push({name:n.attr("name"),value:n.val()})}),e},t.fn.serialize=function(){var t=[];return this.serializeArray().forEach(function(e){t.push(encodeURIComponent(e.name)+"="+encodeURIComponent(e.value))}),t.join("&")},t.fn.submit=function(e){if(e)this.bind("submit",e);else if(this.length){var n=t.Event("submit");this.eq(0).trigger(n),n.isDefaultPrevented()||this.get(0).submit()}return this}}(Zepto),function(t){"__proto__"in{}||t.extend(t.zepto,{Z:function(e,n){return e=e||[],t.extend(e,t.fn),e.selector=n||"",e.__Z=!0,e},isZ:function(e){return"array"===t.type(e)&&"__Z"in e}});try{getComputedStyle(void 0)}catch(e){var n=getComputedStyle;window.getComputedStyle=function(t){try{return n(t)}catch(e){return null}}}}(Zepto);\n
      </script>\n
          <script>/*!\n
       * clipboard.js v1.5.3\n
       * https://zenorocha.github.io/clipboard.js\n
       *\n
       * Licensed MIT © Zeno Rocha\n
       */\n
      !function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.Clipboard=t()}}(function(){var t,e,n;return function t(e,n,r){function o(a,c){if(!n[a]){if(!e[a]){var s="function"==typeof require&&require;if(!c&&s)return s(a,!0);if(i)return i(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var l=n[a]={exports:{}};e[a][0].call(l.exports,function(t){var n=e[a][1][t];return o(n?n:t)},l,l.exports,t,e,n,r)}return n[a].exports}for(var i="function"==typeof require&&require,a=0;a<r.length;a++)o(r[a]);return o}({1:[function(t,e,n){var r=t("matches-selector");e.exports=function(t,e,n){for(var o=n?t:t.parentNode;o&&o!==document;){if(r(o,e))return o;o=o.parentNode}}},{"matches-selector":2}],2:[function(t,e,n){function r(t,e){if(i)return i.call(t,e);for(var n=t.parentNode.querySelectorAll(e),r=0;r<n.length;++r)if(n[r]==t)return!0;return!1}var o=Element.prototype,i=o.matchesSelector||o.webkitMatchesSelector||o.mozMatchesSelector||o.msMatchesSelector||o.oMatchesSelector;e.exports=r},{}],3:[function(t,e,n){function r(t,e,n,r){var i=o.apply(this,arguments);return t.addEventListener(n,i),{destroy:function(){t.removeEventListener(n,i)}}}function o(t,e,n,r){return function(n){var o=i(n.target,e,!0);o&&(Object.defineProperty(n,"target",{value:o}),r.call(t,n))}}var i=t("closest");e.exports=r},{closest:1}],4:[function(t,e,n){n.node=function(t){return void 0!==t&&t instanceof HTMLElement&&1===t.nodeType},n.nodeList=function(t){var e=Object.prototype.toString.call(t);return void 0!==t&&("[object NodeList]"===e||"[object HTMLCollection]"===e)&&"length"in t&&(0===t.length||n.node(t[0]))},n.string=function(t){return"string"==typeof t||t instanceof String},n.function=function(t){var e=Object.prototype.toString.call(t);return"[object Function]"===e}},{}],5:[function(t,e,n){function r(t,e,n){if(!t&&!e&&!n)throw new Error("Missing required arguments");if(!c.string(e))throw new TypeError("Second argument must be a String");if(!c.function(n))throw new TypeError("Third argument must be a Function");if(c.node(t))return o(t,e,n);if(c.nodeList(t))return i(t,e,n);if(c.string(t))return a(t,e,n);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}function o(t,e,n){return t.addEventListener(e,n),{destroy:function(){t.removeEventListener(e,n)}}}function i(t,e,n){return Array.prototype.forEach.call(t,function(t){t.addEventListener(e,n)}),{destroy:function(){Array.prototype.forEach.call(t,function(t){t.removeEventListener(e,n)})}}}function a(t,e,n){return s(document.body,t,e,n)}var c=t("./is"),s=t("delegate");e.exports=r},{"./is":4,delegate:3}],6:[function(t,e,n){function r(t){var e;if("INPUT"===t.nodeName||"TEXTAREA"===t.nodeName)t.select(),e=t.value;else{var n=window.getSelection(),r=document.createRange();r.selectNodeContents(t),n.removeAllRanges(),n.addRange(r),e=n.toString()}return e}e.exports=r},{}],7:[function(t,e,n){function r(){}r.prototype={on:function(t,e,n){var r=this.e||(this.e={});return(r[t]||(r[t]=[])).push({fn:e,ctx:n}),this},once:function(t,e,n){function r(){o.off(t,r),e.apply(n,arguments)}var o=this;return r._=e,this.on(t,r,n)},emit:function(t){var e=[].slice.call(arguments,1),n=((this.e||(this.e={}))[t]||[]).slice(),r=0,o=n.length;for(r;o>r;r++)n[r].fn.apply(n[r].ctx,e);return this},off:function(t,e){var n=this.e||(this.e={}),r=n[t],o=[];if(r&&e)for(var i=0,a=r.length;a>i;i++)r[i].fn!==e&&r[i].fn._!==e&&o.push(r[i]);return o.length?n[t]=o:delete n[t],this}},e.exports=r},{}],8:[function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}n.__esModule=!0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),a=t("select"),c=r(a),s=function(){function t(e){o(this,t),this.resolveOptions(e),this.initSelection()}return t.prototype.resolveOptions=function t(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.action=e.action,this.emitter=e.emitter,this.target=e.target,this.text=e.text,this.trigger=e.trigger,this.selectedText=""},t.prototype.initSelection=function t(){if(this.text&&this.target)throw new Error('Multiple attributes declared, use either "target" or "text"');if(this.text)this.selectFake();else{if(!this.target)throw new Error('Missing required attributes, use either "target" or "text"');this.selectTarget()}},t.prototype.selectFake=function t(){var e=this;this.removeFake(),this.fakeHandler=document.body.addEventListener("click",function(){return e.removeFake()}),this.fakeElem=document.createElement("textarea"),this.fakeElem.style.position="absolute",this.fakeElem.style.left="-9999px",this.fakeElem.style.top=(window.pageYOffset||document.documentElement.scrollTop)+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,document.body.appendChild(this.fakeElem),this.selectedText=c.default(this.fakeElem),this.copyText()},t.prototype.removeFake=function t(){this.fakeHandler&&(document.body.removeEventListener("click"),this.fakeHandler=null),this.fakeElem&&(document.body.removeChild(this.fakeElem),this.fakeElem=null)},t.prototype.selectTarget=function t(){this.selectedText=c.default(this.target),this.copyText()},t.prototype.copyText=function t(){var e=void 0;try{e=document.execCommand(this.action)}catch(n){e=!1}this.handleResult(e)},t.prototype.handleResult=function t(e){e?this.emitter.emit("success",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)}):this.emitter.emit("error",{action:this.action,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})},t.prototype.clearSelection=function t(){this.target&&this.target.blur(),window.getSelection().removeAllRanges()},t.prototype.destroy=function t(){this.removeFake()},i(t,[{key:"action",set:function t(){var e=arguments.length<=0||void 0===arguments[0]?"copy":arguments[0];if(this._action=e,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function t(){return this._action}},{key:"target",set:function t(e){if(void 0!==e){if(!e||"object"!=typeof e||1!==e.nodeType)throw new Error('Invalid "target" value, use a valid Element');this._target=e}},get:function t(){return this._target}}]),t}();n.default=s,e.exports=n.default},{select:6}],9:[function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(t,e){var n="data-clipboard-"+t;if(e.hasAttribute(n))return e.getAttribute(n)}n.__esModule=!0;var c=t("./clipboard-action"),s=r(c),u=t("tiny-emitter"),l=r(u),f=t("good-listener"),d=r(f),h=function(t){function e(n,r){o(this,e),t.call(this),this.resolveOptions(r),this.listenClick(n)}return i(e,t),e.prototype.resolveOptions=function t(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.action="function"==typeof e.action?e.action:this.defaultAction,this.target="function"==typeof e.target?e.target:this.defaultTarget,this.text="function"==typeof e.text?e.text:this.defaultText},e.prototype.listenClick=function t(e){var n=this;this.listener=d.default(e,"click",function(t){return n.onClick(t)})},e.prototype.onClick=function t(e){this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new s.default({action:this.action(e.target),target:this.target(e.target),text:this.text(e.target),trigger:e.target,emitter:this})},e.prototype.defaultAction=function t(e){return a("action",e)},e.prototype.defaultTarget=function t(e){var n=a("target",e);return n?document.querySelector(n):void 0},e.prototype.defaultText=function t(e){return a("text",e)},e.prototype.destroy=function t(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)},e}(l.default);n.default=h,e.exports=n.default},{"./clipboard-action":8,"good-listener":5,"tiny-emitter":7}]},{},[9])(9)});</script>\n
          <script>Zepto(function($) {\n
        var $leftPanel      = $('.left-panel');\n
        var $frameContainer = $('.frames-container');\n
        var $appFramesTab   = $('#application-frames-tab');\n
        var $allFramesTab   = $('#all-frames-tab');\n
        var $container      = $('.details-container');\n
        var $activeLine     = $frameContainer.find('.frame.active');\n
        var $activeFrame    = $container.find('.frame-code.active');\n
        var $ajaxEditors    = $('.editor-link[data-ajax]');\n
        var $header         = $('header');\n
      \n
        $header.on('mouseenter', function () {\n
          if ($header.find('.exception').height() >= 145) {\n
            $header.addClass('header-expand');\n
          }\n
        });\n
        $header.on('mouseleave', function () {\n
          $header.removeClass('header-expand');\n
        });\n
      \n
        /*\n
         * add prettyprint classes to our current active codeblock\n
         * run prettyPrint() to highlight the active code\n
         * scroll to the line when prettyprint is done\n
         * highlight the current line\n
         */\n
        var renderCurrentCodeblock = function(id) {\n
      \n
          // remove previous codeblocks so we only render the active one\n
          $('.code-block').removeClass('prettyprint');\n
      \n
          // pass the id in when we can for speed\n
          if (typeof(id) === 'undefined' || typeof(id) === 'object') {\n
            var id = /frame\-line\-([\d]*)/.exec($activeLine.attr('id'))[1];\n
          }\n
      \n
          $('#frame-code-linenums-' + id).addClass('prettyprint');\n
          $('#frame-code-args-' + id).addClass('prettyprint');\n
      \n
          prettyPrint(highlightCurrentLine);\n
      \n
        }\n
      \n
        /*\n
         * Highlight the active and neighboring lines for the current frame\n
         * Adjust the offset to make sure that line is veritcally centered\n
         */\n
      \n
        var highlightCurrentLine = function() {\n
          var activeLineNumber = +($activeLine.find('.frame-line').text());\n
          var $lines           = $activeFrame.find('.linenums li');\n
          var firstLine        = +($lines.first().val());\n
      \n
          var $offset = $($lines[activeLineNumber - firstLine - 10]);\n
          if ($offset.length > 0) {\n
            $offset[0].scrollIntoView();\n
          }\n
      \n
          $($lines[activeLineNumber - firstLine - 1]).addClass('current');\n
          $($lines[activeLineNumber - firstLine]).addClass('current active');\n
          $($lines[activeLineNumber - firstLine + 1]).addClass('current');\n
      \n
          $container.scrollTop(0);\n
      \n
        }\n
      \n
        /*\n
         * click handler for loading codeblocks\n
         */\n
      \n
        $frameContainer.on('click', '.frame', function() {\n
      \n
          var $this  = $(this);\n
          var id     = /frame\-line\-([\d]*)/.exec($this.attr('id'))[1];\n
          var $codeFrame = $('#frame-code-' + id);\n
      \n
          if ($codeFrame) {\n
      \n
            $activeLine.removeClass('active');\n
            $activeFrame.removeClass('active');\n
      \n
            $this.addClass('active');\n
            $codeFrame.addClass('active');\n
      \n
            $activeLine  = $this;\n
            $activeFrame = $codeFrame;\n
      \n
            renderCurrentCodeblock(id);\n
      \n
          }\n
      \n
        });\n
      \n
        var clipboard = new Clipboard('.clipboard');\n
        var showTooltip = function(elem, msg) {\n
          elem.setAttribute('class', 'clipboard tooltipped tooltipped-s');\n
          elem.setAttribute('aria-label', msg);\n
        };\n
      \n
        clipboard.on('success', function(e) {\n
            e.clearSelection();\n
      \n
            showTooltip(e.trigger, 'Copied!');\n
        });\n
      \n
        clipboard.on('error', function(e) {\n
            showTooltip(e.trigger, fallbackMessage(e.action));\n
        });\n
      \n
        var btn = document.querySelector('.clipboard');\n
      \n
        btn.addEventListener('mouseleave', function(e) {\n
          e.currentTarget.setAttribute('class', 'clipboard');\n
          e.currentTarget.removeAttribute('aria-label');\n
        });\n
      \n
        function fallbackMessage(action) {\n
          var actionMsg = '';\n
          var actionKey = (action === 'cut' ? 'X' : 'C');\n
      \n
          if (/Mac/i.test(navigator.userAgent)) {\n
              actionMsg = 'Press ⌘-' + actionKey + ' to ' + action;\n
          } else {\n
              actionMsg = 'Press Ctrl-' + actionKey + ' to ' + action;\n
          }\n
      \n
          return actionMsg;\n
        }\n
      \n
        function scrollIntoView($node, $parent) {\n
          var nodeOffset = $node.offset();\n
          var nodeTop = nodeOffset.top;\n
          var nodeBottom = nodeTop + nodeOffset.height;\n
          var parentScrollTop = $parent.scrollTop();\n
          var parentHeight = $parent.height();\n
      \n
          if (nodeTop < 0) {\n
            $parent.scrollTop(parentScrollTop + nodeTop);\n
          } else if (nodeBottom > parentHeight) {\n
            $parent.scrollTop(parentScrollTop + nodeBottom - parentHeight);\n
          }\n
        }\n
      \n
        $(document).on('keydown', function(e) {\n
          var applicationFrames = $frameContainer.hasClass('frames-container-application'),\n
              frameClass = applicationFrames ? '.frame.frame-application' : '.frame';\n
      \n
      \t  if(e.ctrlKey || e.which === 74  || e.which === 75) {\n
      \t\t  // CTRL+Arrow-UP/k and Arrow-Down/j support:\n
      \t\t  // 1) select the next/prev element\n
      \t\t  // 2) make sure the newly selected element is within the view-scope\n
      \t\t  // 3) focus the (right) container, so arrow-up/down (without ctrl) scroll the details\n
      \t\t  if (e.which === 38 /* arrow up */ || e.which === 75 /* k */) {\n
      \t\t\t  $activeLine.prev(frameClass).click();\n
      \t\t\t  scrollIntoView($activeLine, $leftPanel);\n
      \t\t\t  $container.focus();\n
      \t\t\t  e.preventDefault();\n
      \t\t  } else if (e.which === 40 /* arrow down */ || e.which === 74 /* j */) {\n
      \t\t\t  $activeLine.next(frameClass).click();\n
      \t\t\t  scrollIntoView($activeLine, $leftPanel);\n
      \t\t\t  $container.focus();\n
      \t\t\t  e.preventDefault();\n
      \t\t  }\n
      \t  } else if (e.which == 78 /* n */) {\n
            if ($appFramesTab.length) {\n
              setActiveFramesTab($('.frames-tab:not(.frames-tab-active)'));\n
            }\n
          }\n
        });\n
      \n
        // Render late enough for highlightCurrentLine to be ready\n
        renderCurrentCodeblock();\n
      \n
        // Avoid to quit the page with some protocol (e.g. IntelliJ Platform REST API)\n
        $ajaxEditors.on('click', function(e){\n
          e.preventDefault();\n
          $.get(this.href);\n
        });\n
      \n
        // Symfony VarDumper: Close the by default expanded objects\n
        $('.sf-dump-expanded')\n
          .removeClass('sf-dump-expanded')\n
          .addClass('sf-dump-compact');\n
        $('.sf-dump-toggle span').html('&#9654;');\n
      \n
        // Make the given frames-tab active\n
        function setActiveFramesTab($tab) {\n
          $tab.addClass('frames-tab-active');\n
      \n
          if ($tab.attr('id') == 'application-frames-tab') {\n
            $frameContainer.addClass('frames-container-application');\n
            $allFramesTab.removeClass('frames-tab-active');\n
          } else {\n
            $frameContainer.removeClass('frames-container-application');\n
            $appFramesTab.removeClass('frames-tab-active');\n
          }\n
        }\n
      \n
        $('a.frames-tab').on('click', function(e) {\n
          e.preventDefault();\n
          setActiveFramesTab($(this));\n
        });\n
      });\n
      </script>\n
        </body>\n
      </html>\n
      """
    #version: "1.1"
    #statusCode: 500
    #statusText: "Internal Server Error"
    #charset: null
    +original: """
      <!DOCTYPE html><!--\n
      \n
      \n
      ErrorException: Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) in file /Users/bobbyborisov/code/forum/app/Favoritable.php on line 32\n
      Stack trace:\n
        1. ErrorException-&gt;() /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
        2. ErrorException-&gt;() /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
        3. ErrorException-&gt;() /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
        4. Illuminate\Foundation\Bootstrap\HandleExceptions-&gt;handleError() /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
        5. App\Reply-&gt;isFavorited() /Users/bobbyborisov/code/forum/storage/framework/views/13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php:9\n
        6. include() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
        7. Illuminate\View\Engines\PhpEngine-&gt;evaluatePath() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
        8. Illuminate\View\Engines\CompilerEngine-&gt;get() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
        9. Illuminate\View\View-&gt;getContents() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
       10. Illuminate\View\View-&gt;renderContents() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
       11. Illuminate\View\View-&gt;render() /Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php:31\n
       12. include() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
       13. Illuminate\View\Engines\PhpEngine-&gt;evaluatePath() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
       14. Illuminate\View\Engines\CompilerEngine-&gt;get() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
       15. Illuminate\View\View-&gt;getContents() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
       16. Illuminate\View\View-&gt;renderContents() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
       17. Illuminate\View\View-&gt;render() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Http/Response.php:42\n
       18. Illuminate\Http\Response-&gt;setContent() /Users/bobbyborisov/code/forum/vendor/symfony/http-foundation/Response.php:200\n
       19. Symfony\Component\HttpFoundation\Response-&gt;__construct() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:724\n
       20. Illuminate\Routing\Router-&gt;toResponse() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:698\n
       21. Illuminate\Routing\Router-&gt;prepareResponse() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:658\n
       22. Illuminate\Routing\Router-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
       23. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php:41\n
       24. Illuminate\Routing\Middleware\SubstituteBindings-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       25. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       26. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php:67\n
       27. Illuminate\Foundation\Http\Middleware\VerifyCsrfToken-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       28. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       29. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php:49\n
       30. Illuminate\View\Middleware\ShareErrorsFromSession-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       31. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       32. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php:63\n
       33. Illuminate\Session\Middleware\StartSession-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       34. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       35. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php:37\n
       36. Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       37. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       38. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php:59\n
       39. Illuminate\Cookie\Middleware\EncryptCookies-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       40. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       41. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
       42. Illuminate\Pipeline\Pipeline-&gt;then() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:660\n
       43. Illuminate\Routing\Router-&gt;runRouteWithinStack() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:635\n
       44. Illuminate\Routing\Router-&gt;runRoute() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:601\n
       45. Illuminate\Routing\Router-&gt;dispatchToRoute() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:590\n
       46. Illuminate\Routing\Router-&gt;dispatch() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:176\n
       47. Illuminate\Foundation\Http\Kernel-&gt;Illuminate\Foundation\Http\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
       48. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/barryvdh/laravel-debugbar/src/Middleware/InjectDebugbar.php:58\n
       49. Barryvdh\Debugbar\Middleware\InjectDebugbar-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       50. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       51. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/fideloper/proxy/src/TrustProxies.php:56\n
       52. Fideloper\Proxy\TrustProxies-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       53. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       54. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
       55. Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       56. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       57. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
       58. Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       59. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       60. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php:27\n
       61. Illuminate\Foundation\Http\Middleware\ValidatePostSize-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       62. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       63. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php:46\n
       64. Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
       65. Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
       66. Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
       67. Illuminate\Pipeline\Pipeline-&gt;then() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:151\n
       68. Illuminate\Foundation\Http\Kernel-&gt;sendRequestThroughRouter() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:116\n
       69. Illuminate\Foundation\Http\Kernel-&gt;handle() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:324\n
       70. Illuminate\Foundation\Testing\TestCase-&gt;call() /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:147\n
       71. Illuminate\Foundation\Testing\TestCase-&gt;get() /Users/bobbyborisov/code/forum/tests/Feature/ReadThreadsTest.php:43\n
       72. Tests\Feature\ReadThreadsTest-&gt;a_user_is_able_to_read_replies_that_are_associated_with_the_thread() [internal]:0\n
       73. ReflectionMethod-&gt;invokeArgs() phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:1069\n
       74. PHPUnit\Framework\TestCase-&gt;runTest() phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:928\n
       75. PHPUnit\Framework\TestCase-&gt;runBare() phar:///usr/local/bin/phpunit/phpunit/Framework/TestResult.php:695\n
       76. PHPUnit\Framework\TestResult-&gt;run() phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:883\n
       77. PHPUnit\Framework\TestCase-&gt;run() phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
       78. PHPUnit\Framework\TestSuite-&gt;run() phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
       79. PHPUnit\Framework\TestSuite-&gt;run() phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
       80. PHPUnit\Framework\TestSuite-&gt;run() phar:///usr/local/bin/phpunit/phpunit/TextUI/TestRunner.php:537\n
       81. PHPUnit\TextUI\TestRunner-&gt;doRun() phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:212\n
       82. PHPUnit\TextUI\Command-&gt;run() phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:141\n
       83. PHPUnit\TextUI\Command-&gt;main() /usr/local/bin/phpunit:551\n
      \n
      \n
      \n
      \n
      \n
      \n
      \n
      \n
      \n
      \n
      \n
      --><html>\n
        <head>\n
          <meta charset="utf-8">\n
          <meta name="robots" content="noindex,nofollow"/>\n
          <title>Whoops! There was an error.</title>\n
      \n
          <style>body {\n
        font: 12px "Helvetica Neue", helvetica, arial, sans-serif;\n
        color: #131313;\n
        background: #eeeeee;\n
        padding:0;\n
        margin: 0;\n
        max-height: 100%;\n
      \n
        text-rendering: optimizeLegibility;\n
      }\n
        a {\n
          text-decoration: none;\n
        }\n
      \n
      .panel {\n
          overflow-y: scroll;\n
          height: 100%;\n
          position: fixed;\n
          margin: 0;\n
          left: 0;\n
          top: 0;\n
      }\n
      \n
      .branding {\n
        position: absolute;\n
        top: 10px;\n
        right: 20px;\n
        color: #777777;\n
        font-size: 10px;\n
          z-index: 100;\n
      }\n
        .branding a {\n
          color: #e95353;\n
        }\n
      \n
      header {\n
        color: white;\n
        box-sizing: border-box;\n
        background-color: #2a2a2a;\n
        padding: 35px 40px;\n
        max-height: 180px;\n
        overflow: hidden;\n
        transition: 0.5s;\n
      }\n
      \n
        header.header-expand {\n
          max-height: 1000px;\n
        }\n
      \n
        .exc-title {\n
          margin: 0;\n
          color: #bebebe;\n
          font-size: 14px;\n
        }\n
          .exc-title-primary {\n
            color: #e95353;\n
          }\n
      \n
          .exc-message {\n
            font-size: 20px;\n
            word-wrap: break-word;\n
            margin: 4px 0 0 0;\n
            color: white;\n
          }\n
            .exc-message span {\n
              display: block;\n
            }\n
            .exc-message-empty-notice {\n
              color: #a29d9d;\n
              font-weight: 300;\n
            }\n
      \n
      .details-container {\n
        left: 30%;\n
        width: 70%;\n
        background: #fafafa;\n
      }\n
        .details {\n
          padding: 5px;\n
        }\n
      \n
          .details-heading {\n
            color: #4288CE;\n
            font-weight: 300;\n
            padding-bottom: 10px;\n
            margin-bottom: 10px;\n
            border-bottom: 1px solid rgba(0, 0, 0, .1);\n
          }\n
      \n
          .details pre.sf-dump {\n
            white-space: pre;\n
            word-wrap: inherit;\n
          }\n
      \n
          .details pre.sf-dump,\n
          .details pre.sf-dump .sf-dump-num,\n
          .details pre.sf-dump .sf-dump-const,\n
          .details pre.sf-dump .sf-dump-str,\n
          .details pre.sf-dump .sf-dump-note,\n
          .details pre.sf-dump .sf-dump-ref,\n
          .details pre.sf-dump .sf-dump-public,\n
          .details pre.sf-dump .sf-dump-protected,\n
          .details pre.sf-dump .sf-dump-private,\n
          .details pre.sf-dump .sf-dump-meta,\n
          .details pre.sf-dump .sf-dump-key,\n
          .details pre.sf-dump .sf-dump-index {\n
            color: #463C54;\n
          }\n
      \n
      .left-panel {\n
        width: 30%;\n
        background: #ded8d8;\n
      }\n
      \n
        .frames-description {\n
          background: rgba(0, 0, 0, .05);\n
          padding: 8px 15px;\n
          color: #a29d9d;\n
          font-size: 11px;\n
        }\n
      \n
        .frames-description.frames-description-application {\n
          text-align: center;\n
          font-size: 12px;\n
        }\n
        .frames-container.frames-container-application .frame:not(.frame-application) {\n
          display: none;\n
        }\n
      \n
        .frames-tab {\n
          color: #a29d9d;\n
          display: inline-block;\n
          padding: 4px 8px;\n
          margin: 0 2px;\n
          border-radius: 3px;\n
        }\n
      \n
        .frames-tab.frames-tab-active {\n
          background-color: #2a2a2a;\n
          color: #bebebe;\n
        }\n
      \n
        .frame {\n
          padding: 14px;\n
          cursor: pointer;\n
          transition: all 0.1s ease;\n
          background: #eeeeee;\n
        }\n
          .frame:not(:last-child) {\n
            border-bottom: 1px solid rgba(0, 0, 0, .05);\n
          }\n
      \n
          .frame.active {\n
            box-shadow: inset -5px 0 0 0 #4288CE;\n
            color: #4288CE;\n
          }\n
      \n
          .frame:not(.active):hover {\n
            background: #BEE9EA;\n
          }\n
      \n
          .frame-method-info {\n
            margin-bottom: 10px;\n
          }\n
      \n
          .frame-class, .frame-function, .frame-index {\n
            font-size: 14px;\n
          }\n
      \n
          .frame-index {\n
            float: left;\n
          }\n
      \n
          .frame-method-info {\n
            margin-left: 24px;\n
          }\n
      \n
          .frame-index {\n
            font-size: 11px;\n
            color: #a29d9d;\n
            background-color: rgba(0, 0, 0, .05);\n
            height: 18px;\n
            width: 18px;\n
            line-height: 18px;\n
            border-radius: 5px;\n
            padding: 0 1px 0 1px;\n
            text-align: center;\n
            display: inline-block;\n
          }\n
      \n
          .frame-application .frame-index {\n
            background-color: #2a2a2a;\n
            color: #bebebe;\n
          }\n
      \n
          .frame-file {\n
            font-family: "Inconsolata", "Fira Mono", "Source Code Pro", Monaco, Consolas, "Lucida Console", monospace;\n
            color: #a29d9d;\n
          }\n
      \n
            .frame-file .editor-link {\n
              color: #a29d9d;\n
            }\n
      \n
          .frame-line {\n
            font-weight: bold;\n
          }\n
      \n
          .frame-line:before {\n
            content: ":";\n
          }\n
      \n
          .frame-code {\n
            padding: 5px;\n
            background: #303030;\n
            display: none;\n
          }\n
      \n
          .frame-code.active {\n
            display: block;\n
          }\n
      \n
          .frame-code .frame-file {\n
            color: #a29d9d;\n
            padding: 12px 6px;\n
      \n
            border-bottom: none;\n
          }\n
      \n
          .code-block {\n
            max-height: 345px;\n
            overflow: hidden;\n
            padding: 10px;\n
            margin: 0;\n
            border-radius: 6px;\n
            box-shadow: 0 3px 0 rgba(0, 0, 0, .05),\n
                        0 10px 30px rgba(0, 0, 0, .05),\n
                        inset 0 0 1px 0 rgba(255, 255, 255, .07);\n
            -moz-tab-size: 4;\n
            -o-tab-size: 4;\n
            tab-size: 4;\n
          }\n
      \n
          .linenums {\n
            margin: 0;\n
            margin-left: 10px;\n
          }\n
      \n
          .frame-comments {\n
            border-top: none;\n
            margin-top: 15px;\n
      \n
            font-size: 12px;\n
          }\n
      \n
          .frame-comments.empty {\n
          }\n
      \n
          .frame-comments.empty:before {\n
            content: "No comments for this stack frame.";\n
            font-weight: 300;\n
            color: #a29d9d;\n
          }\n
      \n
          .frame-comment {\n
            padding: 10px;\n
            color: #e3e3e3;\n
            border-radius: 6px;\n
            background-color: rgba(255, 255, 255, .05);\n
          }\n
            .frame-comment a {\n
              font-weight: bold;\n
              text-decoration: none;\n
            }\n
              .frame-comment a:hover {\n
                color: #4bb1b1;\n
              }\n
      \n
          .frame-comment:not(:last-child) {\n
            border-bottom: 1px dotted rgba(0, 0, 0, .3);\n
          }\n
      \n
          .frame-comment-context {\n
            font-size: 10px;\n
            color: white;\n
          }\n
      \n
      .delimiter {\n
        display: inline-block;\n
      }\n
      \n
      .data-table-container label {\n
        font-size: 16px;\n
        color: #303030;\n
        font-weight: bold;\n
        margin: 10px 0;\n
      \n
        display: block;\n
      \n
        margin-bottom: 5px;\n
        padding-bottom: 5px;\n
      }\n
        .data-table {\n
          width: 100%;\n
          margin-bottom: 10px;\n
        }\n
      \n
        .data-table tbody {\n
          font: 13px "Inconsolata", "Fira Mono", "Source Code Pro", Monaco, Consolas, "Lucida Console", monospace;\n
        }\n
      \n
        .data-table thead {\n
          display: none;\n
        }\n
      \n
        .data-table tr {\n
          padding: 5px 0;\n
        }\n
      \n
        .data-table td:first-child {\n
          width: 20%;\n
          min-width: 130px;\n
          overflow: hidden;\n
          font-weight: bold;\n
          color: #463C54;\n
          padding-right: 5px;\n
      \n
        }\n
      \n
        .data-table td:last-child {\n
          width: 80%;\n
          -ms-word-break: break-all;\n
          word-break: break-all;\n
          word-break: break-word;\n
          -webkit-hyphens: auto;\n
          -moz-hyphens: auto;\n
          hyphens: auto;\n
        }\n
      \n
        .data-table span.empty {\n
          color: rgba(0, 0, 0, .3);\n
          font-weight: 300;\n
        }\n
        .data-table label.empty {\n
          display: inline;\n
        }\n
      \n
      .handler {\n
        padding: 4px 0;\n
        font: 14px "Inconsolata", "Fira Mono", "Source Code Pro", Monaco, Consolas, "Lucida Console", monospace;\n
      }\n
      \n
      /* prettify code style\n
      Uses the Doxy theme as a base */\n
      pre .str, code .str { color: #BCD42A; }  /* string  */\n
      pre .kwd, code .kwd { color: #4bb1b1;  font-weight: bold; }  /* keyword*/\n
      pre .com, code .com { color: #888; font-weight: bold; } /* comment */\n
      pre .typ, code .typ { color: #ef7c61; }  /* type  */\n
      pre .lit, code .lit { color: #BCD42A; }  /* literal */\n
      pre .pun, code .pun { color: #fff; font-weight: bold;  } /* punctuation  */\n
      pre .pln, code .pln { color: #e9e4e5; }  /* plaintext  */\n
      pre .tag, code .tag { color: #4bb1b1; }  /* html/xml tag  */\n
      pre .htm, code .htm { color: #dda0dd; }  /* html tag */\n
      pre .xsl, code .xsl { color: #d0a0d0; }  /* xslt tag */\n
      pre .atn, code .atn { color: #ef7c61; font-weight: normal;} /* html/xml attribute name */\n
      pre .atv, code .atv { color: #bcd42a; }  /* html/xml attribute value  */\n
      pre .dec, code .dec { color: #606; }  /* decimal  */\n
      pre.code-block, code.code-block, .frame-args.code-block, .frame-args.code-block samp {\n
        font-family: "Inconsolata", "Fira Mono", "Source Code Pro", Monaco, Consolas, "Lucida Console", monospace;\n
        background: #333;\n
        color: #e9e4e5;\n
      }\n
        pre.code-block {\n
          white-space: pre-wrap;\n
        }\n
      \n
        pre.code-block a, code.code-block a {\n
          text-decoration:none;\n
        }\n
      \n
        .linenums li {\n
          color: #A5A5A5;\n
        }\n
      \n
        .linenums li.current{\n
          background: rgba(255, 100, 100, .07);\n
        }\n
          .linenums li.current.active {\n
            background: rgba(255, 100, 100, .17);\n
          }\n
      \n
      pre:not(.prettyprinted) {\n
        padding-left: 60px;\n
      }\n
      \n
      #plain-exception {\n
        display: none;\n
      }\n
      \n
      #copy-button {\n
        cursor: pointer;\n
        border: 0;\n
      }\n
      \n
      .clipboard {\n
        opacity: .8;\n
        background: none;\n
      \n
        color: rgba(255, 255, 255, 0.1);\n
        box-shadow: inset 0 0 0 2px rgba(255, 255, 255, 0.1);\n
      \n
        border-radius: 3px;\n
      \n
        outline: none !important;\n
      }\n
      \n
        .clipboard:hover {\n
          box-shadow: inset 0 0 0 2px rgba(255, 255, 255, 0.3);\n
          color: rgba(255, 255, 255, 0.3);\n
        }\n
      \n
      /* inspired by githubs kbd styles */\n
      kbd {\n
        -moz-border-bottom-colors: none;\n
        -moz-border-left-colors: none;\n
        -moz-border-right-colors: none;\n
        -moz-border-top-colors: none;\n
        background-color: #fcfcfc;\n
        border-color: #ccc #ccc #bbb;\n
        border-image: none;\n
        border-style: solid;\n
        border-width: 1px;\n
        color: #555;\n
        display: inline-block;\n
        font-size: 11px;\n
        line-height: 10px;\n
        padding: 3px 5px;\n
        vertical-align: middle;\n
      }\n
      \n
      \n
      /* == Media queries */\n
      \n
      /* Expand the spacing in the details section */\n
      @media (min-width: 1000px) {\n
        .details, .frame-code {\n
          padding: 20px 40px;\n
        }\n
      \n
        .details-container {\n
          left: 32%;\n
          width: 68%;\n
        }\n
      \n
        .frames-container {\n
          margin: 5px;\n
        }\n
      \n
        .left-panel {\n
          width: 32%;\n
        }\n
      }\n
      \n
      .tooltipped {\n
        position: relative\n
      }\n
      .tooltipped:after {\n
        position: absolute;\n
        z-index: 1000000;\n
        display: none;\n
        padding: 5px 8px;\n
        color: #fff;\n
        text-align: center;\n
        text-decoration: none;\n
        text-shadow: none;\n
        text-transform: none;\n
        letter-spacing: normal;\n
        word-wrap: break-word;\n
        white-space: pre;\n
        pointer-events: none;\n
        content: attr(aria-label);\n
        background: rgba(0, 0, 0, 0.8);\n
        border-radius: 3px;\n
        -webkit-font-smoothing: subpixel-antialiased\n
      }\n
      .tooltipped:before {\n
        position: absolute;\n
        z-index: 1000001;\n
        display: none;\n
        width: 0;\n
        height: 0;\n
        color: rgba(0, 0, 0, 0.8);\n
        pointer-events: none;\n
        content: "";\n
        border: 5px solid transparent\n
      }\n
      .tooltipped:hover:before,\n
      .tooltipped:hover:after,\n
      .tooltipped:active:before,\n
      .tooltipped:active:after,\n
      .tooltipped:focus:before,\n
      .tooltipped:focus:after {\n
        display: inline-block;\n
        text-decoration: none\n
      }\n
      .tooltipped-s:after {\n
        top: 100%;\n
        right: 50%;\n
        margin-top: 5px\n
      }\n
      .tooltipped-s:before {\n
        top: auto;\n
        right: 50%;\n
        bottom: -5px;\n
        margin-right: -5px;\n
        border-bottom-color: rgba(0, 0, 0, 0.8)\n
      }\n
      \n
      pre.sf-dump {\n
        padding: 0px !important;\n
        margin: 0px !important;\n
      }\n
      \n
      .search-for-help {\n
        width: 85%;\n
        padding: 0;\n
        margin: 10px 0;\n
        list-style-type: none;\n
        display: inline-block;\n
      }\n
        .search-for-help li {\n
          display: inline-block;\n
          margin-right: 5px;\n
        }\n
        .search-for-help li:last-child {\n
          margin-right: 0;\n
        }\n
          .search-for-help li a {\n
      \n
          }\n
            .search-for-help li a i {\n
              width: 16px;\n
              height: 16px;\n
              overflow: hidden;\n
              display: block;\n
            }\n
            .search-for-help li a svg {\n
              fill: #fff;\n
            }\n
            .search-for-help li a svg path {\n
              background-size: contain;\n
            }\n
      </style>\n
        </head>\n
        <body>\n
      \n
          <div class="Whoops container">\n
            <div class="stack-container">\n
      \n
              <div class="panel left-panel cf ">\n
        <header>\n
        <div class="exception">\n
        <div class="exc-title">\n
                        <span class="exc-title-primary">ErrorException</span>\n
                          <span title="Exception Code">(E_ERROR)</span>\n
            </div>\n
      \n
        <div class="exc-message">\n
                <span>Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)</span>\n
          \n
          <ul class="search-for-help">\n
                  <li>\n
              <a rel="noopener noreferrer" target="_blank" href="https://google.com/search?q=ErrorException+Trying+to+get+property+of+non-object+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29" title="Search for help on Google.">\n
                <!-- Google icon by Alfredo H, from https://www.iconfinder.com/alfredoh -->\n
                <!-- Creative Commons (Attribution 3.0 Unported) -->\n
                <!-- http://creativecommons.org/licenses/by/3.0/ -->\n
                <svg class="google" height="16" viewBox="0 0 512 512" width="16" xmlns="http://www.w3.org/2000/svg">\n
                  <path d="M457.732 216.625c2.628 14.04 4.063 28.743 4.063 44.098C461.795 380.688 381.48 466 260.205 466c-116.024 0-210-93.977-210-210s93.976-210 210-210c56.703 0 104.076 20.867 140.44 54.73l-59.205 59.197v-.135c-22.046-21.002-50-31.762-81.236-31.762-69.297 0-125.604 58.537-125.604 127.84 0 69.29 56.306 127.97 125.604 127.97 62.87 0 105.653-35.966 114.46-85.313h-114.46v-81.902h197.528z"/>\n
                </svg>\n
              </a>\n
            </li>\n
            <li>\n
              <a rel="noopener noreferrer" target="_blank" href="https://duckduckgo.com/?q=ErrorException+Trying+to+get+property+of+non-object+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29" title="Search for help on DuckDuckGo.">\n
                <!-- DuckDuckGo icon by IconBaandar Team, from https://www.iconfinder.com/iconbaandar -->\n
                <!-- Creative Commons (Attribution 3.0 Unported) -->\n
                <!-- http://creativecommons.org/licenses/by/3.0/ -->\n
                <svg class="duckduckgo" height="16" viewBox="150 150 1675 1675" width="16" xmlns="http://www.w3.org/2000/svg">\n
                  <path d="M1792 1024c0 204.364-80.472 398.56-224.955 543.04-144.483 144.48-338.68 224.95-543.044 224.95-204.36 0-398.56-80.47-543.04-224.95-144.48-144.482-224.95-338.676-224.95-543.04 0-204.365 80.47-398.562 224.96-543.045C625.44 336.47 819.64 256 1024 256c204.367 0 398.565 80.47 543.05 224.954C1711.532 625.437 1792 819.634 1792 1024zm-270.206 497.787C1654.256 1389.327 1728 1211.36 1728 1024c0-187.363-73.74-365.332-206.203-497.796C1389.332 393.74 1211.363 320 1024 320s-365.33 73.742-497.795 206.205C393.742 658.67 320 836.637 320 1024c0 187.36 73.744 365.326 206.206 497.787C658.67 1654.25 836.638 1727.99 1024 1727.99c187.362 0 365.33-73.74 497.794-206.203z"/>\n
                  <path d="M1438.64 1177.41c0-.03-.005-.017-.01.004l.01-.004z"/>\n
                  <path d="M1499.8 976.878c.03-.156-.024-.048-.11.107l.11-.107z"/>\n
                  <path d="M1105.19 991.642zm-68.013-376.128c-8.087-10.14-18.028-19.965-29.89-29.408-13.29-10.582-29-20.76-47.223-30.443-35.07-18.624-74.482-31.61-115.265-38.046-39.78-6.28-80.84-6.256-120.39.917l1.37 31.562c1.8.164 7.7 3.9 14.36 8.32-20.68 5.94-39.77 14.447-39.48 39.683l.2 17.48 17.3-1.73c29.38-2.95 60.17-2.06 90.32 2.61 9.21 1.42 18.36 3.2 27.38 5.32l-4.33 1.15c-20.45 5.58-38.93 12.52-54.25 20.61-46.28 24.32-75.51 60.85-90.14 108.37-14.14 45.95-14.27 101.81-2.72 166.51l.06.06c15.14 84.57 64.16 316.39 104.11 505.39 19.78 93.59 37.38 176.83 47.14 224.4 3.26 15.84 5.03 31.02 5.52 45.52.3 9.08.09 17.96-.58 26.62-.45 5.8-1.11 11.51-1.96 17.112l31.62 4.75c.71-4.705 1.3-9.494 1.76-14.373 48.964 10.517 99.78 16.05 151.88 16.05 60.68 0 119.61-7.505 175.91-21.64 3.04 6.08 6.08 12.19 9.11 18.32l28.62-14.128c-2.11-4.27-4.235-8.55-6.37-12.84-23.005-46.124-47.498-93.01-68.67-133.534-15.39-29.466-29.01-55.53-39.046-75.58-26.826-53.618-53.637-119.47-68.28-182.368-8.78-37.705-13.128-74.098-10.308-105.627-15.31-6.28-26.69-11.8-31.968-15.59l-.01.015c-14.22-10.2-31.11-28.12-41.82-49.717-8.618-17.376-13.4-37.246-10.147-57.84 3.17-19.84 27.334-46.714 57.843-67.46v-.063c26.554-18.05 58.75-32.506 86.32-34.31 7.835-.51 16.31-1.008 23.99-1.45 33.45-1.95 50.243-2.93 84.475-11.42 10.88-2.697 26.19-6.56 43.53-11.09 2.364-40.7-5.947-87.596-21.04-133.234-22.004-66.53-58.68-131.25-97.627-170.21-12.543-12.55-28.17-22.79-45.9-30.933-16.88-7.753-35.64-13.615-55.436-17.782zm-10.658 178.553s6.77-42.485 58.39-33.977c27.96 4.654 37.89 29.833 37.89 29.833s-25.31-14.46-44.95-14.198c-40.33.53-51.35 18.342-51.35 18.342zm-240.45-18.802c48.49-19.853 72.11 11.298 72.11 11.298s-35.21-15.928-69.46 5.59c-34.19 21.477-32.92 43.452-32.92 43.452s-18.17-40.5 30.26-60.34zm296.5 95.4c0-6.677 2.68-12.694 7.01-17.02 4.37-4.37 10.42-7.074 17.1-7.074 6.73 0 12.79 2.7 17.15 7.05 4.33 4.33 7.01 10.36 7.01 17.05 0 6.74-2.7 12.81-7.07 17.18-4.33 4.33-10.37 7.01-17.1 7.01-6.68 0-12.72-2.69-17.05-7.03-4.36-4.37-7.07-10.43-7.07-17.16zm-268.42 51.27c0-8.535 3.41-16.22 8.93-21.738 5.55-5.55 13.25-8.982 21.81-8.982 8.51 0 16.18 3.415 21.7 8.934 5.55 5.55 8.98 13.25 8.98 21.78 0 8.53-3.44 16.23-8.98 21.79-5.52 5.52-13.19 8.93-21.71 8.93-8.55 0-16.26-3.43-21.82-8.99-5.52-5.52-8.93-13.2-8.93-21.74z"/>\n
                  <path d="M1102.48 986.34zm390.074-64.347c-28.917-11.34-74.89-12.68-93.32-3.778-11.5 5.567-35.743 13.483-63.565 21.707-25.75 7.606-53.9 15.296-78.15 21.702-17.69 4.67-33.3 8.66-44.4 11.435-34.92 8.76-52.05 9.77-86.17 11.78-7.84.46-16.48.97-24.48 1.5-28.12 1.86-60.97 16.77-88.05 35.4v.06c-31.12 21.4-55.77 49.12-59.01 69.59-3.32 21.24 1.56 41.74 10.35 59.67 10.92 22.28 28.15 40.77 42.66 51.29l.01-.02c5.38 3.9 16.98 9.6 32.6 16.08 26.03 10.79 63.2 23.76 101.25 34.23 43.6 11.99 89.11 21.05 121.69 20.41 34.26-.69 77.73-10.52 114.54-24.67 22.15-8.52 42.21-18.71 56.88-29.58 17.85-13.22 28.7-28.42 28.4-44.74-.07-3.89-.72-7.63-1.97-11.21l-.02.01c-11.6-33.06-50.37-23.59-105.53-10.12-46.86 11.445-107.94 26.365-169.01 20.434-32.56-3.167-54.45-10.61-67.88-20.133-5.96-4.224-9.93-8.67-12.18-13.11-1.96-3.865-2.68-7.84-2.33-11.714.39-4.42 2.17-9.048 5.1-13.57l-.05-.03c7.86-12.118 23.082-9.72 43.93-6.43 25.91 4.08 58.2 9.172 99.013-3.61 39.63-12.378 87.76-29.9 131.184-47.39 42.405-17.08 80.08-34.078 100.74-46.18 25.46-14.87 37.57-29.428 40.59-42.866 2.725-12.152-.89-22.48-8.903-31.07-5.87-6.29-14.254-11.31-23.956-15.115z"/>\n
                </svg>\n
              </a>\n
            </li>\n
            <li>\n
              <a rel="noopener noreferrer" target="_blank" href="https://stackoverflow.com/search?q=ErrorException+Trying+to+get+property+of+non-object+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29+%28View%3A+%2FUsers%2Fbobbyborisov%2Fcode%2Fforum%2Fresources%2Fviews%2Fthreads%2Freply.blade.php%29" title="Search for help on Stack Overflow.">\n
                <!-- Stack Overflow icon by Picons.me, from https://www.iconfinder.com/Picons -->\n
                <!-- Free for commercial use -->\n
                <svg class="stackoverflow" height="16" viewBox="-1163 1657.697 56.693 56.693" width="16" xmlns="http://www.w3.org/2000/svg">\n
                  <path d="M-1126.04 1689.533l-16.577-9.778 2.088-3.54 16.578 9.778zM-1127.386 1694.635l-18.586-4.996 1.068-3.97 18.586 4.995zM-1127.824 1700.137l-19.165-1.767.378-4.093 19.165 1.767zM-1147.263 1701.293h19.247v4.11h-19.247z"/>\n
                  <path d="M-1121.458 1710.947s0 .96-.032.96v.016h-30.796s-.96 0-.96-.016h-.032v-20.03h3.288v16.805h25.244v-16.804h3.288v19.07zM-1130.667 1667.04l10.844 15.903-3.396 2.316-10.843-15.903zM-1118.313 1663.044l3.29 18.963-4.05.703-3.29-18.963z"/>\n
                </svg>\n
              </a>\n
            </li>\n
          </ul>\n
      \n
          <span id="plain-exception">ErrorException thrown with message &quot;Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)&quot;\n
      \n
      Stacktrace:\n
      #82 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #81 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #80 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #79 Illuminate\Foundation\Bootstrap\HandleExceptions:handleError in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #78 App\Reply:isFavorited in /Users/bobbyborisov/code/forum/storage/framework/views/13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php:9\n
      #77 include in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
      #76 Illuminate\View\Engines\PhpEngine:evaluatePath in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
      #75 Illuminate\View\Engines\CompilerEngine:get in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
      #74 Illuminate\View\View:getContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
      #73 Illuminate\View\View:renderContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
      #72 Illuminate\View\View:render in /Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php:31\n
      #71 include in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
      #70 Illuminate\View\Engines\PhpEngine:evaluatePath in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
      #69 Illuminate\View\Engines\CompilerEngine:get in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
      #68 Illuminate\View\View:getContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
      #67 Illuminate\View\View:renderContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
      #66 Illuminate\View\View:render in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Http/Response.php:42\n
      #65 Illuminate\Http\Response:setContent in /Users/bobbyborisov/code/forum/vendor/symfony/http-foundation/Response.php:200\n
      #64 Symfony\Component\HttpFoundation\Response:__construct in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:724\n
      #63 Illuminate\Routing\Router:toResponse in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:698\n
      #62 Illuminate\Routing\Router:prepareResponse in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:658\n
      #61 Illuminate\Routing\Router:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
      #60 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php:41\n
      #59 Illuminate\Routing\Middleware\SubstituteBindings:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #58 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #57 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php:67\n
      #56 Illuminate\Foundation\Http\Middleware\VerifyCsrfToken:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #55 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #54 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php:49\n
      #53 Illuminate\View\Middleware\ShareErrorsFromSession:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #52 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #51 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php:63\n
      #50 Illuminate\Session\Middleware\StartSession:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #49 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #48 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php:37\n
      #47 Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #46 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #45 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php:59\n
      #44 Illuminate\Cookie\Middleware\EncryptCookies:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #43 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #42 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
      #41 Illuminate\Pipeline\Pipeline:then in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:660\n
      #40 Illuminate\Routing\Router:runRouteWithinStack in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:635\n
      #39 Illuminate\Routing\Router:runRoute in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:601\n
      #38 Illuminate\Routing\Router:dispatchToRoute in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:590\n
      #37 Illuminate\Routing\Router:dispatch in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:176\n
      #36 Illuminate\Foundation\Http\Kernel:Illuminate\Foundation\Http\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
      #35 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/barryvdh/laravel-debugbar/src/Middleware/InjectDebugbar.php:58\n
      #34 Barryvdh\Debugbar\Middleware\InjectDebugbar:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #33 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #32 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/fideloper/proxy/src/TrustProxies.php:56\n
      #31 Fideloper\Proxy\TrustProxies:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #30 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #29 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
      #28 Illuminate\Foundation\Http\Middleware\TransformsRequest:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #27 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #26 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
      #25 Illuminate\Foundation\Http\Middleware\TransformsRequest:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #24 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #23 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php:27\n
      #22 Illuminate\Foundation\Http\Middleware\ValidatePostSize:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #21 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #20 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php:46\n
      #19 Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #18 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #17 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
      #16 Illuminate\Pipeline\Pipeline:then in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:151\n
      #15 Illuminate\Foundation\Http\Kernel:sendRequestThroughRouter in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:116\n
      #14 Illuminate\Foundation\Http\Kernel:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:324\n
      #13 Illuminate\Foundation\Testing\TestCase:call in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:147\n
      #12 Illuminate\Foundation\Testing\TestCase:get in /Users/bobbyborisov/code/forum/tests/Feature/ReadThreadsTest.php:43\n
      #11 Tests\Feature\ReadThreadsTest:a_user_is_able_to_read_replies_that_are_associated_with_the_thread in [internal]:0\n
      #10 ReflectionMethod:invokeArgs in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:1069\n
      #9 PHPUnit\Framework\TestCase:runTest in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:928\n
      #8 PHPUnit\Framework\TestCase:runBare in phar:///usr/local/bin/phpunit/phpunit/Framework/TestResult.php:695\n
      #7 PHPUnit\Framework\TestResult:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:883\n
      #6 PHPUnit\Framework\TestCase:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #5 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #4 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #3 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/TextUI/TestRunner.php:537\n
      #2 PHPUnit\TextUI\TestRunner:doRun in phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:212\n
      #1 PHPUnit\TextUI\Command:run in phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:141\n
      #0 PHPUnit\TextUI\Command:main in /usr/local/bin/phpunit:551\n
      </span>\n
          <button id="copy-button" class="clipboard" data-clipboard-text="ErrorException thrown with message &quot;Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)&quot;\n
      \n
      Stacktrace:\n
      #82 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #81 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #80 ErrorException in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #79 Illuminate\Foundation\Bootstrap\HandleExceptions:handleError in /Users/bobbyborisov/code/forum/app/Favoritable.php:32\n
      #78 App\Reply:isFavorited in /Users/bobbyborisov/code/forum/storage/framework/views/13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php:9\n
      #77 include in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
      #76 Illuminate\View\Engines\PhpEngine:evaluatePath in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
      #75 Illuminate\View\Engines\CompilerEngine:get in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
      #74 Illuminate\View\View:getContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
      #73 Illuminate\View\View:renderContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
      #72 Illuminate\View\View:render in /Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php:31\n
      #71 include in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43\n
      #70 Illuminate\View\Engines\PhpEngine:evaluatePath in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59\n
      #69 Illuminate\View\Engines\CompilerEngine:get in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137\n
      #68 Illuminate\View\View:getContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120\n
      #67 Illuminate\View\View:renderContents in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85\n
      #66 Illuminate\View\View:render in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Http/Response.php:42\n
      #65 Illuminate\Http\Response:setContent in /Users/bobbyborisov/code/forum/vendor/symfony/http-foundation/Response.php:200\n
      #64 Symfony\Component\HttpFoundation\Response:__construct in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:724\n
      #63 Illuminate\Routing\Router:toResponse in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:698\n
      #62 Illuminate\Routing\Router:prepareResponse in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:658\n
      #61 Illuminate\Routing\Router:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
      #60 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php:41\n
      #59 Illuminate\Routing\Middleware\SubstituteBindings:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #58 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #57 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php:67\n
      #56 Illuminate\Foundation\Http\Middleware\VerifyCsrfToken:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #55 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #54 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php:49\n
      #53 Illuminate\View\Middleware\ShareErrorsFromSession:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #52 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #51 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php:63\n
      #50 Illuminate\Session\Middleware\StartSession:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #49 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #48 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php:37\n
      #47 Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #46 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #45 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php:59\n
      #44 Illuminate\Cookie\Middleware\EncryptCookies:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #43 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #42 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
      #41 Illuminate\Pipeline\Pipeline:then in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:660\n
      #40 Illuminate\Routing\Router:runRouteWithinStack in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:635\n
      #39 Illuminate\Routing\Router:runRoute in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:601\n
      #38 Illuminate\Routing\Router:dispatchToRoute in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:590\n
      #37 Illuminate\Routing\Router:dispatch in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:176\n
      #36 Illuminate\Foundation\Http\Kernel:Illuminate\Foundation\Http\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30\n
      #35 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/barryvdh/laravel-debugbar/src/Middleware/InjectDebugbar.php:58\n
      #34 Barryvdh\Debugbar\Middleware\InjectDebugbar:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #33 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #32 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/fideloper/proxy/src/TrustProxies.php:56\n
      #31 Fideloper\Proxy\TrustProxies:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #30 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #29 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
      #28 Illuminate\Foundation\Http\Middleware\TransformsRequest:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #27 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #26 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30\n
      #25 Illuminate\Foundation\Http\Middleware\TransformsRequest:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #24 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #23 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php:27\n
      #22 Illuminate\Foundation\Http\Middleware\ValidatePostSize:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #21 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #20 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php:46\n
      #19 Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149\n
      #18 Illuminate\Pipeline\Pipeline:Illuminate\Pipeline\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53\n
      #17 Illuminate\Routing\Pipeline:Illuminate\Routing\{closure} in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102\n
      #16 Illuminate\Pipeline\Pipeline:then in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:151\n
      #15 Illuminate\Foundation\Http\Kernel:sendRequestThroughRouter in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:116\n
      #14 Illuminate\Foundation\Http\Kernel:handle in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:324\n
      #13 Illuminate\Foundation\Testing\TestCase:call in /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:147\n
      #12 Illuminate\Foundation\Testing\TestCase:get in /Users/bobbyborisov/code/forum/tests/Feature/ReadThreadsTest.php:43\n
      #11 Tests\Feature\ReadThreadsTest:a_user_is_able_to_read_replies_that_are_associated_with_the_thread in [internal]:0\n
      #10 ReflectionMethod:invokeArgs in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:1069\n
      #9 PHPUnit\Framework\TestCase:runTest in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:928\n
      #8 PHPUnit\Framework\TestCase:runBare in phar:///usr/local/bin/phpunit/phpunit/Framework/TestResult.php:695\n
      #7 PHPUnit\Framework\TestResult:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:883\n
      #6 PHPUnit\Framework\TestCase:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #5 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #4 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744\n
      #3 PHPUnit\Framework\TestSuite:run in phar:///usr/local/bin/phpunit/phpunit/TextUI/TestRunner.php:537\n
      #2 PHPUnit\TextUI\TestRunner:doRun in phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:212\n
      #1 PHPUnit\TextUI\Command:run in phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:141\n
      #0 PHPUnit\TextUI\Command:main in /usr/local/bin/phpunit:551\n
      " title="Copy exception details to clipboard">\n
            COPY\n
          </button>\n
        </div>\n
      </div>\n
      </header>\n
      <div class="frames-description frames-description-application">\n
                  <a href="#" id="application-frames-tab" class="frames-tab frames-tab-active">\n
              Application frames (7)\n
            </a>\n
              <a href="#" id="all-frames-tab" class="frames-tab ">\n
            All frames (83)\n
          </a>\n
        </div><div class="frames-container frames-container-application">\n
          <div class="frame active frame-application" id="frame-line-0">\n
            <span class="frame-index">82</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">ErrorException</div></span>\n
              <span class="frame-function"><div class="delimiter"></div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div><!--\n
         --><span class="frame-line">32</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-1">\n
            <span class="frame-index">81</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">ErrorException</div></span>\n
              <span class="frame-function"><div class="delimiter"></div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div><!--\n
         --><span class="frame-line">32</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-2">\n
            <span class="frame-index">80</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">ErrorException</div></span>\n
              <span class="frame-function"><div class="delimiter"></div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div><!--\n
         --><span class="frame-line">32</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-3">\n
            <span class="frame-index">79</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Bootstrap</div>\<div class="delimiter">HandleExceptions</div></span>\n
              <span class="frame-function"><div class="delimiter">handleError</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div><!--\n
         --><span class="frame-line">32</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-4">\n
            <span class="frame-index">78</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">App</div>\<div class="delimiter">Reply</div></span>\n
              <span class="frame-function"><div class="delimiter">isFavorited</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">storage</div>/<div class="delimiter">framework</div>/<div class="delimiter">views</div>/<div class="delimiter">13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php</div><!--\n
         --><span class="frame-line">9</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-5">\n
            <span class="frame-index">77</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter"></div></span>\n
              <span class="frame-function"><div class="delimiter">include</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">PhpEngine.php</div><!--\n
         --><span class="frame-line">43</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-6">\n
            <span class="frame-index">76</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">Engines</div>\<div class="delimiter">PhpEngine</div></span>\n
              <span class="frame-function"><div class="delimiter">evaluatePath</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">CompilerEngine.php</div><!--\n
         --><span class="frame-line">59</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-7">\n
            <span class="frame-index">75</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">Engines</div>\<div class="delimiter">CompilerEngine</div></span>\n
              <span class="frame-function"><div class="delimiter">get</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">137</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-8">\n
            <span class="frame-index">74</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">getContents</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">120</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-9">\n
            <span class="frame-index">73</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">renderContents</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">85</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-10">\n
            <span class="frame-index">72</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">render</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">storage</div>/<div class="delimiter">framework</div>/<div class="delimiter">views</div>/<div class="delimiter">1196ad017046e28c49972beca0e01e3c1eba8931.php</div><!--\n
         --><span class="frame-line">31</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-11">\n
            <span class="frame-index">71</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter"></div></span>\n
              <span class="frame-function"><div class="delimiter">include</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">PhpEngine.php</div><!--\n
         --><span class="frame-line">43</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-12">\n
            <span class="frame-index">70</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">Engines</div>\<div class="delimiter">PhpEngine</div></span>\n
              <span class="frame-function"><div class="delimiter">evaluatePath</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">CompilerEngine.php</div><!--\n
         --><span class="frame-line">59</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-13">\n
            <span class="frame-index">69</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">Engines</div>\<div class="delimiter">CompilerEngine</div></span>\n
              <span class="frame-function"><div class="delimiter">get</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">137</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-14">\n
            <span class="frame-index">68</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">getContents</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">120</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-15">\n
            <span class="frame-index">67</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">renderContents</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div><!--\n
         --><span class="frame-line">85</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-16">\n
            <span class="frame-index">66</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">View</div></span>\n
              <span class="frame-function"><div class="delimiter">render</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Http</div>/<div class="delimiter">Response.php</div><!--\n
         --><span class="frame-line">42</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-17">\n
            <span class="frame-index">65</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Http</div>\<div class="delimiter">Response</div></span>\n
              <span class="frame-function"><div class="delimiter">setContent</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">symfony</div>/<div class="delimiter">http-foundation</div>/<div class="delimiter">Response.php</div><!--\n
         --><span class="frame-line">200</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-18">\n
            <span class="frame-index">64</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Symfony</div>\<div class="delimiter">Component</div>\<div class="delimiter">HttpFoundation</div>\<div class="delimiter">Response</div></span>\n
              <span class="frame-function"><div class="delimiter">__construct</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">724</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-19">\n
            <span class="frame-index">63</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">toResponse</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">698</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-20">\n
            <span class="frame-index">62</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">prepareResponse</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">658</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-21">\n
            <span class="frame-index">61</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">30</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-22">\n
            <span class="frame-index">60</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">SubstituteBindings.php</div><!--\n
         --><span class="frame-line">41</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-23">\n
            <span class="frame-index">59</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">SubstituteBindings</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-24">\n
            <span class="frame-index">58</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-25">\n
            <span class="frame-index">57</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">VerifyCsrfToken.php</div><!--\n
         --><span class="frame-line">67</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-26">\n
            <span class="frame-index">56</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">VerifyCsrfToken</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-27">\n
            <span class="frame-index">55</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-28">\n
            <span class="frame-index">54</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">ShareErrorsFromSession.php</div><!--\n
         --><span class="frame-line">49</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-29">\n
            <span class="frame-index">53</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">View</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">ShareErrorsFromSession</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-30">\n
            <span class="frame-index">52</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-31">\n
            <span class="frame-index">51</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Session</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">StartSession.php</div><!--\n
         --><span class="frame-line">63</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-32">\n
            <span class="frame-index">50</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Session</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">StartSession</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-33">\n
            <span class="frame-index">49</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-34">\n
            <span class="frame-index">48</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Cookie</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">AddQueuedCookiesToResponse.php</div><!--\n
         --><span class="frame-line">37</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-35">\n
            <span class="frame-index">47</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Cookie</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">AddQueuedCookiesToResponse</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-36">\n
            <span class="frame-index">46</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-37">\n
            <span class="frame-index">45</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Cookie</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">EncryptCookies.php</div><!--\n
         --><span class="frame-line">59</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-38">\n
            <span class="frame-index">44</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Cookie</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">EncryptCookies</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-39">\n
            <span class="frame-index">43</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-40">\n
            <span class="frame-index">42</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">102</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-41">\n
            <span class="frame-index">41</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">then</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">660</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-42">\n
            <span class="frame-index">40</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">runRouteWithinStack</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">635</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-43">\n
            <span class="frame-index">39</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">runRoute</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">601</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-44">\n
            <span class="frame-index">38</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">dispatchToRoute</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div><!--\n
         --><span class="frame-line">590</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-45">\n
            <span class="frame-index">37</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Router</div></span>\n
              <span class="frame-function"><div class="delimiter">dispatch</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div><!--\n
         --><span class="frame-line">176</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-46">\n
            <span class="frame-index">36</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Kernel</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">30</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-47">\n
            <span class="frame-index">35</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">barryvdh</div>/<div class="delimiter">laravel-debugbar</div>/<div class="delimiter">src</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">InjectDebugbar.php</div><!--\n
         --><span class="frame-line">58</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-48">\n
            <span class="frame-index">34</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Barryvdh</div>\<div class="delimiter">Debugbar</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">InjectDebugbar</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-49">\n
            <span class="frame-index">33</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-50">\n
            <span class="frame-index">32</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">fideloper</div>/<div class="delimiter">proxy</div>/<div class="delimiter">src</div>/<div class="delimiter">TrustProxies.php</div><!--\n
         --><span class="frame-line">56</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-51">\n
            <span class="frame-index">31</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Fideloper</div>\<div class="delimiter">Proxy</div>\<div class="delimiter">TrustProxies</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-52">\n
            <span class="frame-index">30</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-53">\n
            <span class="frame-index">29</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">TransformsRequest.php</div><!--\n
         --><span class="frame-line">30</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-54">\n
            <span class="frame-index">28</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">TransformsRequest</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-55">\n
            <span class="frame-index">27</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-56">\n
            <span class="frame-index">26</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">TransformsRequest.php</div><!--\n
         --><span class="frame-line">30</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-57">\n
            <span class="frame-index">25</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">TransformsRequest</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-58">\n
            <span class="frame-index">24</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-59">\n
            <span class="frame-index">23</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">ValidatePostSize.php</div><!--\n
         --><span class="frame-line">27</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-60">\n
            <span class="frame-index">22</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">ValidatePostSize</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-61">\n
            <span class="frame-index">21</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-62">\n
            <span class="frame-index">20</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">CheckForMaintenanceMode.php</div><!--\n
         --><span class="frame-line">46</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-63">\n
            <span class="frame-index">19</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Middleware</div>\<div class="delimiter">CheckForMaintenanceMode</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">149</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-64">\n
            <span class="frame-index">18</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">53</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-65">\n
            <span class="frame-index">17</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">Illuminate</div>\<div class="delimiter">Routing</div>\<div class="delimiter">{closure}</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div><!--\n
         --><span class="frame-line">102</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-66">\n
            <span class="frame-index">16</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Pipeline</div>\<div class="delimiter">Pipeline</div></span>\n
              <span class="frame-function"><div class="delimiter">then</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div><!--\n
         --><span class="frame-line">151</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-67">\n
            <span class="frame-index">15</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Kernel</div></span>\n
              <span class="frame-function"><div class="delimiter">sendRequestThroughRouter</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div><!--\n
         --><span class="frame-line">116</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-68">\n
            <span class="frame-index">14</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Http</div>\<div class="delimiter">Kernel</div></span>\n
              <span class="frame-function"><div class="delimiter">handle</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Testing</div>/<div class="delimiter">Concerns</div>/<div class="delimiter">MakesHttpRequests.php</div><!--\n
         --><span class="frame-line">324</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-69">\n
            <span class="frame-index">13</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Testing</div>\<div class="delimiter">TestCase</div></span>\n
              <span class="frame-function"><div class="delimiter">call</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Testing</div>/<div class="delimiter">Concerns</div>/<div class="delimiter">MakesHttpRequests.php</div><!--\n
         --><span class="frame-line">147</span>\n
          </div>\n
        </div>\n
        <div class="frame  frame-application" id="frame-line-70">\n
            <span class="frame-index">12</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Illuminate</div>\<div class="delimiter">Foundation</div>\<div class="delimiter">Testing</div>\<div class="delimiter">TestCase</div></span>\n
              <span class="frame-function"><div class="delimiter">get</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">&hellip;</div>/<div class="delimiter">tests</div>/<div class="delimiter">Feature</div>/<div class="delimiter">ReadThreadsTest.php</div><!--\n
         --><span class="frame-line">43</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-71">\n
            <span class="frame-index">11</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">Tests</div>\<div class="delimiter">Feature</div>\<div class="delimiter">ReadThreadsTest</div></span>\n
              <span class="frame-function"><div class="delimiter">a_user_is_able_to_read_replies_that_are_associated_with_the_thread</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">[internal]</div><!--\n
         --><span class="frame-line">0</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-72">\n
            <span class="frame-index">10</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">ReflectionMethod</div></span>\n
              <span class="frame-function"><div class="delimiter">invokeArgs</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div><!--\n
         --><span class="frame-line">1069</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-73">\n
            <span class="frame-index">9</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestCase</div></span>\n
              <span class="frame-function"><div class="delimiter">runTest</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div><!--\n
         --><span class="frame-line">928</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-74">\n
            <span class="frame-index">8</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestCase</div></span>\n
              <span class="frame-function"><div class="delimiter">runBare</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestResult.php</div><!--\n
         --><span class="frame-line">695</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-75">\n
            <span class="frame-index">7</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestResult</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div><!--\n
         --><span class="frame-line">883</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-76">\n
            <span class="frame-index">6</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestCase</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div><!--\n
         --><span class="frame-line">744</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-77">\n
            <span class="frame-index">5</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestSuite</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div><!--\n
         --><span class="frame-line">744</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-78">\n
            <span class="frame-index">4</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestSuite</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div><!--\n
         --><span class="frame-line">744</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-79">\n
            <span class="frame-index">3</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">Framework</div>\<div class="delimiter">TestSuite</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">TestRunner.php</div><!--\n
         --><span class="frame-line">537</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-80">\n
            <span class="frame-index">2</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">TextUI</div>\<div class="delimiter">TestRunner</div></span>\n
              <span class="frame-function"><div class="delimiter">doRun</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">Command.php</div><!--\n
         --><span class="frame-line">212</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-81">\n
            <span class="frame-index">1</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">TextUI</div>\<div class="delimiter">Command</div></span>\n
              <span class="frame-function"><div class="delimiter">run</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">Command.php</div><!--\n
         --><span class="frame-line">141</span>\n
          </div>\n
        </div>\n
        <div class="frame  " id="frame-line-82">\n
            <span class="frame-index">0</span>\n
            <div class="frame-method-info">\n
              <span class="frame-class"><div class="delimiter">PHPUnit</div>\<div class="delimiter">TextUI</div>\<div class="delimiter">Command</div></span>\n
              <span class="frame-function"><div class="delimiter">main</div></span>\n
            </div>\n
      \n
          <div class="frame-file">\n
              <div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div><!--\n
         --><span class="frame-line">551</span>\n
          </div>\n
        </div>\n
      </div></div>\n
              <div class="panel details-container cf">\n
        <div class="frame-code-container ">\n
                  <div class="frame-code active" id="frame-code-0">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-0" class="code-block linenums:13">    public function favorites()\n
          {\n
              return $this-&gt;morphMany(Favorite::class, &#039;favorited&#039;);\n
          }\n
       \n
          public function favorite()\n
          {\n
              $this-&gt;favorites()-&gt;create([&#039;user_id&#039; =&gt; auth()-&gt;user()-&gt;id]);\n
       \n
              return $this;\n
          }\n
       \n
          public function unfavorite()\n
          {\n
              $this-&gt;favorites()-&gt;delete();\n
          }\n
       \n
          public function isFavorited()\n
          {\n
              return ! ! $this-&gt;favorites-&gt;where(&#039;user_id&#039;, auth()-&gt;user()-&gt;id)-&gt;count();\n
          }\n
      }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-0" class="code-block frame-args">\n
                    <ol class="linenums"><li><script> Sfdump = window.Sfdump || (function (doc) { var refStyle = doc.createElement('style'), rxEsc = /([.*+?^${}()|\[\]\/\\])/g, idRx = /\bsf-dump-\d+-ref[012]\w+\b/, keyHint = 0 <= navigator.platform.toUpperCase().indexOf('MAC') ? 'Cmd' : 'Ctrl', addEventListener = function (e, n, cb) { e.addEventListener(n, cb, false); }; (doc.documentElement.firstElementChild || doc.documentElement.children[0]).appendChild(refStyle); if (!doc.addEventListener) { addEventListener = function (element, eventName, callback) { element.attachEvent('on' + eventName, function (e) { e.preventDefault = function () {e.returnValue = false;}; e.target = e.srcElement; callback(e); }); }; } function toggle(a, recursive) { var s = a.nextSibling || {}, oldClass = s.className, arrow, newClass; if (/\bsf-dump-compact\b/.test(oldClass)) { arrow = '&#9660;'; newClass = 'sf-dump-expanded'; } else if (/\bsf-dump-expanded\b/.test(oldClass)) { arrow = '&#9654;'; newClass = 'sf-dump-compact'; } else { return false; } if (doc.createEvent && s.dispatchEvent) { var event = doc.createEvent('Event'); event.initEvent('sf-dump-expanded' === newClass ? 'sfbeforedumpexpand' : 'sfbeforedumpcollapse', true, false); s.dispatchEvent(event); } a.lastChild.innerHTML = arrow; s.className = s.className.replace(/\bsf-dump-(compact|expanded)\b/, newClass); if (recursive) { try { a = s.querySelectorAll('.'+oldClass); for (s = 0; s < a.length; ++s) { if (-1 == a[s].className.indexOf(newClass)) { a[s].className = newClass; a[s].previousSibling.lastChild.innerHTML = arrow; } } } catch (e) { } } return true; }; function collapse(a, recursive) { var s = a.nextSibling || {}, oldClass = s.className; if (/\bsf-dump-expanded\b/.test(oldClass)) { toggle(a, recursive); return true; } return false; }; function expand(a, recursive) { var s = a.nextSibling || {}, oldClass = s.className; if (/\bsf-dump-compact\b/.test(oldClass)) { toggle(a, recursive); return true; } return false; }; function collapseAll(root) { var a = root.querySelector('a.sf-dump-toggle'); if (a) { collapse(a, true); expand(a); return true; } return false; } function reveal(node) { var previous, parents = []; while ((node = node.parentNode || {}) && (previous = node.previousSibling) && 'A' === previous.tagName) { parents.push(previous); } if (0 !== parents.length) { parents.forEach(function (parent) { expand(parent); }); return true; } return false; } function highlight(root, activeNode, nodes) { resetHighlightedNodes(root); Array.from(nodes||[]).forEach(function (node) { if (!/\bsf-dump-highlight\b/.test(node.className)) { node.className = node.className + ' sf-dump-highlight'; } }); if (!/\bsf-dump-highlight-active\b/.test(activeNode.className)) { activeNode.className = activeNode.className + ' sf-dump-highlight-active'; } } function resetHighlightedNodes(root) { Array.from(root.querySelectorAll('.sf-dump-str, .sf-dump-key, .sf-dump-public, .sf-dump-protected, .sf-dump-private')).forEach(function (strNode) { strNode.className = strNode.className.replace(/\bsf-dump-highlight\b/, ''); strNode.className = strNode.className.replace(/\bsf-dump-highlight-active\b/, ''); }); } return function (root, x) { root = doc.getElementById(root); var indentRx = new RegExp('^('+(root.getAttribute('data-indent-pad') || ' ').replace(rxEsc, '\\$1')+')+', 'm'), options = {"maxDepth":1,"maxStringLength":160,"fileLinkFormat":false}, elt = root.getElementsByTagName('A'), len = elt.length, i = 0, s, h, t = []; while (i < len) t.push(elt[i++]); for (i in x) { options[i] = x[i]; } function a(e, f) { addEventListener(root, e, function (e) { if ('A' == e.target.tagName) { f(e.target, e); } else if ('A' == e.target.parentNode.tagName) { f(e.target.parentNode, e); } else if (e.target.nextElementSibling && 'A' == e.target.nextElementSibling.tagName) { f(e.target.nextElementSibling, e, true); } }); }; function isCtrlKey(e) { return e.ctrlKey || e.metaKey; } function xpathString(str) { var parts = str.match(/[^'"]+|['"]/g).map(function (part) { if ("'" == part) { return '"\'"'; } if ('"' == part) { return "'\"'"; } return "'" + part + "'"; }); return "concat(" + parts.join(",") + ", '')"; } addEventListener(root, 'mouseover', function (e) { if ('' != refStyle.innerHTML) { refStyle.innerHTML = ''; } }); a('mouseover', function (a, e, c) { if (c) { e.target.style.cursor = "pointer"; } else if (a = idRx.exec(a.className)) { try { refStyle.innerHTML = 'pre.sf-dump .'+a[0]+'{background-color: #B729D9; color: #FFF !important; border-radius: 2px}'; } catch (e) { } } }); a('click', function (a, e, c) { if (/\bsf-dump-toggle\b/.test(a.className)) { e.preventDefault(); if (!toggle(a, isCtrlKey(e))) { var r = doc.getElementById(a.getAttribute('href').substr(1)), s = r.previousSibling, f = r.parentNode, t = a.parentNode; t.replaceChild(r, a); f.replaceChild(a, s); t.insertBefore(s, r); f = f.firstChild.nodeValue.match(indentRx); t = t.firstChild.nodeValue.match(indentRx); if (f && t && f[0] !== t[0]) { r.innerHTML = r.innerHTML.replace(new RegExp('^'+f[0].replace(rxEsc, '\\$1'), 'mg'), t[0]); } if (/\bsf-dump-compact\b/.test(r.className)) { toggle(s, isCtrlKey(e)); } } if (c) { } else if (doc.getSelection) { try { doc.getSelection().removeAllRanges(); } catch (e) { doc.getSelection().empty(); } } else { doc.selection.empty(); } } else if (/\bsf-dump-str-toggle\b/.test(a.className)) { e.preventDefault(); e = a.parentNode.parentNode; e.className = e.className.replace(/\bsf-dump-str-(expand|collapse)\b/, a.parentNode.className); } }); elt = root.getElementsByTagName('SAMP'); len = elt.length; i = 0; while (i < len) t.push(elt[i++]); len = t.length; for (i = 0; i < len; ++i) { elt = t[i]; if ('SAMP' == elt.tagName) { elt.className = 'sf-dump-expanded'; a = elt.previousSibling || {}; if ('A' != a.tagName) { a = doc.createElement('A'); a.className = 'sf-dump-ref'; elt.parentNode.insertBefore(a, elt); } else { a.innerHTML += ' '; } a.title = (a.title ? a.title+'\n[' : '[')+keyHint+'+click] Expand all children'; a.innerHTML += '<span>&#9660;</span>'; a.className += ' sf-dump-toggle'; x = 1; if ('sf-dump' != elt.parentNode.className) { x += elt.parentNode.getAttribute('data-depth')/1; } elt.setAttribute('data-depth', x); if (x > options.maxDepth) { toggle(a); } } else if (/\bsf-dump-ref\b/.test(elt.className) && (a = elt.getAttribute('href'))) { a = a.substr(1); elt.className += ' '+a; if (/[\[{]$/.test(elt.previousSibling.nodeValue)) { a = a != elt.nextSibling.id && doc.getElementById(a); try { s = a.nextSibling; elt.appendChild(a); s.parentNode.insertBefore(a, s); if (/^[@#]/.test(elt.innerHTML)) { elt.innerHTML += ' <span>&#9654;</span>'; } else { elt.innerHTML = '<span>&#9654;</span>'; elt.className = 'sf-dump-ref'; } elt.className += ' sf-dump-toggle'; } catch (e) { if ('&' == elt.innerHTML.charAt(0)) { elt.innerHTML = '&hellip;'; elt.className = 'sf-dump-ref'; } } } } } if (doc.evaluate && Array.from && root.children.length > 1) { root.setAttribute('tabindex', 0); SearchState = function () { this.nodes = []; this.idx = 0; }; SearchState.prototype = { next: function () { if (this.isEmpty()) { return this.current(); } this.idx = this.idx < (this.nodes.length - 1) ? this.idx + 1 : this.idx; return this.current(); }, previous: function () { if (this.isEmpty()) { return this.current(); } this.idx = this.idx > 0 ? this.idx - 1 : this.idx; return this.current(); }, isEmpty: function () { return 0 === this.count(); }, current: function () { if (this.isEmpty()) { return null; } return this.nodes[this.idx]; }, reset: function () { this.nodes = []; this.idx = 0; }, count: function () { return this.nodes.length; }, }; function showCurrent(state) { var currentNode = state.current(); if (currentNode) { reveal(currentNode); highlight(root, currentNode, state.nodes); } counter.textContent = (state.isEmpty() ? 0 : state.idx + 1) + ' of ' + state.count(); } var search = doc.createElement('div'); search.className = 'sf-dump-search-wrapper sf-dump-search-hidden'; search.innerHTML = ' <input type="text" class="sf-dump-search-input"> <span class="sf-dump-search-count">0 of 0<\/span> <button type="button" class="sf-dump-search-input-previous" tabindex="-1"> <svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"> <path d="M1683 1331l-166 165q-19 19-45 19t-45-19l-531-531-531 531q-19 19-45 19t-45-19l-166-165q-19-19-19-45.5t19-45.5l742-741q19-19 45-19t45 19l742 741q19 19 19 45.5t-19 45.5z"\/> <\/svg> <\/button> <button type="button" class="sf-dump-search-input-next" tabindex="-1"> <svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"> <path d="M1683 808l-742 741q-19 19-45 19t-45-19l-742-741q-19-19-19-45.5t19-45.5l166-165q19-19 45-19t45 19l531 531 531-531q19-19 45-19t45 19l166 165q19 19 19 45.5t-19 45.5z"\/> <\/svg> <\/button> '; root.insertBefore(search, root.firstChild); var state = new SearchState(); var searchInput = search.querySelector('.sf-dump-search-input'); var counter = search.querySelector('.sf-dump-search-count'); var searchInputTimer = 0; var previousSearchQuery = ''; addEventListener(searchInput, 'keyup', function (e) { var searchQuery = e.target.value; /* Don't perform anything if the pressed key didn't change the query */ if (searchQuery === previousSearchQuery) { return; } previousSearchQuery = searchQuery; clearTimeout(searchInputTimer); searchInputTimer = setTimeout(function () { state.reset(); collapseAll(root); resetHighlightedNodes(root); if ('' === searchQuery) { counter.textContent = '0 of 0'; return; } var xpathResult = doc.evaluate('//pre[@id="' + root.id + '"]//span[@class="sf-dump-str" or @class="sf-dump-key" or @class="sf-dump-public" or @class="sf-dump-protected" or @class="sf-dump-private"][contains(child::text(), ' + xpathString(searchQuery) + ')]', document, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null); while (node = xpathResult.iterateNext()) state.nodes.push(node); showCurrent(state); }, 400); }); Array.from(search.querySelectorAll('.sf-dump-search-input-next, .sf-dump-search-input-previous')).forEach(function (btn) { addEventListener(btn, 'click', function (e) { e.preventDefault(); -1 !== e.target.className.indexOf('next') ? state.next() : state.previous(); searchInput.focus(); collapseAll(root); showCurrent(state); }) }); addEventListener(root, 'keydown', function (e) { var isSearchActive = !/\bsf-dump-search-hidden\b/.test(search.className); if ((114 === e.keyCode && !isSearchActive) || (isCtrlKey(e) && 70 === e.keyCode)) { /* F3 or CMD/CTRL + F */ e.preventDefault(); search.className = search.className.replace(/\bsf-dump-search-hidden\b/, ''); searchInput.focus(); } else if (isSearchActive) { if (27 === e.keyCode) { /* ESC key */ search.className += ' sf-dump-search-hidden'; e.preventDefault(); resetHighlightedNodes(root); searchInput.value = ''; } else if ( (isCtrlKey(e) && 71 === e.keyCode) /* CMD/CTRL + G */ || 13 === e.keyCode /* Enter */ || 114 === e.keyCode /* F3 */ ) { e.preventDefault(); e.shiftKey ? state.previous() : state.next(); collapseAll(root); showCurrent(state); } } }); } if (0 >= options.maxStringLength) { return; } try { elt = root.querySelectorAll('.sf-dump-str'); len = elt.length; i = 0; t = []; while (i < len) t.push(elt[i++]); len = t.length; for (i = 0; i < len; ++i) { elt = t[i]; s = elt.innerText || elt.textContent; x = s.length - options.maxStringLength; if (0 < x) { h = elt.innerHTML; elt[elt.innerText ? 'innerText' : 'textContent'] = s.substring(0, options.maxStringLength); elt.className += ' sf-dump-str-collapse'; elt.innerHTML = '<span class=sf-dump-str-collapse>'+h+'<a class="sf-dump-ref sf-dump-str-toggle" title="Collapse"> &#9664;</a></span>'+ '<span class=sf-dump-str-expand>'+elt.innerHTML+'<a class="sf-dump-ref sf-dump-str-toggle" title="'+x+' remaining characters"> &#9654;</a></span>'; } } } catch (e) { } }; })(document); </script><style> pre.sf-dump { display: block; white-space: pre; padding: 5px; } pre.sf-dump:after { content: ""; visibility: hidden; display: block; height: 0; clear: both; } pre.sf-dump span { display: inline; } pre.sf-dump .sf-dump-compact { display: none; } pre.sf-dump abbr { text-decoration: none; border: none; cursor: help; } pre.sf-dump a { text-decoration: none; cursor: pointer; border: 0; outline: none; color: inherit; } pre.sf-dump .sf-dump-ellipsis { display: inline-block; overflow: visible; text-overflow: ellipsis; max-width: 5em; white-space: nowrap; overflow: hidden; vertical-align: top; } pre.sf-dump .sf-dump-ellipsis+.sf-dump-ellipsis { max-width: none; } pre.sf-dump code { display:inline; padding:0; background:none; } .sf-dump-str-collapse .sf-dump-str-collapse { display: none; } .sf-dump-str-expand .sf-dump-str-expand { display: none; } .sf-dump-public.sf-dump-highlight, .sf-dump-protected.sf-dump-highlight, .sf-dump-private.sf-dump-highlight, .sf-dump-str.sf-dump-highlight, .sf-dump-key.sf-dump-highlight { background: rgba(111, 172, 204, 0.3); border: 1px solid #7DA0B1; border-radius: 3px; } .sf-dump-public.sf-dump-highlight-active, .sf-dump-protected.sf-dump-highlight-active, .sf-dump-private.sf-dump-highlight-active, .sf-dump-str.sf-dump-highlight-active, .sf-dump-key.sf-dump-highlight-active { background: rgba(253, 175, 0, 0.4); border: 1px solid #ffa500; border-radius: 3px; } pre.sf-dump .sf-dump-search-hidden { display: none; } pre.sf-dump .sf-dump-search-wrapper { float: right; font-size: 0; white-space: nowrap; max-width: 100%; text-align: right; } pre.sf-dump .sf-dump-search-wrapper > * { vertical-align: top; box-sizing: border-box; height: 21px; font-weight: normal; border-radius: 0; background: #FFF; color: #757575; border: 1px solid #BBB; } pre.sf-dump .sf-dump-search-wrapper > input.sf-dump-search-input { padding: 3px; height: 21px; font-size: 12px; border-right: none; width: 140px; border-top-left-radius: 3px; border-bottom-left-radius: 3px; color: #000; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-next, pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-previous { background: #F2F2F2; outline: none; border-left: none; font-size: 0; line-height: 0; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-next { border-top-right-radius: 3px; border-bottom-right-radius: 3px; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-next > svg, pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-previous > svg { pointer-events: none; width: 12px; height: 12px; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-count { display: inline-block; padding: 0 5px; margin: 0; border-left: none; line-height: 21px; font-size: 12px; }pre.sf-dump, pre.sf-dump .sf-dump-default{color:#FFFFFF; line-height:normal; font:12px "Inconsolata", "Fira Mono", "Source Code Pro", Monaco, Consolas, "Lucida Console", monospace !important; word-wrap: break-word; white-space: pre-wrap; position:relative; z-index:99999; word-break: normal}pre.sf-dump .sf-dump-num{color:#BCD42A}pre.sf-dump .sf-dump-const{color: #4bb1b1;}pre.sf-dump .sf-dump-str{color:#BCD42A}pre.sf-dump .sf-dump-note{color:#ef7c61}pre.sf-dump .sf-dump-ref{color:#A0A0A0}pre.sf-dump .sf-dump-public{color:#FFFFFF}pre.sf-dump .sf-dump-protected{color:#FFFFFF}pre.sf-dump .sf-dump-private{color:#FFFFFF}pre.sf-dump .sf-dump-meta{color:#FFFFFF}pre.sf-dump .sf-dump-key{color:#BCD42A}pre.sf-dump .sf-dump-index{color:#ef7c61}pre.sf-dump .sf-dump-ellipsis{color:#FF8400}</style><pre class=sf-dump id=sf-dump-747706737 data-indent-pad="  ">"<span class=sf-dump-str title="194 characters">Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)</span>"\n
      </pre><script>Sfdump("sf-dump-747706737")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-1">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-1" class="code-block linenums:13">    public function favorites()\n
          {\n
              return $this-&gt;morphMany(Favorite::class, &#039;favorited&#039;);\n
          }\n
       \n
          public function favorite()\n
          {\n
              $this-&gt;favorites()-&gt;create([&#039;user_id&#039; =&gt; auth()-&gt;user()-&gt;id]);\n
       \n
              return $this;\n
          }\n
       \n
          public function unfavorite()\n
          {\n
              $this-&gt;favorites()-&gt;delete();\n
          }\n
       \n
          public function isFavorited()\n
          {\n
              return ! ! $this-&gt;favorites-&gt;where(&#039;user_id&#039;, auth()-&gt;user()-&gt;id)-&gt;count();\n
          }\n
      }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-1" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-559123502 data-indent-pad="  ">"<span class=sf-dump-str title="115 characters">Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)</span>"\n
      </pre><script>Sfdump("sf-dump-559123502")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments ">\n
                                        <div class="frame-comment" id="comment-1-0">\n
                    <span class="frame-comment-context">Exception message:</span>\n
                    Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)            </div>\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-2">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-2" class="code-block linenums:13">    public function favorites()\n
          {\n
              return $this-&gt;morphMany(Favorite::class, &#039;favorited&#039;);\n
          }\n
       \n
          public function favorite()\n
          {\n
              $this-&gt;favorites()-&gt;create([&#039;user_id&#039; =&gt; auth()-&gt;user()-&gt;id]);\n
       \n
              return $this;\n
          }\n
       \n
          public function unfavorite()\n
          {\n
              $this-&gt;favorites()-&gt;delete();\n
          }\n
       \n
          public function isFavorited()\n
          {\n
              return ! ! $this-&gt;favorites-&gt;where(&#039;user_id&#039;, auth()-&gt;user()-&gt;id)-&gt;count();\n
          }\n
      }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-2" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1146904289 data-indent-pad="  ">"<span class=sf-dump-str title="36 characters">Trying to get property of non-object</span>"\n
      </pre><script>Sfdump("sf-dump-1146904289")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments ">\n
                                        <div class="frame-comment" id="comment-2-0">\n
                    <span class="frame-comment-context">Exception message:</span>\n
                    Trying to get property of non-object            </div>\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-3">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">app</div>/<div class="delimiter">Favoritable.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-3" class="code-block linenums:13">    public function favorites()\n
          {\n
              return $this-&gt;morphMany(Favorite::class, &#039;favorited&#039;);\n
          }\n
       \n
          public function favorite()\n
          {\n
              $this-&gt;favorites()-&gt;create([&#039;user_id&#039; =&gt; auth()-&gt;user()-&gt;id]);\n
       \n
              return $this;\n
          }\n
       \n
          public function unfavorite()\n
          {\n
              $this-&gt;favorites()-&gt;delete();\n
          }\n
       \n
          public function isFavorited()\n
          {\n
              return ! ! $this-&gt;favorites-&gt;where(&#039;user_id&#039;, auth()-&gt;user()-&gt;id)-&gt;count();\n
          }\n
      }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-3" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1278470697 data-indent-pad="  "><span class=sf-dump-num>8</span>\n
      </pre><script>Sfdump("sf-dump-1278470697")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1863344603 data-indent-pad="  ">"<span class=sf-dump-str title="36 characters">Trying to get property of non-object</span>"\n
      </pre><script>Sfdump("sf-dump-1863344603")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-304659058 data-indent-pad="  ">"<span class=sf-dump-str title="50 characters">/Users/bobbyborisov/code/forum/app/Favoritable.php</span>"\n
      </pre><script>Sfdump("sf-dump-304659058")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1689710914 data-indent-pad="  "><span class=sf-dump-num>32</span>\n
      </pre><script>Sfdump("sf-dump-1689710914")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1818344337 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-1818344337")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-4">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">storage</div>/<div class="delimiter">framework</div>/<div class="delimiter">views</div>/<div class="delimiter">13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-4" class="code-block linenums:1">&lt;div class=&quot;panel panel-default&quot;&gt;\n
          &lt;div class=&quot;panel-heading level-end&quot;&gt;\n
              &lt;div&gt;\n
                  &lt;?php echo e($reply-&gt;owner-&gt;name); ?&gt; said\n
                  &lt;?php echo e($reply-&gt;created_at-&gt;diffForHumans()); ?&gt;\n
       \n
              &lt;/div&gt;\n
              &lt;div class=&quot;gotoend&quot;&gt;\n
                  &lt;?php if($reply-&gt;isFavorited()): ?&gt;\n
                      &lt;form method=&quot;POST&quot; action=&quot;/replies/&lt;?php echo e($reply-&gt;id); ?&gt;/favorites&quot;&gt;\n
                          &lt;?php echo e(csrf_field()); ?&gt;\n
       \n
                          &lt;input name=&quot;_method&quot; type=&quot;hidden&quot; value=&quot;DELETE&quot;&gt;\n
                          &lt;button type=&quot;submit&quot; class=&quot;btn btn-sm btn-danger&quot;&gt;\n
                              &lt;?php echo e($reply-&gt;favorites_count); ?&gt; &lt;?php echo e(str_plural(&#039;Favorite&#039;, $reply-&gt;favorites_count)); ?&gt;\n
       \n
                          &lt;/button&gt;\n
                      &lt;/form&gt;\n
                  &lt;?php else: ?&gt;\n
                      &lt;form method=&quot;POST&quot; action=&quot;/replies/&lt;?php echo e($reply-&gt;id); ?&gt;/favorites&quot;&gt;\n
                          &lt;?php echo e(csrf_field()); ?&gt;\n
       \n
                          &lt;button type=&quot;submit&quot; class=&quot;btn btn-sm btn-success&quot;&gt;\n
                              &lt;?php echo e($reply-&gt;favorites_count); ?&gt; &lt;?php echo e(str_plural(&#039;Favorite&#039;, $reply-&gt;favorites_count)); ?&gt;                    &lt;/button&gt;\n
                      &lt;/form&gt;\n
                  &lt;?php endif; ?&gt;\n
              &lt;/div&gt;\n
       \n
          &lt;/div&gt;\n
       \n
          &lt;div class=&quot;panel-body&quot;&gt;\n
              &lt;article&gt;\n
                  &lt;div class=&quot;body&quot;&gt;&lt;?php echo e($reply-&gt;body); ?&gt;&lt;/div&gt;\n
              &lt;/article&gt;\n
          &lt;/div&gt;\n
      &lt;/div&gt;</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-5">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">PhpEngine.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-5" class="code-block linenums:24">    /**\n
           * Get the evaluated contents of the view at the given path.\n
           *\n
           * @param  string  $__path\n
           * @param  array   $__data\n
           * @return string\n
           */\n
          protected function evaluatePath($__path, $__data)\n
          {\n
              $obLevel = ob_get_level();\n
       \n
              ob_start();\n
       \n
              extract($__data, EXTR_SKIP);\n
       \n
              // We&#039;ll evaluate the contents of the view inside a try/catch block so we can\n
              // flush out any stray output that might get out before an error occurs or\n
              // an exception is thrown. This prevents any partial views from leaking.\n
              try {\n
                  include $__path;\n
              } catch (Exception $e) {\n
                  $this-&gt;handleViewException($e, $obLevel);\n
              } catch (Throwable $e) {\n
                  $this-&gt;handleViewException(new FatalThrowableError($e), $obLevel);\n
              }\n
       \n
              return ltrim(ob_get_clean());\n
          }\n
       \n
          /**\n
           * Handle a view exception.\n
           *\n
           * @param  \Exception  $e\n
           * @param  int  $obLevel\n
           * @return void\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleViewException(Exception $e, $obLevel)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-5" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-644615226 data-indent-pad="  ">"<span class=sf-dump-str title="99 characters">/Users/bobbyborisov/code/forum/storage/framework/views/13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php</span>"\n
      </pre><script>Sfdump("sf-dump-644615226")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-6">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">CompilerEngine.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-6" class="code-block linenums:40">     * @param  array   $data\n
           * @return string\n
           */\n
          public function get($path, array $data = [])\n
          {\n
              $this-&gt;lastCompiled[] = $path;\n
       \n
              // If this given view has expired, which means it has simply been edited since\n
              // it was last compiled, we will re-compile the views so we can evaluate a\n
              // fresh copy of the view. We&#039;ll pass the compiler the path of the view.\n
              if ($this-&gt;compiler-&gt;isExpired($path)) {\n
                  $this-&gt;compiler-&gt;compile($path);\n
              }\n
       \n
              $compiled = $this-&gt;compiler-&gt;getCompiledPath($path);\n
       \n
              // Once we have the path to the compiled file, we will evaluate the paths with\n
              // typical PHP just like any other templates. We also keep a stack of views\n
              // which have been rendered for right exception messages to be generated.\n
              $results = $this-&gt;evaluatePath($compiled, $data);\n
       \n
              array_pop($this-&gt;lastCompiled);\n
       \n
              return $results;\n
          }\n
       \n
          /**\n
           * Handle a view exception.\n
           *\n
           * @param  \Exception  $e\n
           * @param  int  $obLevel\n
           * @return void\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleViewException(Exception $e, $obLevel)\n
          {\n
              $e = new ErrorException($this-&gt;getMessage($e), 0, 1, $e-&gt;getFile(), $e-&gt;getLine(), $e);\n
       \n
              parent::handleViewException($e, $obLevel);</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-6" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2042347468 data-indent-pad="  ">"<span class=sf-dump-str title="99 characters">/Users/bobbyborisov/code/forum/storage/framework/views/13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php</span>"\n
      </pre><script>Sfdump("sf-dump-2042347468")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1239231048 data-indent-pad="  "><span class=sf-dump-note>array:10</span> [<samp>\n
        "<span class=sf-dump-key>__env</span>" => <abbr title="Illuminate\View\Factory" class=sf-dump-note>Factory</abbr> {<a class=sf-dump-ref>#118</a>}\n
        "<span class=sf-dump-key>app</span>" => <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a>}\n
        "<span class=sf-dump-key>errors</span>" => <abbr title="Illuminate\Support\ViewErrorBag" class=sf-dump-note>ViewErrorBag</abbr> {<a class=sf-dump-ref>#800</a>}\n
        "<span class=sf-dump-key>obLevel</span>" => <span class=sf-dump-num>1</span>\n
        "<span class=sf-dump-key>thread</span>" => <abbr title="App\Thread" class=sf-dump-note>Thread</abbr> {<a class=sf-dump-ref>#858</a>}\n
        "<span class=sf-dump-key>replies</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref href=#sf-dump-1239231048-ref2938 title="2 occurrences">#938</a>}\n
        "<span class=sf-dump-key>channels</span>" => <abbr title="Illuminate\Database\Eloquent\Collection" class=sf-dump-note>Collection</abbr> {<a class=sf-dump-ref>#928</a>}\n
        "<span class=sf-dump-key>__currentLoopData</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref href=#sf-dump-1239231048-ref2938 title="2 occurrences">#938</a>}\n
        "<span class=sf-dump-key>reply</span>" => <abbr title="App\Reply" class=sf-dump-note>Reply</abbr> {<a class=sf-dump-ref>#869</a>}\n
        "<span class=sf-dump-key>loop</span>" => {<a class=sf-dump-ref>#863</a>}\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-1239231048")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-7">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-7" class="code-block linenums:118">        $this-&gt;factory-&gt;callComposer($this);\n
       \n
              $contents = $this-&gt;getContents();\n
       \n
              // Once we&#039;ve finished rendering the view, we&#039;ll decrement the render count\n
              // so that each sections get flushed out next time a view is created and\n
              // no old sections are staying around in the memory of an environment.\n
              $this-&gt;factory-&gt;decrementRender();\n
       \n
              return $contents;\n
          }\n
       \n
          /**\n
           * Get the evaluated contents of the view.\n
           *\n
           * @return string\n
           */\n
          protected function getContents()\n
          {\n
              return $this-&gt;engine-&gt;get($this-&gt;path, $this-&gt;gatherData());\n
          }\n
       \n
          /**\n
           * Get the data bound to the view instance.\n
           *\n
           * @return array\n
           */\n
          protected function gatherData()\n
          {\n
              $data = array_merge($this-&gt;factory-&gt;getShared(), $this-&gt;data);\n
       \n
              foreach ($data as $key =&gt; $value) {\n
                  if ($value instanceof Renderable) {\n
                      $data[$key] = $value-&gt;render();\n
                  }\n
              }\n
       \n
              return $data;\n
          }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-7" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1746279863 data-indent-pad="  ">"<span class=sf-dump-str title="70 characters">/Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php</span>"\n
      </pre><script>Sfdump("sf-dump-1746279863")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1495276190 data-indent-pad="  "><span class=sf-dump-note>array:10</span> [<samp>\n
        "<span class=sf-dump-key>__env</span>" => <abbr title="Illuminate\View\Factory" class=sf-dump-note>Factory</abbr> {<a class=sf-dump-ref>#118</a>}\n
        "<span class=sf-dump-key>app</span>" => <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a>}\n
        "<span class=sf-dump-key>errors</span>" => <abbr title="Illuminate\Support\ViewErrorBag" class=sf-dump-note>ViewErrorBag</abbr> {<a class=sf-dump-ref>#800</a>}\n
        "<span class=sf-dump-key>obLevel</span>" => <span class=sf-dump-num>1</span>\n
        "<span class=sf-dump-key>thread</span>" => <abbr title="App\Thread" class=sf-dump-note>Thread</abbr> {<a class=sf-dump-ref>#858</a>}\n
        "<span class=sf-dump-key>replies</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref href=#sf-dump-1495276190-ref2938 title="2 occurrences">#938</a>}\n
        "<span class=sf-dump-key>channels</span>" => <abbr title="Illuminate\Database\Eloquent\Collection" class=sf-dump-note>Collection</abbr> {<a class=sf-dump-ref>#928</a>}\n
        "<span class=sf-dump-key>__currentLoopData</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref href=#sf-dump-1495276190-ref2938 title="2 occurrences">#938</a>}\n
        "<span class=sf-dump-key>reply</span>" => <abbr title="App\Reply" class=sf-dump-note>Reply</abbr> {<a class=sf-dump-ref>#869</a>}\n
        "<span class=sf-dump-key>loop</span>" => {<a class=sf-dump-ref>#863</a>}\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-1495276190")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-8">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-8" class="code-block linenums:101"> \n
                  throw $e;\n
              }\n
          }\n
       \n
          /**\n
           * Get the contents of the view instance.\n
           *\n
           * @return string\n
           */\n
          protected function renderContents()\n
          {\n
              // We will keep track of the amount of views being rendered so we can flush\n
              // the section after the complete rendering operation is done. This will\n
              // clear out the sections for any separate views that may be rendered.\n
              $this-&gt;factory-&gt;incrementRender();\n
       \n
              $this-&gt;factory-&gt;callComposer($this);\n
       \n
              $contents = $this-&gt;getContents();\n
       \n
              // Once we&#039;ve finished rendering the view, we&#039;ll decrement the render count\n
              // so that each sections get flushed out next time a view is created and\n
              // no old sections are staying around in the memory of an environment.\n
              $this-&gt;factory-&gt;decrementRender();\n
       \n
              return $contents;\n
          }\n
       \n
          /**\n
           * Get the evaluated contents of the view.\n
           *\n
           * @return string\n
           */\n
          protected function getContents()\n
          {\n
              return $this-&gt;engine-&gt;get($this-&gt;path, $this-&gt;gatherData());\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-9">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-9" class="code-block linenums:66">        $this-&gt;view = $view;\n
              $this-&gt;path = $path;\n
              $this-&gt;engine = $engine;\n
              $this-&gt;factory = $factory;\n
       \n
              $this-&gt;data = $data instanceof Arrayable ? $data-&gt;toArray() : (array) $data;\n
          }\n
       \n
          /**\n
           * Get the string contents of the view.\n
           *\n
           * @param  callable|null  $callback\n
           * @return string\n
           *\n
           * @throws \Throwable\n
           */\n
          public function render(callable $callback = null)\n
          {\n
              try {\n
                  $contents = $this-&gt;renderContents();\n
       \n
                  $response = isset($callback) ? call_user_func($callback, $this, $contents) : null;\n
       \n
                  // Once we have the contents of the view, we will flush the sections if we are\n
                  // done rendering all views so that there is nothing left hanging over when\n
                  // another view gets rendered in the future by the application developer.\n
                  $this-&gt;factory-&gt;flushStateIfDoneRendering();\n
       \n
                  return ! is_null($response) ? $response : $contents;\n
              } catch (Exception $e) {\n
                  $this-&gt;factory-&gt;flushState();\n
       \n
                  throw $e;\n
              } catch (Throwable $e) {\n
                  $this-&gt;factory-&gt;flushState();\n
       \n
                  throw $e;\n
              }\n
          }\n
       </pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-10">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">storage</div>/<div class="delimiter">framework</div>/<div class="delimiter">views</div>/<div class="delimiter">1196ad017046e28c49972beca0e01e3c1eba8931.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-10" class="code-block linenums:12">                                &lt;form method=&quot;POST&quot; action=&quot;&lt;?php echo e(route(&#039;thread.delete&#039;, $thread)); ?&gt;&quot;&gt;\n
                                          &lt;?php echo e(csrf_field()); ?&gt;\n
       \n
                                          &lt;?php echo e(method_field(&quot;DELETE&quot;)); ?&gt;\n
       \n
                                          &lt;button type=&quot;submit&quot; class=&quot;btn btn-sm btn-danger&quot;&gt;Delete&lt;/button&gt;\n
                                      &lt;/form&gt;\n
                                  &lt;/div&gt;\n
                              &lt;?php endif; ?&gt;\n
                          &lt;/div&gt;\n
                          &lt;div class=&quot;panel-body&quot;&gt;\n
                              &lt;article&gt;\n
                                  &lt;h4&gt;&lt;?php echo e($thread-&gt;title); ?&gt;&lt;/h4&gt;\n
                                  &lt;div class=&quot;body&quot;&gt;&lt;?php echo e($thread-&gt;body); ?&gt;&lt;/div&gt;\n
                              &lt;/article&gt;\n
                          &lt;/div&gt;\n
                      &lt;/div&gt;\n
       \n
                      &lt;?php $__currentLoopData = $replies; $__env-&gt;addLoop($__currentLoopData); foreach($__currentLoopData as $reply): $__env-&gt;incrementLoopIndices(); $loop = $__env-&gt;getLastLoop(); ?&gt;\n
                          &lt;?php echo $__env-&gt;make(&#039;threads.reply&#039;, array_except(get_defined_vars(), array(&#039;__data&#039;, &#039;__path&#039;)))-&gt;render(); ?&gt;\n
                      &lt;?php endforeach; $__env-&gt;popLoop(); $loop = $__env-&gt;getLastLoop(); ?&gt;\n
       \n
                      &lt;?php echo e($replies-&gt;links()); ?&gt;\n
       \n
       \n
                      &lt;form method=&quot;POST&quot; action=&quot;&lt;?php echo e($thread-&gt;path().&#039;/replies&#039;); ?&gt;&quot;&gt;\n
                          &lt;?php echo e(csrf_field()); ?&gt;\n
       \n
                          &lt;div class=&quot;form-group&quot;&gt;\n
                              &lt;textarea name=&quot;body&quot; id=&quot;body&quot; class=&quot;form-control&quot; placeholder=&quot;Have something to say?&quot;&gt;&lt;/textarea&gt;\n
                          &lt;/div&gt;\n
                          &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Post&lt;/button&gt;\n
                      &lt;/form&gt;\n
       \n
                      &lt;?php if(auth()-&gt;guard()-&gt;guest()): ?&gt;\n
                          &lt;p class=&quot;text-center&quot;&gt;Please &lt;a href=&quot;&lt;?php echo e(route(&#039;login&#039;)); ?&gt;&quot;&gt;sign in&lt;/a&gt; to participate in this discussion&lt;/p&gt;\n
                      &lt;?php endif; ?&gt;\n
                  &lt;/div&gt;\n
                  &lt;div class=&quot;col-md-4&quot;&gt;\n
                      &lt;div class=&quot;panel panel-default&quot;&gt;</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-11">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">PhpEngine.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-11" class="code-block linenums:24">    /**\n
           * Get the evaluated contents of the view at the given path.\n
           *\n
           * @param  string  $__path\n
           * @param  array   $__data\n
           * @return string\n
           */\n
          protected function evaluatePath($__path, $__data)\n
          {\n
              $obLevel = ob_get_level();\n
       \n
              ob_start();\n
       \n
              extract($__data, EXTR_SKIP);\n
       \n
              // We&#039;ll evaluate the contents of the view inside a try/catch block so we can\n
              // flush out any stray output that might get out before an error occurs or\n
              // an exception is thrown. This prevents any partial views from leaking.\n
              try {\n
                  include $__path;\n
              } catch (Exception $e) {\n
                  $this-&gt;handleViewException($e, $obLevel);\n
              } catch (Throwable $e) {\n
                  $this-&gt;handleViewException(new FatalThrowableError($e), $obLevel);\n
              }\n
       \n
              return ltrim(ob_get_clean());\n
          }\n
       \n
          /**\n
           * Handle a view exception.\n
           *\n
           * @param  \Exception  $e\n
           * @param  int  $obLevel\n
           * @return void\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleViewException(Exception $e, $obLevel)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-11" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2121561684 data-indent-pad="  ">"<span class=sf-dump-str title="99 characters">/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php</span>"\n
      </pre><script>Sfdump("sf-dump-2121561684")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-12">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Engines</div>/<div class="delimiter">CompilerEngine.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-12" class="code-block linenums:40">     * @param  array   $data\n
           * @return string\n
           */\n
          public function get($path, array $data = [])\n
          {\n
              $this-&gt;lastCompiled[] = $path;\n
       \n
              // If this given view has expired, which means it has simply been edited since\n
              // it was last compiled, we will re-compile the views so we can evaluate a\n
              // fresh copy of the view. We&#039;ll pass the compiler the path of the view.\n
              if ($this-&gt;compiler-&gt;isExpired($path)) {\n
                  $this-&gt;compiler-&gt;compile($path);\n
              }\n
       \n
              $compiled = $this-&gt;compiler-&gt;getCompiledPath($path);\n
       \n
              // Once we have the path to the compiled file, we will evaluate the paths with\n
              // typical PHP just like any other templates. We also keep a stack of views\n
              // which have been rendered for right exception messages to be generated.\n
              $results = $this-&gt;evaluatePath($compiled, $data);\n
       \n
              array_pop($this-&gt;lastCompiled);\n
       \n
              return $results;\n
          }\n
       \n
          /**\n
           * Handle a view exception.\n
           *\n
           * @param  \Exception  $e\n
           * @param  int  $obLevel\n
           * @return void\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleViewException(Exception $e, $obLevel)\n
          {\n
              $e = new ErrorException($this-&gt;getMessage($e), 0, 1, $e-&gt;getFile(), $e-&gt;getLine(), $e);\n
       \n
              parent::handleViewException($e, $obLevel);</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-12" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2072941294 data-indent-pad="  ">"<span class=sf-dump-str title="99 characters">/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php</span>"\n
      </pre><script>Sfdump("sf-dump-2072941294")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-990796753 data-indent-pad="  "><span class=sf-dump-note>array:6</span> [<samp>\n
        "<span class=sf-dump-key>__env</span>" => <abbr title="Illuminate\View\Factory" class=sf-dump-note>Factory</abbr> {<a class=sf-dump-ref>#118</a>}\n
        "<span class=sf-dump-key>app</span>" => <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a>}\n
        "<span class=sf-dump-key>errors</span>" => <abbr title="Illuminate\Support\ViewErrorBag" class=sf-dump-note>ViewErrorBag</abbr> {<a class=sf-dump-ref>#800</a>}\n
        "<span class=sf-dump-key>thread</span>" => <abbr title="App\Thread" class=sf-dump-note>Thread</abbr> {<a class=sf-dump-ref>#858</a>}\n
        "<span class=sf-dump-key>replies</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref>#938</a>}\n
        "<span class=sf-dump-key>channels</span>" => <abbr title="Illuminate\Database\Eloquent\Collection" class=sf-dump-note>Collection</abbr> {<a class=sf-dump-ref>#928</a>}\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-990796753")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-13">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-13" class="code-block linenums:118">        $this-&gt;factory-&gt;callComposer($this);\n
       \n
              $contents = $this-&gt;getContents();\n
       \n
              // Once we&#039;ve finished rendering the view, we&#039;ll decrement the render count\n
              // so that each sections get flushed out next time a view is created and\n
              // no old sections are staying around in the memory of an environment.\n
              $this-&gt;factory-&gt;decrementRender();\n
       \n
              return $contents;\n
          }\n
       \n
          /**\n
           * Get the evaluated contents of the view.\n
           *\n
           * @return string\n
           */\n
          protected function getContents()\n
          {\n
              return $this-&gt;engine-&gt;get($this-&gt;path, $this-&gt;gatherData());\n
          }\n
       \n
          /**\n
           * Get the data bound to the view instance.\n
           *\n
           * @return array\n
           */\n
          protected function gatherData()\n
          {\n
              $data = array_merge($this-&gt;factory-&gt;getShared(), $this-&gt;data);\n
       \n
              foreach ($data as $key =&gt; $value) {\n
                  if ($value instanceof Renderable) {\n
                      $data[$key] = $value-&gt;render();\n
                  }\n
              }\n
       \n
              return $data;\n
          }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-13" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1290690917 data-indent-pad="  ">"<span class=sf-dump-str title="69 characters">/Users/bobbyborisov/code/forum/resources/views/threads/show.blade.php</span>"\n
      </pre><script>Sfdump("sf-dump-1290690917")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-626350449 data-indent-pad="  "><span class=sf-dump-note>array:6</span> [<samp>\n
        "<span class=sf-dump-key>__env</span>" => <abbr title="Illuminate\View\Factory" class=sf-dump-note>Factory</abbr> {<a class=sf-dump-ref>#118</a>}\n
        "<span class=sf-dump-key>app</span>" => <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a>}\n
        "<span class=sf-dump-key>errors</span>" => <abbr title="Illuminate\Support\ViewErrorBag" class=sf-dump-note>ViewErrorBag</abbr> {<a class=sf-dump-ref>#800</a>}\n
        "<span class=sf-dump-key>thread</span>" => <abbr title="App\Thread" class=sf-dump-note>Thread</abbr> {<a class=sf-dump-ref>#858</a>}\n
        "<span class=sf-dump-key>replies</span>" => <abbr title="Illuminate\Pagination\LengthAwarePaginator" class=sf-dump-note>LengthAwarePaginator</abbr> {<a class=sf-dump-ref>#938</a>}\n
        "<span class=sf-dump-key>channels</span>" => <abbr title="Illuminate\Database\Eloquent\Collection" class=sf-dump-note>Collection</abbr> {<a class=sf-dump-ref>#928</a>}\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-626350449")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-14">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-14" class="code-block linenums:101"> \n
                  throw $e;\n
              }\n
          }\n
       \n
          /**\n
           * Get the contents of the view instance.\n
           *\n
           * @return string\n
           */\n
          protected function renderContents()\n
          {\n
              // We will keep track of the amount of views being rendered so we can flush\n
              // the section after the complete rendering operation is done. This will\n
              // clear out the sections for any separate views that may be rendered.\n
              $this-&gt;factory-&gt;incrementRender();\n
       \n
              $this-&gt;factory-&gt;callComposer($this);\n
       \n
              $contents = $this-&gt;getContents();\n
       \n
              // Once we&#039;ve finished rendering the view, we&#039;ll decrement the render count\n
              // so that each sections get flushed out next time a view is created and\n
              // no old sections are staying around in the memory of an environment.\n
              $this-&gt;factory-&gt;decrementRender();\n
       \n
              return $contents;\n
          }\n
       \n
          /**\n
           * Get the evaluated contents of the view.\n
           *\n
           * @return string\n
           */\n
          protected function getContents()\n
          {\n
              return $this-&gt;engine-&gt;get($this-&gt;path, $this-&gt;gatherData());\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-15">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">View.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-15" class="code-block linenums:66">        $this-&gt;view = $view;\n
              $this-&gt;path = $path;\n
              $this-&gt;engine = $engine;\n
              $this-&gt;factory = $factory;\n
       \n
              $this-&gt;data = $data instanceof Arrayable ? $data-&gt;toArray() : (array) $data;\n
          }\n
       \n
          /**\n
           * Get the string contents of the view.\n
           *\n
           * @param  callable|null  $callback\n
           * @return string\n
           *\n
           * @throws \Throwable\n
           */\n
          public function render(callable $callback = null)\n
          {\n
              try {\n
                  $contents = $this-&gt;renderContents();\n
       \n
                  $response = isset($callback) ? call_user_func($callback, $this, $contents) : null;\n
       \n
                  // Once we have the contents of the view, we will flush the sections if we are\n
                  // done rendering all views so that there is nothing left hanging over when\n
                  // another view gets rendered in the future by the application developer.\n
                  $this-&gt;factory-&gt;flushStateIfDoneRendering();\n
       \n
                  return ! is_null($response) ? $response : $contents;\n
              } catch (Exception $e) {\n
                  $this-&gt;factory-&gt;flushState();\n
       \n
                  throw $e;\n
              } catch (Throwable $e) {\n
                  $this-&gt;factory-&gt;flushState();\n
       \n
                  throw $e;\n
              }\n
          }\n
       </pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-16">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Http</div>/<div class="delimiter">Response.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-16" class="code-block linenums:23">     * @return $this\n
           */\n
          public function setContent($content)\n
          {\n
              $this-&gt;original = $content;\n
       \n
              // If the content is &quot;JSONable&quot; we will set the appropriate header and convert\n
              // the content to JSON. This is useful when returning something like models\n
              // from routes that will be automatically transformed to their JSON form.\n
              if ($this-&gt;shouldBeJson($content)) {\n
                  $this-&gt;header(&#039;Content-Type&#039;, &#039;application/json&#039;);\n
       \n
                  $content = $this-&gt;morphToJson($content);\n
              }\n
       \n
              // If this content implements the &quot;Renderable&quot; interface then we will call the\n
              // render method on the object so we will avoid any &quot;__toString&quot; exceptions\n
              // that might be thrown and have their errors obscured by PHP&#039;s handling.\n
              elseif ($content instanceof Renderable) {\n
                  $content = $content-&gt;render();\n
              }\n
       \n
              parent::setContent($content);\n
       \n
              return $this;\n
          }\n
       \n
          /**\n
           * Determine if the given content should be turned into JSON.\n
           *\n
           * @param  mixed  $content\n
           * @return bool\n
           */\n
          protected function shouldBeJson($content)\n
          {\n
              return $content instanceof Arrayable ||\n
                     $content instanceof Jsonable ||\n
                     $content instanceof ArrayObject ||\n
                     $content instanceof JsonSerializable ||\n
                     is_array($content);</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-17">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">symfony</div>/<div class="delimiter">http-foundation</div>/<div class="delimiter">Response.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-17" class="code-block linenums:181">        504 =&gt; &#039;Gateway Timeout&#039;,\n
              505 =&gt; &#039;HTTP Version Not Supported&#039;,\n
              506 =&gt; &#039;Variant Also Negotiates&#039;,                                     // RFC2295\n
              507 =&gt; &#039;Insufficient Storage&#039;,                                        // RFC4918\n
              508 =&gt; &#039;Loop Detected&#039;,                                               // RFC5842\n
              510 =&gt; &#039;Not Extended&#039;,                                                // RFC2774\n
              511 =&gt; &#039;Network Authentication Required&#039;,                             // RFC6585\n
          );\n
       \n
          /**\n
           * @param mixed $content The response content, see setContent()\n
           * @param int   $status  The response status code\n
           * @param array $headers An array of response headers\n
           *\n
           * @throws \InvalidArgumentException When the HTTP status code is not valid\n
           */\n
          public function __construct($content = &#039;&#039;, $status = 200, $headers = array())\n
          {\n
              $this-&gt;headers = new ResponseHeaderBag($headers);\n
              $this-&gt;setContent($content);\n
              $this-&gt;setStatusCode($status);\n
              $this-&gt;setProtocolVersion(&#039;1.0&#039;);\n
       \n
              /* RFC2616 - 14.18 says all Responses need to have a Date */\n
              if (!$this-&gt;headers-&gt;has(&#039;Date&#039;)) {\n
                  $this-&gt;setDate(\DateTime::createFromFormat(&#039;U&#039;, time()));\n
              }\n
          }\n
       \n
          /**\n
           * Factory method for chainability.\n
           *\n
           * Example:\n
           *\n
           *     return Response::create($body, 200)\n
           *         -&gt;setSharedMaxAge(300);\n
           *\n
           * @param mixed $content The response content, see setContent()\n
           * @param int   $status  The response status code\n
           * @param array $headers An array of response headers</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-17" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-917179200 data-indent-pad="  "><abbr title="Illuminate\View\View" class=sf-dump-note>View</abbr> {<a class=sf-dump-ref>#803</a>}\n
      </pre><script>Sfdump("sf-dump-917179200")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-18">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-18" class="code-block linenums:705">     * @param  mixed  $response\n
           * @return \Illuminate\Http\Response|\Illuminate\Http\JsonResponse\n
           */\n
          public static function toResponse($request, $response)\n
          {\n
              if ($response instanceof Responsable) {\n
                  $response = $response-&gt;toResponse($request);\n
              }\n
       \n
              if ($response instanceof PsrResponseInterface) {\n
                  $response = (new HttpFoundationFactory)-&gt;createResponse($response);\n
              } elseif (! $response instanceof SymfonyResponse &amp;&amp;\n
                         ($response instanceof Arrayable ||\n
                          $response instanceof Jsonable ||\n
                          $response instanceof ArrayObject ||\n
                          $response instanceof JsonSerializable ||\n
                          is_array($response))) {\n
                  $response = new JsonResponse($response);\n
              } elseif (! $response instanceof SymfonyResponse) {\n
                  $response = new Response($response);\n
              }\n
       \n
              if ($response-&gt;getStatusCode() === Response::HTTP_NOT_MODIFIED) {\n
                  $response-&gt;setNotModified();\n
              }\n
       \n
              return $response-&gt;prepare($request);\n
          }\n
       \n
          /**\n
           * Substitute the route bindings onto the route.\n
           *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @return \Illuminate\Routing\Route\n
           */\n
          public function substituteBindings($route)\n
          {\n
              foreach ($route-&gt;parameters() as $key =&gt; $value) {\n
                  if (isset($this-&gt;binders[$key])) {\n
                      $route-&gt;setParameter($key, $this-&gt;performBinding($key, $value, $route));</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-18" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1705576638 data-indent-pad="  "><abbr title="Illuminate\View\View" class=sf-dump-note>View</abbr> {<a class=sf-dump-ref>#803</a>}\n
      </pre><script>Sfdump("sf-dump-1705576638")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-19">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-19" class="code-block linenums:679">     * Sort the given middleware by priority.\n
           *\n
           * @param  \Illuminate\Support\Collection  $middlewares\n
           * @return array\n
           */\n
          protected function sortMiddleware(Collection $middlewares)\n
          {\n
              return (new SortedMiddleware($this-&gt;middlewarePriority, $middlewares))-&gt;all();\n
          }\n
       \n
          /**\n
           * Create a response instance from the given value.\n
           *\n
           * @param  \Symfony\Component\HttpFoundation\Request  $request\n
           * @param  mixed  $response\n
           * @return \Illuminate\Http\Response|\Illuminate\Http\JsonResponse\n
           */\n
          public function prepareResponse($request, $response)\n
          {\n
              return static::toResponse($request, $response);\n
          }\n
       \n
          /**\n
           * Static version of prepareResponse.\n
           *\n
           * @param  \Symfony\Component\HttpFoundation\Request  $request\n
           * @param  mixed  $response\n
           * @return \Illuminate\Http\Response|\Illuminate\Http\JsonResponse\n
           */\n
          public static function toResponse($request, $response)\n
          {\n
              if ($response instanceof Responsable) {\n
                  $response = $response-&gt;toResponse($request);\n
              }\n
       \n
              if ($response instanceof PsrResponseInterface) {\n
                  $response = (new HttpFoundationFactory)-&gt;createResponse($response);\n
              } elseif (! $response instanceof SymfonyResponse &amp;&amp;\n
                         ($response instanceof Arrayable ||\n
                          $response instanceof Jsonable ||</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-19" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1767809018 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1767809018-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1767809018-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1767809018")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-874415358 data-indent-pad="  "><abbr title="Illuminate\View\View" class=sf-dump-note>View</abbr> {<a class=sf-dump-ref>#803</a>}\n
      </pre><script>Sfdump("sf-dump-874415358")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-20">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-20" class="code-block linenums:639">    /**\n
           * Run the given route within a Stack &quot;onion&quot; instance.\n
           *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return mixed\n
           */\n
          protected function runRouteWithinStack(Route $route, Request $request)\n
          {\n
              $shouldSkipMiddleware = $this-&gt;container-&gt;bound(&#039;middleware.disable&#039;) &amp;&amp;\n
                                      $this-&gt;container-&gt;make(&#039;middleware.disable&#039;) === true;\n
       \n
              $middleware = $shouldSkipMiddleware ? [] : $this-&gt;gatherRouteMiddleware($route);\n
       \n
              return (new Pipeline($this-&gt;container))\n
                              -&gt;send($request)\n
                              -&gt;through($middleware)\n
                              -&gt;then(function ($request) use ($route) {\n
                                  return $this-&gt;prepareResponse(\n
                                      $request, $route-&gt;run()\n
                                  );\n
                              });\n
          }\n
       \n
          /**\n
           * Gather the middleware for the given route with resolved class names.\n
           *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @return array\n
           */\n
          public function gatherRouteMiddleware(Route $route)\n
          {\n
              $middleware = collect($route-&gt;gatherMiddleware())-&gt;map(function ($name) {\n
                  return (array) MiddlewareNameResolver::resolve($name, $this-&gt;middleware, $this-&gt;middlewareGroups);\n
              })-&gt;flatten();\n
       \n
              return $this-&gt;sortMiddleware($middleware);\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-20" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1724771355 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1724771355-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1724771355-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1724771355")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-2013814286 data-indent-pad="  "><abbr title="Illuminate\View\View" class=sf-dump-note>View</abbr> {<a class=sf-dump-ref>#803</a>}\n
      </pre><script>Sfdump("sf-dump-2013814286")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-21">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-21" class="code-block linenums:11">use Symfony\Component\Debug\Exception\FatalThrowableError;\n
       \n
      /**\n
       * This extended pipeline catches any exceptions that occur during each slice.\n
       *\n
       * The exceptions are converted to HTTP responses for proper middleware handling.\n
       */\n
      class Pipeline extends BasePipeline\n
      {\n
          /**\n
           * Get the final piece of the Closure onion.\n
           *\n
           * @param  \Closure  $destination\n
           * @return \Closure\n
           */\n
          protected function prepareDestination(Closure $destination)\n
          {\n
              return function ($passable) use ($destination) {\n
                  try {\n
                      return $destination($passable);\n
                  } catch (Exception $e) {\n
                      return $this-&gt;handleException($passable, $e);\n
                  } catch (Throwable $e) {\n
                      return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-21" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-902180903 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-902180903-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-902180903-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-902180903")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-22">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">SubstituteBindings.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-22" class="code-block linenums:22">     */\n
          public function __construct(Registrar $router)\n
          {\n
              $this-&gt;router = $router;\n
          }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              $this-&gt;router-&gt;substituteBindings($route = $request-&gt;route());\n
       \n
              $this-&gt;router-&gt;substituteImplicitBindings($route);\n
       \n
              return $next($request);\n
          }\n
      }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-22" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1985795719 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1985795719-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1985795719-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1985795719")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-23">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-23" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-23" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1521833975 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1521833975-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1521833975-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1521833975")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-636434563 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#771</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$destination</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#765</a> &hellip;}\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-636434563")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-24">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-24" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-24" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-663787748 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-663787748-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-663787748-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-663787748")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-25">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">VerifyCsrfToken.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-25" class="code-block linenums:48">    }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           *\n
           * @throws \Illuminate\Session\TokenMismatchException\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              if (\n
                  $this-&gt;isReading($request) ||\n
                  $this-&gt;runningUnitTests() ||\n
                  $this-&gt;inExceptArray($request) ||\n
                  $this-&gt;tokensMatch($request)\n
              ) {\n
                  return $this-&gt;addCookieToResponse($request, $next($request));\n
              }\n
       \n
              throw new TokenMismatchException;\n
          }\n
       \n
          /**\n
           * Determine if the HTTP request uses a ‘read’ verb.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return bool\n
           */\n
          protected function isReading($request)\n
          {\n
              return in_array($request-&gt;method(), [&#039;HEAD&#039;, &#039;GET&#039;, &#039;OPTIONS&#039;]);\n
          }\n
       \n
          /**\n
           * Determine if the application is running unit tests.\n
           *\n
           * @return bool</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-25" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-565519881 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-565519881-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-565519881-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-565519881")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-26">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-26" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-26" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1915014160 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1915014160-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1915014160-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1915014160")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1869609746 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#781</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#771</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="48 characters">Illuminate\Routing\Middleware\SubstituteBindings</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1869609746")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-27">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-27" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-27" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1644477479 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1644477479-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1644477479-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1644477479")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-28">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">View</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">ShareErrorsFromSession.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-28" class="code-block linenums:30">     * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              // If the current session has an &quot;errors&quot; variable bound to it, we will share\n
              // its value with all view instances so the views can easily access errors\n
              // without having to bind. An empty bag is set when there aren&#039;t errors.\n
              $this-&gt;view-&gt;share(\n
                  &#039;errors&#039;, $request-&gt;session()-&gt;get(&#039;errors&#039;) ?: new ViewErrorBag\n
              );\n
       \n
              // Putting the errors in the view for every view allows the developer to just\n
              // assume that some errors are always available, which is convenient since\n
              // they don&#039;t have to continually run checks for the presence of errors.\n
       \n
              return $next($request);\n
          }\n
      }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-28" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-669907661 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-669907661-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-669907661-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-669907661")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-29">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-29" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-29" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1619837080 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1619837080-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1619837080-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1619837080")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1093712131 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#782</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#781</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="35 characters">App\Http\Middleware\VerifyCsrfToken</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1093712131")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-30">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-30" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-30" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-384075601 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-384075601-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-384075601-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-384075601")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-31">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Session</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">StartSession.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-31" class="code-block linenums:44">     * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              $this-&gt;sessionHandled = true;\n
       \n
              // If a session driver has been configured, we will need to start the session here\n
              // so that the data is ready for an application. Note that the Laravel sessions\n
              // do not make use of PHP &quot;native&quot; sessions in any way since they are crappy.\n
              if ($this-&gt;sessionConfigured()) {\n
                  $request-&gt;setLaravelSession(\n
                      $session = $this-&gt;startSession($request)\n
                  );\n
       \n
                  $this-&gt;collectGarbage($session);\n
              }\n
       \n
              $response = $next($request);\n
       \n
              // Again, if the session has been configured we will need to close out the session\n
              // so that the attributes may be persisted to some storage medium. We will also\n
              // add the session identifier cookie to the application response headers now.\n
              if ($this-&gt;sessionConfigured()) {\n
                  $this-&gt;storeCurrentUrl($request, $session);\n
       \n
                  $this-&gt;addCookieToResponse($response, $session);\n
              }\n
       \n
              return $response;\n
          }\n
       \n
          /**\n
           * Perform any final actions for the request lifecycle.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Symfony\Component\HttpFoundation\Response  $response\n
           * @return void\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-31" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1168353394 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1168353394-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1168353394-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1168353394")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-32">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-32" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-32" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1532661793 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1532661793-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1532661793-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1532661793")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-209206497 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#783</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#782</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="49 characters">Illuminate\View\Middleware\ShareErrorsFromSession</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-209206497")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-33">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-33" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-33" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-317301924 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-317301924-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-317301924-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-317301924")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-34">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Cookie</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">AddQueuedCookiesToResponse.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-34" class="code-block linenums:18">     * Create a new CookieQueue instance.\n
           *\n
           * @param  \Illuminate\Contracts\Cookie\QueueingFactory  $cookies\n
           * @return void\n
           */\n
          public function __construct(CookieJar $cookies)\n
          {\n
              $this-&gt;cookies = $cookies;\n
          }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              $response = $next($request);\n
       \n
              foreach ($this-&gt;cookies-&gt;getQueuedCookies() as $cookie) {\n
                  $response-&gt;headers-&gt;setCookie($cookie);\n
              }\n
       \n
              return $response;\n
          }\n
      }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-34" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2088600465 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2088600465-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2088600465-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-2088600465")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-35">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-35" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-35" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1333975201 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1333975201-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1333975201-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1333975201")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1576124524 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#784</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#783</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="42 characters">Illuminate\Session\Middleware\StartSession</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1576124524")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-36">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-36" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-36" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1764288980 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1764288980-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1764288980-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1764288980")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-37">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Cookie</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">EncryptCookies.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-37" class="code-block linenums:40">     * Disable encryption for the given cookie name(s).\n
           *\n
           * @param  string|array  $cookieName\n
           * @return void\n
           */\n
          public function disableFor($cookieName)\n
          {\n
              $this-&gt;except = array_merge($this-&gt;except, (array) $cookieName);\n
          }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              return $this-&gt;encrypt($next($this-&gt;decrypt($request)));\n
          }\n
       \n
          /**\n
           * Decrypt the cookies on the request.\n
           *\n
           * @param  \Symfony\Component\HttpFoundation\Request  $request\n
           * @return \Symfony\Component\HttpFoundation\Request\n
           */\n
          protected function decrypt(Request $request)\n
          {\n
              foreach ($request-&gt;cookies as $key =&gt; $c) {\n
                  if ($this-&gt;isDisabled($key)) {\n
                      continue;\n
                  }\n
       \n
                  try {\n
                      $request-&gt;cookies-&gt;set($key, $this-&gt;decryptCookie($c));\n
                  } catch (DecryptException $e) {\n
                      $request-&gt;cookies-&gt;set($key, null);\n
                  }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-37" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-175443403 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-175443403-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-175443403-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-175443403")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-38">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-38" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-38" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1843443976 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1843443976-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1843443976-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1843443976")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-173331336 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#785</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#743</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#784</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="55 characters">Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-173331336")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-39">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-39" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-39" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1121182344 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1121182344-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1121182344-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1121182344")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-40">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-40" class="code-block linenums:83">    public function via($method)\n
          {\n
              $this-&gt;method = $method;\n
       \n
              return $this;\n
          }\n
       \n
          /**\n
           * Run the pipeline with a final destination callback.\n
           *\n
           * @param  \Closure  $destination\n
           * @return mixed\n
           */\n
          public function then(Closure $destination)\n
          {\n
              $pipeline = array_reduce(\n
                  array_reverse($this-&gt;pipes), $this-&gt;carry(), $this-&gt;prepareDestination($destination)\n
              );\n
       \n
              return $pipeline($this-&gt;passable);\n
          }\n
       \n
          /**\n
           * Get the final piece of the Closure onion.\n
           *\n
           * @param  \Closure  $destination\n
           * @return \Closure\n
           */\n
          protected function prepareDestination(Closure $destination)\n
          {\n
              return function ($passable) use ($destination) {\n
                  return $destination($passable);\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-40" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2120436011 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2120436011-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2120436011-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-2120436011")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-41">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-41" class="code-block linenums:641">     *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return mixed\n
           */\n
          protected function runRouteWithinStack(Route $route, Request $request)\n
          {\n
              $shouldSkipMiddleware = $this-&gt;container-&gt;bound(&#039;middleware.disable&#039;) &amp;&amp;\n
                                      $this-&gt;container-&gt;make(&#039;middleware.disable&#039;) === true;\n
       \n
              $middleware = $shouldSkipMiddleware ? [] : $this-&gt;gatherRouteMiddleware($route);\n
       \n
              return (new Pipeline($this-&gt;container))\n
                              -&gt;send($request)\n
                              -&gt;through($middleware)\n
                              -&gt;then(function ($request) use ($route) {\n
                                  return $this-&gt;prepareResponse(\n
                                      $request, $route-&gt;run()\n
                                  );\n
                              });\n
          }\n
       \n
          /**\n
           * Gather the middleware for the given route with resolved class names.\n
           *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @return array\n
           */\n
          public function gatherRouteMiddleware(Route $route)\n
          {\n
              $middleware = collect($route-&gt;gatherMiddleware())-&gt;map(function ($name) {\n
                  return (array) MiddlewareNameResolver::resolve($name, $this-&gt;middleware, $this-&gt;middlewareGroups);\n
              })-&gt;flatten();\n
       \n
              return $this-&gt;sortMiddleware($middleware);\n
          }\n
       \n
          /**\n
           * Sort the given middleware by priority.\n
           *</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-41" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1663568909 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#765</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$request</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1663568909")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-42">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-42" class="code-block linenums:616">        return $route;\n
          }\n
       \n
          /**\n
           * Return the response for the given route.\n
           *\n
           * @param  Route  $route\n
           * @param  Request  $request\n
           * @return mixed\n
           */\n
          protected function runRoute(Request $request, Route $route)\n
          {\n
              $request-&gt;setRouteResolver(function () use ($route) {\n
                  return $route;\n
              });\n
       \n
              $this-&gt;events-&gt;dispatch(new Events\RouteMatched($route, $request));\n
       \n
              return $this-&gt;prepareResponse($request,\n
                  $this-&gt;runRouteWithinStack($route, $request)\n
              );\n
          }\n
       \n
          /**\n
           * Run the given route within a Stack &quot;onion&quot; instance.\n
           *\n
           * @param  \Illuminate\Routing\Route  $route\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return mixed\n
           */\n
          protected function runRouteWithinStack(Route $route, Request $request)\n
          {\n
              $shouldSkipMiddleware = $this-&gt;container-&gt;bound(&#039;middleware.disable&#039;) &amp;&amp;\n
                                      $this-&gt;container-&gt;make(&#039;middleware.disable&#039;) === true;\n
       \n
              $middleware = $shouldSkipMiddleware ? [] : $this-&gt;gatherRouteMiddleware($route);\n
       \n
              return (new Pipeline($this-&gt;container))\n
                              -&gt;send($request)\n
                              -&gt;through($middleware)</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-42" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1157271241 data-indent-pad="  "><abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a>}\n
      </pre><script>Sfdump("sf-dump-1157271241")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1446617465 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1446617465-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1446617465-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1446617465")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-43">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-43" class="code-block linenums:582">     *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Http\Response|\Illuminate\Http\JsonResponse\n
           */\n
          public function dispatch(Request $request)\n
          {\n
              $this-&gt;currentRequest = $request;\n
       \n
              return $this-&gt;dispatchToRoute($request);\n
          }\n
       \n
          /**\n
           * Dispatch the request to a route and return the response.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return mixed\n
           */\n
          public function dispatchToRoute(Request $request)\n
          {\n
              return $this-&gt;runRoute($request, $this-&gt;findRoute($request));\n
          }\n
       \n
          /**\n
           * Find the route matching a given request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Routing\Route\n
           */\n
          protected function findRoute($request)\n
          {\n
              $this-&gt;current = $route = $this-&gt;routes-&gt;match($request);\n
       \n
              $this-&gt;container-&gt;instance(Route::class, $route);\n
       \n
              return $route;\n
          }\n
       \n
          /**\n
           * Return the response for the given route.\n
           *</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-43" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-15025551 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-15025551-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-15025551-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-15025551")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-2013468099 data-indent-pad="  "><abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a>}\n
      </pre><script>Sfdump("sf-dump-2013468099")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-44">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Router.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-44" class="code-block linenums:571">     * @return mixed\n
           */\n
          public function respondWithRoute($name)\n
          {\n
              $route = tap($this-&gt;routes-&gt;getByName($name))-&gt;bind($this-&gt;currentRequest);\n
       \n
              return $this-&gt;runRoute($this-&gt;currentRequest, $route);\n
          }\n
       \n
          /**\n
           * Dispatch the request to the application.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Http\Response|\Illuminate\Http\JsonResponse\n
           */\n
          public function dispatch(Request $request)\n
          {\n
              $this-&gt;currentRequest = $request;\n
       \n
              return $this-&gt;dispatchToRoute($request);\n
          }\n
       \n
          /**\n
           * Dispatch the request to a route and return the response.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return mixed\n
           */\n
          public function dispatchToRoute(Request $request)\n
          {\n
              return $this-&gt;runRoute($request, $this-&gt;findRoute($request));\n
          }\n
       \n
          /**\n
           * Find the route matching a given request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Routing\Route\n
           */\n
          protected function findRoute($request)</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-44" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-152396809 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-152396809-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-152396809-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-152396809")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-45">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-45" class="code-block linenums:157">     * @return void\n
           */\n
          public function bootstrap()\n
          {\n
              if (! $this-&gt;app-&gt;hasBeenBootstrapped()) {\n
                  $this-&gt;app-&gt;bootstrapWith($this-&gt;bootstrappers());\n
              }\n
          }\n
       \n
          /**\n
           * Get the route dispatcher callback.\n
           *\n
           * @return \Closure\n
           */\n
          protected function dispatchToRouter()\n
          {\n
              return function ($request) {\n
                  $this-&gt;app-&gt;instance(&#039;request&#039;, $request);\n
       \n
                  return $this-&gt;router-&gt;dispatch($request);\n
              };\n
          }\n
       \n
          /**\n
           * Call the terminate method on any terminable middleware.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Illuminate\Http\Response  $response\n
           * @return void\n
           */\n
          public function terminate($request, $response)\n
          {\n
              $this-&gt;terminateMiddleware($request, $response);\n
       \n
              $this-&gt;app-&gt;terminate();\n
          }\n
       \n
          /**\n
           * Call the terminate method on any terminable middleware.\n
           *</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-45" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-924708914 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-924708914-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-924708914-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-924708914")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-46">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-46" class="code-block linenums:11">use Symfony\Component\Debug\Exception\FatalThrowableError;\n
       \n
      /**\n
       * This extended pipeline catches any exceptions that occur during each slice.\n
       *\n
       * The exceptions are converted to HTTP responses for proper middleware handling.\n
       */\n
      class Pipeline extends BasePipeline\n
      {\n
          /**\n
           * Get the final piece of the Closure onion.\n
           *\n
           * @param  \Closure  $destination\n
           * @return \Closure\n
           */\n
          protected function prepareDestination(Closure $destination)\n
          {\n
              return function ($passable) use ($destination) {\n
                  try {\n
                      return $destination($passable);\n
                  } catch (Exception $e) {\n
                      return $this-&gt;handleException($passable, $e);\n
                  } catch (Throwable $e) {\n
                      return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-46" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1851312527 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1851312527-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1851312527-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1851312527")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-47">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">barryvdh</div>/<div class="delimiter">laravel-debugbar</div>/<div class="delimiter">src</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">InjectDebugbar.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-47" class="code-block linenums:39">     * @param  LaravelDebugbar $debugbar\n
           */\n
          public function __construct(Container $container, LaravelDebugbar $debugbar)\n
          {\n
              $this-&gt;container = $container;\n
              $this-&gt;debugbar = $debugbar;\n
              $this-&gt;except = config(&#039;debugbar.except&#039;) ?: [];\n
          }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  Request  $request\n
           * @param  Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              if (!$this-&gt;debugbar-&gt;isEnabled() || $this-&gt;inExceptArray($request)) {\n
                  return $next($request);\n
              }\n
       \n
              $this-&gt;debugbar-&gt;boot();\n
       \n
              try {\n
                  /** @var \Illuminate\Http\Response $response */\n
                  $response = $next($request);\n
              } catch (Exception $e) {\n
                  $response = $this-&gt;handleException($request, $e);\n
              } catch (Error $error) {\n
                  $e = new FatalThrowableError($error);\n
                  $response = $this-&gt;handleException($request, $e);\n
              }\n
       \n
              // Modify the response to add the Debugbar\n
              $this-&gt;debugbar-&gt;modifyResponse($request, $response);\n
       \n
              return $response;\n
       \n
          }</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-47" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1179395288 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1179395288-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1179395288-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1179395288")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-48">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-48" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-48" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2008538283 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2008538283-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-2008538283-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-2008538283")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1981425396 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#49</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$destination</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#53</a> &hellip;}\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1981425396")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-49">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-49" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-49" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-592992278 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-592992278-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-592992278-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-592992278")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-50">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">fideloper</div>/<div class="delimiter">proxy</div>/<div class="delimiter">src</div>/<div class="delimiter">TrustProxies.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-50" class="code-block linenums:37">    {\n
              $this-&gt;config = $config;\n
          }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param \Illuminate\Http\Request $request\n
           * @param \Closure                 $next\n
           *\n
           * @throws \Symfony\Component\HttpKernel\Exception\HttpException\n
           *\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              $this-&gt;setTrustedProxyHeaderNames($request);\n
              $this-&gt;setTrustedProxyIpAddresses($request);\n
       \n
              return $next($request);\n
          }\n
       \n
          /**\n
           * Sets the trusted proxies on the request to the value of trustedproxy.proxies\n
           *\n
           * @param \Illuminate\Http\Request $request\n
           */\n
          protected function setTrustedProxyIpAddresses($request)\n
          {\n
              $trustedIps = $this-&gt;proxies ?: $this-&gt;config-&gt;get(&#039;trustedproxy.proxies&#039;);\n
       \n
              // We only trust specific IP addresses\n
              if (is_array($trustedIps)) {\n
                  return $this-&gt;setTrustedProxyIpAddressesToSpecificIps($request, $trustedIps);\n
              }\n
       \n
              // We trust any IP address that calls us, but not proxies further\n
              // up the forwarding chain.\n
              // TODO: Determine if this should only trust the first IP address\n
              //       Currently it trusts the entire chain (array of IPs),</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-50" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1668192410 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1668192410-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1668192410-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1668192410")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-51">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-51" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-51" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-914237719 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-914237719-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-914237719-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-914237719")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1748878436 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#51</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#49</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="43 characters">Barryvdh\Debugbar\Middleware\InjectDebugbar</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1748878436")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-52">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-52" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-52" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1344746976 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1344746976-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1344746976-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1344746976")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-53">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">TransformsRequest.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-53" class="code-block linenums:11">     * The additional attributes passed to the middleware.\n
           *\n
           * @var array\n
           */\n
          protected $attributes = [];\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next, ...$attributes)\n
          {\n
              $this-&gt;attributes = $attributes;\n
       \n
              $this-&gt;clean($request);\n
       \n
              return $next($request);\n
          }\n
       \n
          /**\n
           * Clean the request&#039;s data.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return void\n
           */\n
          protected function clean($request)\n
          {\n
              $this-&gt;cleanParameterBag($request-&gt;query);\n
       \n
              if ($request-&gt;isJson()) {\n
                  $this-&gt;cleanParameterBag($request-&gt;json());\n
              } else {\n
                  $this-&gt;cleanParameterBag($request-&gt;request);\n
              }\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-53" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-752408576 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-752408576-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-752408576-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-752408576")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-54">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-54" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-54" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1106997150 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1106997150-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1106997150-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1106997150")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1975352626 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#52</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#51</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="32 characters">App\Http\Middleware\TrustProxies</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1975352626")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-55">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-55" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-55" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-659618384 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-659618384-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-659618384-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-659618384")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-56">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">TransformsRequest.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-56" class="code-block linenums:11">     * The additional attributes passed to the middleware.\n
           *\n
           * @var array\n
           */\n
          protected $attributes = [];\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           */\n
          public function handle($request, Closure $next, ...$attributes)\n
          {\n
              $this-&gt;attributes = $attributes;\n
       \n
              $this-&gt;clean($request);\n
       \n
              return $next($request);\n
          }\n
       \n
          /**\n
           * Clean the request&#039;s data.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return void\n
           */\n
          protected function clean($request)\n
          {\n
              $this-&gt;cleanParameterBag($request-&gt;query);\n
       \n
              if ($request-&gt;isJson()) {\n
                  $this-&gt;cleanParameterBag($request-&gt;json());\n
              } else {\n
                  $this-&gt;cleanParameterBag($request-&gt;request);\n
              }\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-56" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1835560850 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1835560850-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1835560850-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1835560850")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-57">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-57" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-57" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1435933971 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1435933971-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1435933971-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1435933971")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-979566198 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#54</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#52</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="63 characters">Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-979566198")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-58">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-58" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-58" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-858071660 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-858071660-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-858071660-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-858071660")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-59">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">ValidatePostSize.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-59" class="code-block linenums:8">class ValidatePostSize\n
      {\n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           *\n
           * @throws \Illuminate\Http\Exceptions\PostTooLargeException\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              $max = $this-&gt;getPostMaxSize();\n
       \n
              if ($max &gt; 0 &amp;&amp; $request-&gt;server(&#039;CONTENT_LENGTH&#039;) &gt; $max) {\n
                  throw new PostTooLargeException;\n
              }\n
       \n
              return $next($request);\n
          }\n
       \n
          /**\n
           * Determine the server &#039;post_max_size&#039; as bytes.\n
           *\n
           * @return int\n
           */\n
          protected function getPostMaxSize()\n
          {\n
              if (is_numeric($postMaxSize = ini_get(&#039;post_max_size&#039;))) {\n
                  return (int) $postMaxSize;\n
              }\n
       \n
              $metric = strtoupper(substr($postMaxSize, -1));\n
              $postMaxSize = (int) $postMaxSize;\n
       \n
              switch ($metric) {\n
                  case &#039;K&#039;:\n
                      return $postMaxSize * 1024;\n
                  case &#039;M&#039;:</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-59" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1659082786 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1659082786-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1659082786-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1659082786")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-60">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-60" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-60" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1140267334 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1140267334-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1140267334-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1140267334")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1363224412 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#48</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#54</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="31 characters">App\Http\Middleware\TrimStrings</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1363224412")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-61">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-61" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-61" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-616288143 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-616288143-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-616288143-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-616288143")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-62">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Middleware</div>/<div class="delimiter">CheckForMaintenanceMode.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-62" class="code-block linenums:27">    }\n
       \n
          /**\n
           * Handle an incoming request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @param  \Closure  $next\n
           * @return mixed\n
           *\n
           * @throws \Symfony\Component\HttpKernel\Exception\HttpException\n
           */\n
          public function handle($request, Closure $next)\n
          {\n
              if ($this-&gt;app-&gt;isDownForMaintenance()) {\n
                  $data = json_decode(file_get_contents($this-&gt;app-&gt;storagePath().&#039;/framework/down&#039;), true);\n
       \n
                  throw new MaintenanceModeException($data[&#039;time&#039;], $data[&#039;retry&#039;], $data[&#039;message&#039;]);\n
              }\n
       \n
              return $next($request);\n
          }\n
      }\n
       </pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-62" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1868740898 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1868740898-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1868740898-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1868740898")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-63">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-63" class="code-block linenums:130">                    // the appropriate method and arguments, returning the results back out.\n
                          return $pipe($passable, $stack);\n
                      } elseif (! is_object($pipe)) {\n
                          list($name, $parameters) = $this-&gt;parsePipeString($pipe);\n
       \n
                          // If the pipe is a string we will parse the string and resolve the class out\n
                          // of the dependency injection container. We can then build a callable and\n
                          // execute the pipe function giving in the parameters that are required.\n
                          $pipe = $this-&gt;getContainer()-&gt;make($name);\n
       \n
                          $parameters = array_merge([$passable, $stack], $parameters);\n
                      } else {\n
                          // If the pipe is already an object we&#039;ll just make a callable and pass it to\n
                          // the pipe as-is. There is no need to do any extra parsing and formatting\n
                          // since the object we&#039;re given was already a fully instantiated object.\n
                          $parameters = [$passable, $stack];\n
                      }\n
       \n
                      return method_exists($pipe, $this-&gt;method)\n
                                      ? $pipe-&gt;{$this-&gt;method}(...$parameters)\n
                                      : $pipe(...$parameters);\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Parse full pipe string to get name and parameters.\n
           *\n
           * @param  string $pipe\n
           * @return array\n
           */\n
          protected function parsePipeString($pipe)\n
          {\n
              list($name, $parameters) = array_pad(explode(&#039;:&#039;, $pipe, 2), 2, []);\n
       \n
              if (is_string($parameters)) {\n
                  $parameters = explode(&#039;,&#039;, $parameters);\n
              }\n
       \n
              return [$name, $parameters];</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-63" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-333596502 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-333596502-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-333596502-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-333596502")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1080845807 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#725</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Pipeline\n
      27 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Pipeline</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Pipeline" class=sf-dump-note>Pipeline</abbr> {<a class=sf-dump-ref>#56</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$passable</span>: {}\n
        </samp>}\n
        <span class=sf-dump-meta>use</span>: {<samp>\n
          <span class=sf-dump-meta>$stack</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#48</a> &hellip;}\n
          <span class=sf-dump-meta>$pipe</span>: "<span class=sf-dump-str title="54 characters">Illuminate\Foundation\Http\Middleware\ValidatePostSize</span>"\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1080845807")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-64">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Routing</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-64" class="code-block linenums:34">                return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                  }\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */\n
          protected function carry()\n
          {\n
              return function ($stack, $pipe) {\n
                  return function ($passable) use ($stack, $pipe) {\n
                      try {\n
                          $slice = parent::carry();\n
       \n
                          $callable = $slice($stack, $pipe);\n
       \n
                          return $callable($passable);\n
                      } catch (Exception $e) {\n
                          return $this-&gt;handleException($passable, $e);\n
                      } catch (Throwable $e) {\n
                          return $this-&gt;handleException($passable, new FatalThrowableError($e));\n
                      }\n
                  };\n
              };\n
          }\n
       \n
          /**\n
           * Handle the given exception.\n
           *\n
           * @param  mixed  $passable\n
           * @param  \Exception  $e\n
           * @return mixed\n
           *\n
           * @throws \Exception\n
           */\n
          protected function handleException($passable, Exception $e)\n
          {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-64" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1266031918 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1266031918-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1266031918-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1266031918")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-65">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Pipeline</div>/<div class="delimiter">Pipeline.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-65" class="code-block linenums:83">    public function via($method)\n
          {\n
              $this-&gt;method = $method;\n
       \n
              return $this;\n
          }\n
       \n
          /**\n
           * Run the pipeline with a final destination callback.\n
           *\n
           * @param  \Closure  $destination\n
           * @return mixed\n
           */\n
          public function then(Closure $destination)\n
          {\n
              $pipeline = array_reduce(\n
                  array_reverse($this-&gt;pipes), $this-&gt;carry(), $this-&gt;prepareDestination($destination)\n
              );\n
       \n
              return $pipeline($this-&gt;passable);\n
          }\n
       \n
          /**\n
           * Get the final piece of the Closure onion.\n
           *\n
           * @param  \Closure  $destination\n
           * @return \Closure\n
           */\n
          protected function prepareDestination(Closure $destination)\n
          {\n
              return function ($passable) use ($destination) {\n
                  return $destination($passable);\n
              };\n
          }\n
       \n
          /**\n
           * Get a Closure that represents a slice of the application onion.\n
           *\n
           * @return \Closure\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-65" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1394104865 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1394104865-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-1394104865-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-1394104865")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-66">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-66" class="code-block linenums:132">    }\n
       \n
          /**\n
           * Send the given request through the middleware / router.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Http\Response\n
           */\n
          protected function sendRequestThroughRouter($request)\n
          {\n
              $this-&gt;app-&gt;instance(&#039;request&#039;, $request);\n
       \n
              Facade::clearResolvedInstance(&#039;request&#039;);\n
       \n
              $this-&gt;bootstrap();\n
       \n
              return (new Pipeline($this-&gt;app))\n
                          -&gt;send($request)\n
                          -&gt;through($this-&gt;app-&gt;shouldSkipMiddleware() ? [] : $this-&gt;middleware)\n
                          -&gt;then($this-&gt;dispatchToRouter());\n
          }\n
       \n
          /**\n
           * Bootstrap the application for HTTP requests.\n
           *\n
           * @return void\n
           */\n
          public function bootstrap()\n
          {\n
              if (! $this-&gt;app-&gt;hasBeenBootstrapped()) {\n
                  $this-&gt;app-&gt;bootstrapWith($this-&gt;bootstrappers());\n
              }\n
          }\n
       \n
          /**\n
           * Get the route dispatcher callback.\n
           *\n
           * @return \Closure\n
           */\n
          protected function dispatchToRouter()</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-66" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-604865354 data-indent-pad="  "><span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#53</a><samp>\n
        <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Foundation\Http\Kernel\n
      33 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Foundation\Http</span><span class=sf-dump-ellipsis>\</span>Kernel</span>"\n
        <span class=sf-dump-meta>this</span>: <abbr title="App\Http\Kernel" class=sf-dump-note>Kernel</abbr> {<a class=sf-dump-ref>#129</a> &hellip;}\n
        <span class=sf-dump-meta>parameters</span>: {<samp>\n
          <span class=sf-dump-meta>$request</span>: {}\n
        </samp>}\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-604865354")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-67">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Http</div>/<div class="delimiter">Kernel.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-67" class="code-block linenums:97">            $router-&gt;middlewareGroup($key, $middleware);\n
              }\n
       \n
              foreach ($this-&gt;routeMiddleware as $key =&gt; $middleware) {\n
                  $router-&gt;aliasMiddleware($key, $middleware);\n
              }\n
          }\n
       \n
          /**\n
           * Handle an incoming HTTP request.\n
           *\n
           * @param  \Illuminate\Http\Request  $request\n
           * @return \Illuminate\Http\Response\n
           */\n
          public function handle($request)\n
          {\n
              try {\n
                  $request-&gt;enableHttpMethodParameterOverride();\n
       \n
                  $response = $this-&gt;sendRequestThroughRouter($request);\n
              } catch (Exception $e) {\n
                  $this-&gt;reportException($e);\n
       \n
                  $response = $this-&gt;renderException($request, $e);\n
              } catch (Throwable $e) {\n
                  $this-&gt;reportException($e = new FatalThrowableError($e));\n
       \n
                  $response = $this-&gt;renderException($request, $e);\n
              }\n
       \n
              $this-&gt;app[&#039;events&#039;]-&gt;dispatch(\n
                  new Events\RequestHandled($request, $response)\n
              );\n
       \n
              return $response;\n
          }\n
       \n
          /**\n
           * Send the given request through the middleware / router.\n
           *</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-67" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-127981804 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-127981804-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-127981804-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-127981804")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-68">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Testing</div>/<div class="delimiter">Concerns</div>/<div class="delimiter">MakesHttpRequests.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-68" class="code-block linenums:305">     * @param  array  $parameters\n
           * @param  array  $cookies\n
           * @param  array  $files\n
           * @param  array  $server\n
           * @param  string  $content\n
           * @return \Illuminate\Foundation\Testing\TestResponse\n
           */\n
          public function call($method, $uri, $parameters = [], $cookies = [], $files = [], $server = [], $content = null)\n
          {\n
              $kernel = $this-&gt;app-&gt;make(HttpKernel::class);\n
       \n
              $files = array_merge($files, $this-&gt;extractFilesFromDataArray($parameters));\n
       \n
              $symfonyRequest = SymfonyRequest::create(\n
                  $this-&gt;prepareUrlForRequest($uri), $method, $parameters,\n
                  $cookies, $files, array_replace($this-&gt;serverVariables, $server), $content\n
              );\n
       \n
              $response = $kernel-&gt;handle(\n
                  $request = Request::createFromBase($symfonyRequest)\n
              );\n
       \n
              if ($this-&gt;followRedirects) {\n
                  $response = $this-&gt;followRedirects($response);\n
              }\n
       \n
              $kernel-&gt;terminate($request, $response);\n
       \n
              return $this-&gt;createTestResponse($response);\n
          }\n
       \n
          /**\n
           * Turn the given URI into a fully qualified URL.\n
           *\n
           * @param  string  $uri\n
           * @return string\n
           */\n
          protected function prepareUrlForRequest($uri)\n
          {\n
              if (Str::startsWith($uri, &#039;/&#039;)) {</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-68" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-276446831 data-indent-pad="  "><abbr title="Illuminate\Http\Request" class=sf-dump-note>Request</abbr> {<a class=sf-dump-ref>#742</a><samp>\n
        #<span class=sf-dump-protected title="Protected property">json</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">convertedFiles</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">userResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#763</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Auth\AuthServiceProvider\n
      35 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Auth</span><span class=sf-dump-ellipsis>\</span>AuthServiceProvider</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Auth\AuthServiceProvider" class=sf-dump-note>AuthServiceProvider</abbr> {<a class=sf-dump-ref>#57</a> &hellip;}\n
          <span class=sf-dump-meta>parameters</span>: {<samp>\n
            <span class=sf-dump-meta>$guard</span>: {<samp>\n
              <span class=sf-dump-meta>default</span>: <span class=sf-dump-const>null</span>\n
            </samp>}\n
          </samp>}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$app</span>: <abbr title="Illuminate\Foundation\Application" class=sf-dump-note>Application</abbr> {<a class=sf-dump-ref>#399</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        #<span class=sf-dump-protected title="Protected property">routeResolver</span>: <span class=sf-dump-note>Closure</span> {<a class=sf-dump-ref>#761</a><samp>\n
          <span class=sf-dump-meta>class</span>: "<span class=sf-dump-str title="Illuminate\Routing\Router\n
      25 characters"><span class="sf-dump-ellipsis sf-dump-ellipsis-class">Illuminate\Routing</span><span class=sf-dump-ellipsis>\</span>Router</span>"\n
          <span class=sf-dump-meta>this</span>: <abbr title="Illuminate\Routing\Router" class=sf-dump-note>Router</abbr> {<a class=sf-dump-ref>#119</a> &hellip;}\n
          <span class=sf-dump-meta>use</span>: {<samp>\n
            <span class=sf-dump-meta>$route</span>: <abbr title="Illuminate\Routing\Route" class=sf-dump-note>Route</abbr> {<a class=sf-dump-ref>#145</a> &hellip;}\n
          </samp>}\n
        </samp>}\n
        +<span class=sf-dump-public title="Public property">attributes</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#744</a>}\n
        +<span class=sf-dump-public title="Public property">request</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-276446831-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">query</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref href=#sf-dump-276446831-ref2750 title="2 occurrences">#750</a>}\n
        +<span class=sf-dump-public title="Public property">server</span>: <abbr title="Symfony\Component\HttpFoundation\ServerBag" class=sf-dump-note>ServerBag</abbr> {<a class=sf-dump-ref>#746</a>}\n
        +<span class=sf-dump-public title="Public property">files</span>: <abbr title="Symfony\Component\HttpFoundation\FileBag" class=sf-dump-note>FileBag</abbr> {<a class=sf-dump-ref>#747</a>}\n
        +<span class=sf-dump-public title="Public property">cookies</span>: <abbr title="Symfony\Component\HttpFoundation\ParameterBag" class=sf-dump-note>ParameterBag</abbr> {<a class=sf-dump-ref>#745</a>}\n
        +<span class=sf-dump-public title="Public property">headers</span>: <abbr title="Symfony\Component\HttpFoundation\HeaderBag" class=sf-dump-note>HeaderBag</abbr> {<a class=sf-dump-ref>#748</a>}\n
        #<span class=sf-dump-protected title="Protected property">content</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">languages</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">charsets</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">encodings</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">acceptableContentTypes</span>: <span class=sf-dump-note>array:4</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="9 characters">text/html</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="21 characters">application/xhtml+xml</span>"\n
          <span class=sf-dump-index>2</span> => "<span class=sf-dump-str title="15 characters">application/xml</span>"\n
          <span class=sf-dump-index>3</span> => "<span class=sf-dump-str title="3 characters">*/*</span>"\n
        </samp>]\n
        #<span class=sf-dump-protected title="Protected property">pathInfo</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">requestUri</span>: "<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
        #<span class=sf-dump-protected title="Protected property">baseUrl</span>: ""\n
        #<span class=sf-dump-protected title="Protected property">basePath</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">method</span>: "<span class=sf-dump-str title="3 characters">GET</span>"\n
        #<span class=sf-dump-protected title="Protected property">format</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">session</span>: <abbr title="Illuminate\Session\Store" class=sf-dump-note>Store</abbr> {<a class=sf-dump-ref>#699</a>}\n
        #<span class=sf-dump-protected title="Protected property">locale</span>: <span class=sf-dump-const>null</span>\n
        #<span class=sf-dump-protected title="Protected property">defaultLocale</span>: "<span class=sf-dump-str title="2 characters">en</span>"\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isHostValid</span>: <span class=sf-dump-const>true</span>\n
        -<span class=sf-dump-private title="Private property defined in class:&#10;`Symfony\Component\HttpFoundation\Request`">isForwardedValid</span>: <span class=sf-dump-const>true</span>\n
        <span class=sf-dump-meta>basePath</span>: ""\n
        <span class=sf-dump-meta>format</span>: "<span class=sf-dump-str title="4 characters">html</span>"\n
      </samp>}\n
      </pre><script>Sfdump("sf-dump-276446831")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-69">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">vendor</div>/<div class="delimiter">laravel</div>/<div class="delimiter">framework</div>/<div class="delimiter">src</div>/<div class="delimiter">Illuminate</div>/<div class="delimiter">Foundation</div>/<div class="delimiter">Testing</div>/<div class="delimiter">Concerns</div>/<div class="delimiter">MakesHttpRequests.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-69" class="code-block linenums:128">     * @param  string  $url\n
           * @return $this\n
           */\n
          public function from(string $url)\n
          {\n
              return $this-&gt;withHeader(&#039;referer&#039;, $url);\n
          }\n
       \n
          /**\n
           * Visit the given URI with a GET request.\n
           *\n
           * @param  string  $uri\n
           * @param  array  $headers\n
           * @return \Illuminate\Foundation\Testing\TestResponse\n
           */\n
          public function get($uri, array $headers = [])\n
          {\n
              $server = $this-&gt;transformHeadersToServerVars($headers);\n
       \n
              return $this-&gt;call(&#039;GET&#039;, $uri, [], [], [], $server);\n
          }\n
       \n
          /**\n
           * Visit the given URI with a GET request, expecting a JSON response.\n
           *\n
           * @param  string  $uri\n
           * @param  array  $headers\n
           * @return \Illuminate\Foundation\Testing\TestResponse\n
           */\n
          public function getJson($uri, array $headers = [])\n
          {\n
              return $this-&gt;json(&#039;GET&#039;, $uri, [], $headers);\n
          }\n
       \n
          /**\n
           * Visit the given URI with a POST request.\n
           *\n
           * @param  string  $uri\n
           * @param  array  $data\n
           * @param  array  $headers</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-69" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1365857477 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">GET</span>"\n
      </pre><script>Sfdump("sf-dump-1365857477")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-1398605976 data-indent-pad="  ">"<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
      </pre><script>Sfdump("sf-dump-1398605976")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-960532775 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-960532775")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-10940435 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-10940435")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-965064580 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-965064580")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-986106960 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-986106960")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-70">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">Users</div>/<div class="delimiter">bobbyborisov</div>/<div class="delimiter">code</div>/<div class="delimiter">forum</div>/<div class="delimiter">tests</div>/<div class="delimiter">Feature</div>/<div class="delimiter">ReadThreadsTest.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-70" class="code-block linenums:24">        $response = $this-&gt;get(&#039;/threads&#039;);\n
       \n
              $response-&gt;assertStatus(200)\n
                      -&gt;assertSee($this-&gt;thread-&gt;title);\n
          }\n
       \n
          /** @test */\n
          public function a_user_can_visit_specific_thread()\n
          {\n
              $response = $this-&gt;get($this-&gt;thread-&gt;path());\n
       \n
              $response-&gt;assertSee($this-&gt;thread-&gt;title);\n
          }\n
       \n
          /** @test */\n
          public function a_user_is_able_to_read_replies_that_are_associated_with_the_thread()\n
          {\n
              $reply = factory(Reply::class)-&gt;create([&#039;thread_id&#039;=&gt; $this-&gt;thread-&gt;id]);\n
       \n
              $response = $this-&gt;get($this-&gt;thread-&gt;path());\n
              dd($response);\n
                               //-&gt;assertSee($reply-&gt;body);\n
          }\n
       \n
          /** @test */\n
          public function a_user_can_filter_threads_according_to_a_tag()\n
          {\n
              $channel = factory(\App\Channel::class)-&gt;create();\n
              $thread = factory(\App\Thread::class)-&gt;create([&#039;channel_id&#039; =&gt; $channel-&gt;id]);\n
              $secondThread = factory(\App\Thread::class)-&gt;create();\n
       \n
              $this-&gt;get(&#039;/threads/&#039;.$channel-&gt;slug)\n
                   -&gt;assertSee($thread-&gt;title)-&gt;assertDontSee($secondThread-&gt;title);\n
          }\n
       \n
          /** @test */\n
          public function a_user_can_filter_thread_by_username()\n
          {\n
              $user = factory(\App\User::class)-&gt;create([&#039;name&#039; =&gt; &#039;Bobby&#039;]);\n
              $threadByBobby = factory(\App\Thread::class)-&gt;create([&#039;user_id&#039; =&gt; $user-&gt;id]);</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-70" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-46287616 data-indent-pad="  ">"<span class=sf-dump-str title="14 characters">/threads/hic/1</span>"\n
      </pre><script>Sfdump("sf-dump-46287616")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-71">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">[internal]</div></strong>\n
                        </div>\n
                      \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-72">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-72" class="code-block linenums:1050">    {\n
              if ($this-&gt;name === null) {\n
                  throw new Exception(\n
                      &#039;PHPUnit\Framework\TestCase::$name must not be null.&#039;\n
                  );\n
              }\n
       \n
              try {\n
                  $class  = new ReflectionClass($this);\n
                  $method = $class-&gt;getMethod($this-&gt;name);\n
              } catch (ReflectionException $e) {\n
                  $this-&gt;fail($e-&gt;getMessage());\n
              }\n
       \n
              $testArguments = \array_merge($this-&gt;data, $this-&gt;dependencyInput);\n
       \n
              $this-&gt;registerMockObjectsFromTestArguments($testArguments);\n
       \n
              try {\n
                  $testResult = $method-&gt;invokeArgs($this, $testArguments);\n
              } catch (Throwable $_e) {\n
                  $e = $_e;\n
              }\n
       \n
              if (isset($e)) {\n
                  $checkException = false;\n
       \n
                  if (!($e instanceof SkippedTestError) &amp;&amp; \is_string($this-&gt;expectedException)) {\n
                      $checkException = true;\n
       \n
                      if ($e instanceof Exception) {\n
                          $checkException = false;\n
                      }\n
       \n
                      $reflector = new ReflectionClass($this-&gt;expectedException);\n
       \n
                      if ($this-&gt;expectedException === &#039;PHPUnit\Framework\Exception&#039; ||\n
                          $this-&gt;expectedException === &#039;\PHPUnit\Framework\Exception&#039; ||\n
                          $reflector-&gt;isSubclassOf(&#039;PHPUnit\Framework\Exception&#039;)) {\n
                          $checkException = true;</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-72" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-2147284072 data-indent-pad="  "><abbr title="Tests\Feature\ReadThreadsTest" class=sf-dump-note>ReadThreadsTest</abbr> {<a class=sf-dump-ref>#387</a>}\n
      </pre><script>Sfdump("sf-dump-2147284072")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-375024953 data-indent-pad="  ">[]\n
      </pre><script>Sfdump("sf-dump-375024953")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-73">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-73" class="code-block linenums:909">        try {\n
                  $hasMetRequirements = false;\n
                  $this-&gt;checkRequirements();\n
                  $hasMetRequirements = true;\n
       \n
                  if ($this-&gt;inIsolation) {\n
                      foreach ($hookMethods[&#039;beforeClass&#039;] as $method) {\n
                          $this-&gt;$method();\n
                      }\n
                  }\n
       \n
                  $this-&gt;setExpectedExceptionFromAnnotation();\n
                  $this-&gt;setDoesNotPerformAssertionsFromAnnotation();\n
       \n
                  foreach ($hookMethods[&#039;before&#039;] as $method) {\n
                      $this-&gt;$method();\n
                  }\n
       \n
                  $this-&gt;assertPreConditions();\n
                  $this-&gt;testResult = $this-&gt;runTest();\n
                  $this-&gt;verifyMockObjects();\n
                  $this-&gt;assertPostConditions();\n
       \n
                  if (!empty($this-&gt;warnings)) {\n
                      throw new Warning(\n
                          \implode(\n
                              &quot;\n&quot;,\n
                              \array_unique($this-&gt;warnings)\n
                          )\n
                      );\n
                  }\n
       \n
                  $this-&gt;status = BaseTestRunner::STATUS_PASSED;\n
              } catch (IncompleteTest $e) {\n
                  $this-&gt;status        = BaseTestRunner::STATUS_INCOMPLETE;\n
                  $this-&gt;statusMessage = $e-&gt;getMessage();\n
              } catch (SkippedTest $e) {\n
                  $this-&gt;status        = BaseTestRunner::STATUS_SKIPPED;\n
                  $this-&gt;statusMessage = $e-&gt;getMessage();\n
              } catch (Warning $e) {</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-74">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestResult.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-74" class="code-block linenums:676">                $this-&gt;enforceTimeLimit &amp;&amp;\n
                      \extension_loaded(&#039;pcntl&#039;) &amp;&amp; \class_exists(&#039;PHP_Invoker&#039;)) {\n
                      switch ($test-&gt;getSize()) {\n
                          case \PHPUnit\Util\Test::SMALL:\n
                              $_timeout = $this-&gt;timeoutForSmallTests;\n
                              break;\n
       \n
                          case \PHPUnit\Util\Test::MEDIUM:\n
                              $_timeout = $this-&gt;timeoutForMediumTests;\n
                              break;\n
       \n
                          case \PHPUnit\Util\Test::LARGE:\n
                              $_timeout = $this-&gt;timeoutForLargeTests;\n
                              break;\n
                      }\n
       \n
                      $invoker = new PHP_Invoker;\n
                      $invoker-&gt;invoke([$test, &#039;runBare&#039;], [], $_timeout);\n
                  } else {\n
                      $test-&gt;runBare();\n
                  }\n
              } catch (PHP_Invoker_TimeoutException $e) {\n
                  $this-&gt;addFailure(\n
                      $test,\n
                      new RiskyTestError(\n
                          $e-&gt;getMessage()\n
                      ),\n
                      $_timeout\n
                  );\n
       \n
                  $risky = true;\n
              } catch (PHPUnit_Framework_MockObject_Exception $e) {\n
                  $e = new Warning(\n
                      $e-&gt;getMessage()\n
                  );\n
       \n
                  $warning = true;\n
              } catch (AssertionFailedError $e) {\n
                  $failure = true;\n
       </pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-75">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestCase.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-75" class="code-block linenums:864">                &#039;isStrictAboutTodoAnnotatedTests&#039;            =&gt; $isStrictAboutTodoAnnotatedTests,\n
                      &#039;isStrictAboutResourceUsageDuringSmallTests&#039; =&gt; $isStrictAboutResourceUsageDuringSmallTests,\n
                      &#039;codeCoverageFilter&#039;                         =&gt; $codeCoverageFilter,\n
                      &#039;configurationFilePath&#039;                      =&gt; $configurationFilePath\n
                  ];\n
       \n
                  if (!$runEntireClass) {\n
                      $var[&#039;methodName&#039;] = $this-&gt;name;\n
                  }\n
       \n
                  $template-&gt;setVar(\n
                      $var\n
                  );\n
       \n
                  $this-&gt;prepareTemplate($template);\n
       \n
                  $php = AbstractPhpProcess::factory();\n
                  $php-&gt;runTestJob($template-&gt;render(), $this, $result);\n
              } else {\n
                  $result-&gt;run($this);\n
              }\n
       \n
              if ($this-&gt;useErrorHandler !== null) {\n
                  $result-&gt;convertErrorsToExceptions($oldErrorHandlerSetting);\n
              }\n
       \n
              $this-&gt;result = null;\n
       \n
              return $result;\n
          }\n
       \n
          /**\n
           * Runs the bare test sequence.\n
           */\n
          public function runBare()\n
          {\n
              $this-&gt;numAssertions = 0;\n
       \n
              $this-&gt;snapshotGlobalState();\n
              $this-&gt;startOutputBuffering();</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-75" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1488358972 data-indent-pad="  "><abbr title="Tests\Feature\ReadThreadsTest" class=sf-dump-note>ReadThreadsTest</abbr> {<a class=sf-dump-ref>#387</a>}\n
      </pre><script>Sfdump("sf-dump-1488358972")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-76">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-76" class="code-block linenums:725"> \n
                  $this-&gt;tearDown();\n
                  $result-&gt;endTestSuite($this);\n
       \n
                  return $result;\n
              }\n
       \n
              foreach ($this as $test) {\n
                  if ($result-&gt;shouldStop()) {\n
                      break;\n
                  }\n
       \n
                  if ($test instanceof TestCase || $test instanceof self) {\n
                      $test-&gt;setbeStrictAboutChangesToGlobalState($this-&gt;beStrictAboutChangesToGlobalState);\n
                      $test-&gt;setBackupGlobals($this-&gt;backupGlobals);\n
                      $test-&gt;setBackupStaticAttributes($this-&gt;backupStaticAttributes);\n
                      $test-&gt;setRunTestInSeparateProcess($this-&gt;runTestInSeparateProcess);\n
                  }\n
       \n
                  $test-&gt;run($result);\n
              }\n
       \n
              foreach ($hookMethods[&#039;afterClass&#039;] as $afterClassMethod) {\n
                  if ($this-&gt;testCase === true &amp;&amp; \class_exists($this-&gt;name, false) &amp;&amp; \method_exists($this-&gt;name, $afterClassMethod)) {\n
                      \call_user_func([$this-&gt;name, $afterClassMethod]);\n
                  }\n
              }\n
       \n
              $this-&gt;tearDown();\n
       \n
              $result-&gt;endTestSuite($this);\n
       \n
              return $result;\n
          }\n
       \n
          /**\n
           * @param bool $runTestInSeparateProcess\n
           *\n
           * @throws Exception\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-76" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1881769741 data-indent-pad="  "><abbr title="PHPUnit\Framework\TestResult" class=sf-dump-note>TestResult</abbr> {<a class=sf-dump-ref>#13</a>}\n
      </pre><script>Sfdump("sf-dump-1881769741")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-77">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-77" class="code-block linenums:725"> \n
                  $this-&gt;tearDown();\n
                  $result-&gt;endTestSuite($this);\n
       \n
                  return $result;\n
              }\n
       \n
              foreach ($this as $test) {\n
                  if ($result-&gt;shouldStop()) {\n
                      break;\n
                  }\n
       \n
                  if ($test instanceof TestCase || $test instanceof self) {\n
                      $test-&gt;setbeStrictAboutChangesToGlobalState($this-&gt;beStrictAboutChangesToGlobalState);\n
                      $test-&gt;setBackupGlobals($this-&gt;backupGlobals);\n
                      $test-&gt;setBackupStaticAttributes($this-&gt;backupStaticAttributes);\n
                      $test-&gt;setRunTestInSeparateProcess($this-&gt;runTestInSeparateProcess);\n
                  }\n
       \n
                  $test-&gt;run($result);\n
              }\n
       \n
              foreach ($hookMethods[&#039;afterClass&#039;] as $afterClassMethod) {\n
                  if ($this-&gt;testCase === true &amp;&amp; \class_exists($this-&gt;name, false) &amp;&amp; \method_exists($this-&gt;name, $afterClassMethod)) {\n
                      \call_user_func([$this-&gt;name, $afterClassMethod]);\n
                  }\n
              }\n
       \n
              $this-&gt;tearDown();\n
       \n
              $result-&gt;endTestSuite($this);\n
       \n
              return $result;\n
          }\n
       \n
          /**\n
           * @param bool $runTestInSeparateProcess\n
           *\n
           * @throws Exception\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-77" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1666440818 data-indent-pad="  "><abbr title="PHPUnit\Framework\TestResult" class=sf-dump-note>TestResult</abbr> {<a class=sf-dump-ref>#13</a>}\n
      </pre><script>Sfdump("sf-dump-1666440818")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-78">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">Framework</div>/<div class="delimiter">TestSuite.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-78" class="code-block linenums:725"> \n
                  $this-&gt;tearDown();\n
                  $result-&gt;endTestSuite($this);\n
       \n
                  return $result;\n
              }\n
       \n
              foreach ($this as $test) {\n
                  if ($result-&gt;shouldStop()) {\n
                      break;\n
                  }\n
       \n
                  if ($test instanceof TestCase || $test instanceof self) {\n
                      $test-&gt;setbeStrictAboutChangesToGlobalState($this-&gt;beStrictAboutChangesToGlobalState);\n
                      $test-&gt;setBackupGlobals($this-&gt;backupGlobals);\n
                      $test-&gt;setBackupStaticAttributes($this-&gt;backupStaticAttributes);\n
                      $test-&gt;setRunTestInSeparateProcess($this-&gt;runTestInSeparateProcess);\n
                  }\n
       \n
                  $test-&gt;run($result);\n
              }\n
       \n
              foreach ($hookMethods[&#039;afterClass&#039;] as $afterClassMethod) {\n
                  if ($this-&gt;testCase === true &amp;&amp; \class_exists($this-&gt;name, false) &amp;&amp; \method_exists($this-&gt;name, $afterClassMethod)) {\n
                      \call_user_func([$this-&gt;name, $afterClassMethod]);\n
                  }\n
              }\n
       \n
              $this-&gt;tearDown();\n
       \n
              $result-&gt;endTestSuite($this);\n
       \n
              return $result;\n
          }\n
       \n
          /**\n
           * @param bool $runTestInSeparateProcess\n
           *\n
           * @throws Exception\n
           */</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-78" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1856804519 data-indent-pad="  "><abbr title="PHPUnit\Framework\TestResult" class=sf-dump-note>TestResult</abbr> {<a class=sf-dump-ref>#13</a>}\n
      </pre><script>Sfdump("sf-dump-1856804519")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-79">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">TestRunner.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-79" class="code-block linenums:518"> \n
                  if ($codeCoverageReports &gt; 1 &amp;&amp; isset($arguments[&#039;cacheTokens&#039;])) {\n
                      $codeCoverage-&gt;setCacheTokens($arguments[&#039;cacheTokens&#039;]);\n
                  }\n
              }\n
       \n
              $result-&gt;beStrictAboutTestsThatDoNotTestAnything($arguments[&#039;reportUselessTests&#039;]);\n
              $result-&gt;beStrictAboutOutputDuringTests($arguments[&#039;disallowTestOutput&#039;]);\n
              $result-&gt;beStrictAboutTodoAnnotatedTests($arguments[&#039;disallowTodoAnnotatedTests&#039;]);\n
              $result-&gt;beStrictAboutResourceUsageDuringSmallTests($arguments[&#039;beStrictAboutResourceUsageDuringSmallTests&#039;]);\n
              $result-&gt;enforceTimeLimit($arguments[&#039;enforceTimeLimit&#039;]);\n
              $result-&gt;setTimeoutForSmallTests($arguments[&#039;timeoutForSmallTests&#039;]);\n
              $result-&gt;setTimeoutForMediumTests($arguments[&#039;timeoutForMediumTests&#039;]);\n
              $result-&gt;setTimeoutForLargeTests($arguments[&#039;timeoutForLargeTests&#039;]);\n
       \n
              if ($suite instanceof TestSuite) {\n
                  $suite-&gt;setRunTestInSeparateProcess($arguments[&#039;processIsolation&#039;]);\n
              }\n
       \n
              $suite-&gt;run($result);\n
       \n
              unset($suite);\n
              $result-&gt;flushListeners();\n
       \n
              if ($this-&gt;printer instanceof ResultPrinter) {\n
                  $this-&gt;printer-&gt;printResult($result);\n
              }\n
       \n
              if (isset($codeCoverage)) {\n
                  if (isset($arguments[&#039;coverageClover&#039;])) {\n
                      $this-&gt;printer-&gt;write(\n
                          &quot;\nGenerating code coverage report in Clover XML format ...&quot;\n
                      );\n
       \n
                      try {\n
                          $writer = new CloverReport;\n
                          $writer-&gt;process($codeCoverage, $arguments[&#039;coverageClover&#039;]);\n
       \n
                          $this-&gt;printer-&gt;write(&quot; done\n&quot;);\n
                          unset($writer);</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-79" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-425130545 data-indent-pad="  "><abbr title="PHPUnit\Framework\TestResult" class=sf-dump-note>TestResult</abbr> {<a class=sf-dump-ref>#13</a>}\n
      </pre><script>Sfdump("sf-dump-425130545")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-80">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">Command.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-80" class="code-block linenums:193"> \n
                  $suiteNames = $configuration-&gt;getTestSuiteNames();\n
                  foreach ($suiteNames as $suiteName) {\n
                      print &quot; - $suiteName\n&quot;;\n
                  }\n
       \n
                  if ($exit) {\n
                      exit(TestRunner::SUCCESS_EXIT);\n
                  }\n
       \n
                  return TestRunner::SUCCESS_EXIT;\n
              }\n
       \n
              unset(\n
                  $this-&gt;arguments[&#039;test&#039;],\n
                  $this-&gt;arguments[&#039;testFile&#039;]\n
              );\n
       \n
              try {\n
                  $result = $runner-&gt;doRun($suite, $this-&gt;arguments, $exit);\n
              } catch (Exception $e) {\n
                  print $e-&gt;getMessage() . &quot;\n&quot;;\n
              }\n
       \n
              $return = TestRunner::FAILURE_EXIT;\n
       \n
              if (isset($result) &amp;&amp; $result-&gt;wasSuccessful()) {\n
                  $return = TestRunner::SUCCESS_EXIT;\n
              } elseif (!isset($result) || $result-&gt;errorCount() &gt; 0) {\n
                  $return = TestRunner::EXCEPTION_EXIT;\n
              }\n
       \n
              if ($exit) {\n
                  exit($return);\n
              }\n
       \n
              return $return;\n
          }\n
       \n
          /**</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-80" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-85321781 data-indent-pad="  "><abbr title="PHPUnit\Framework\TestSuite" class=sf-dump-note>TestSuite</abbr> {<a class=sf-dump-ref>#7</a>}\n
      </pre><script>Sfdump("sf-dump-85321781")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-473387170 data-indent-pad="  "><span class=sf-dump-note>array:53</span> [<samp>\n
        "<span class=sf-dump-key>listGroups</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>listSuites</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>loader</span>" => <span class=sf-dump-const>null</span>\n
        "<span class=sf-dump-key>useDefaultConfiguration</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>loadedExtensions</span>" => []\n
        "<span class=sf-dump-key>notLoadedExtensions</span>" => []\n
        "<span class=sf-dump-key>filter</span>" => "<span class=sf-dump-str title="66 characters">a_user_is_able_to_read_replies_that_are_associated_with_the_thread</span>"\n
        "<span class=sf-dump-key>testSuffixes</span>" => <span class=sf-dump-note>array:2</span> [<samp>\n
          <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="8 characters">Test.php</span>"\n
          <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="5 characters">.phpt</span>"\n
        </samp>]\n
        "<span class=sf-dump-key>configuration</span>" => <abbr title="PHPUnit\Util\Configuration" class=sf-dump-note>Configuration</abbr> {<a class=sf-dump-ref>#2</a>}\n
        "<span class=sf-dump-key>debug</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>listeners</span>" => []\n
        "<span class=sf-dump-key>backupGlobals</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>backupStaticAttributes</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>bootstrap</span>" => "<span class=sf-dump-str title="50 characters">/Users/bobbyborisov/code/forum/vendor/autoload.php</span>"\n
        "<span class=sf-dump-key>colors</span>" => "<span class=sf-dump-str title="4 characters">auto</span>"\n
        "<span class=sf-dump-key>convertErrorsToExceptions</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>convertNoticesToExceptions</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>convertWarningsToExceptions</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>processIsolation</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnFailure</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>testdoxGroups</span>" => []\n
        "<span class=sf-dump-key>testdoxExcludeGroups</span>" => []\n
        "<span class=sf-dump-key>addUncoveredFilesFromWhitelist</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>beStrictAboutChangesToGlobalState</span>" => <span class=sf-dump-const>null</span>\n
        "<span class=sf-dump-key>beStrictAboutResourceUsageDuringSmallTests</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>cacheTokens</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>columns</span>" => <span class=sf-dump-num>80</span>\n
        "<span class=sf-dump-key>convertDeprecationsToExceptions</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>crap4jThreshold</span>" => <span class=sf-dump-num>30</span>\n
        "<span class=sf-dump-key>disallowTestOutput</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>disallowTodoAnnotatedTests</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>enforceTimeLimit</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>excludeGroups</span>" => []\n
        "<span class=sf-dump-key>failOnRisky</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>failOnWarning</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>groups</span>" => []\n
        "<span class=sf-dump-key>processUncoveredFilesFromWhitelist</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>registerMockObjectsFromTestArgumentsRecursively</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>repeat</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>reportHighLowerBound</span>" => <span class=sf-dump-num>90</span>\n
        "<span class=sf-dump-key>reportLowUpperBound</span>" => <span class=sf-dump-num>50</span>\n
        "<span class=sf-dump-key>reportUselessTests</span>" => <span class=sf-dump-const>true</span>\n
        "<span class=sf-dump-key>reverseList</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnError</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnIncomplete</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnRisky</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnSkipped</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>stopOnWarning</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>strictCoverage</span>" => <span class=sf-dump-const>false</span>\n
        "<span class=sf-dump-key>timeoutForLargeTests</span>" => <span class=sf-dump-num>60</span>\n
        "<span class=sf-dump-key>timeoutForMediumTests</span>" => <span class=sf-dump-num>10</span>\n
        "<span class=sf-dump-key>timeoutForSmallTests</span>" => <span class=sf-dump-num>1</span>\n
        "<span class=sf-dump-key>verbose</span>" => <span class=sf-dump-const>false</span>\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-473387170")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-2117601606 data-indent-pad="  "><span class=sf-dump-const>true</span>\n
      </pre><script>Sfdump("sf-dump-2117601606")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-81">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter">phar:</div>/<div class="delimiter"></div>/<div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">phpunit</div>/<div class="delimiter">TextUI</div>/<div class="delimiter">Command.php</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-81" class="code-block linenums:122">        &#039;test-suffix=&#039;              =&gt; null,\n
              &#039;testsuite=&#039;                =&gt; null,\n
              &#039;verbose&#039;                   =&gt; null,\n
              &#039;version&#039;                   =&gt; null,\n
              &#039;whitelist=&#039;                =&gt; null\n
          ];\n
       \n
          /**\n
           * @var bool\n
           */\n
          private $versionStringPrinted = false;\n
       \n
          /**\n
           * @param bool $exit\n
           */\n
          public static function main($exit = true)\n
          {\n
              $command = new static;\n
       \n
              return $command-&gt;run($_SERVER[&#039;argv&#039;], $exit);\n
          }\n
       \n
          /**\n
           * @param array $argv\n
           * @param bool  $exit\n
           *\n
           * @return int\n
           */\n
          public function run(array $argv, $exit = true)\n
          {\n
              $this-&gt;handleArguments($argv);\n
       \n
              $runner = $this-&gt;createRunner();\n
       \n
              if ($this-&gt;arguments[&#039;test&#039;] instanceof Test) {\n
                  $suite = $this-&gt;arguments[&#039;test&#039;];\n
              } else {\n
                  $suite = $runner-&gt;getTest(\n
                      $this-&gt;arguments[&#039;test&#039;],\n
                      $this-&gt;arguments[&#039;testFile&#039;],</pre>\n
      \n
                        \n
                                <div class="frame-file">\n
                    Arguments\n
                </div>\n
                <div id="frame-code-args-81" class="code-block frame-args">\n
                    <ol class="linenums"><li><pre class=sf-dump id=sf-dump-1864931430 data-indent-pad="  "><span class=sf-dump-note>array:2</span> [<samp>\n
        <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
        <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="75 characters">--filter=a_user_is_able_to_read_replies_that_are_associated_with_the_thread</span>"\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-1864931430")</script>\n
      </li><li><pre class=sf-dump id=sf-dump-639509773 data-indent-pad="  "><span class=sf-dump-const>true</span>\n
      </pre><script>Sfdump("sf-dump-639509773")</script>\n
      </li></ol>          </div>\n
              \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
                  <div class="frame-code " id="frame-code-82">\n
              <div class="frame-file">\n
                                      <strong><div class="delimiter"></div>/<div class="delimiter">usr</div>/<div class="delimiter">local</div>/<div class="delimiter">bin</div>/<div class="delimiter">phpunit</div></strong>\n
                        </div>\n
                          <pre id="frame-code-linenums-82" class="code-block linenums:532">require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Mixed_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Null_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Nullable.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Object_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Parent_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Resource_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Scalar.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Self_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Static_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/String_.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/This.php&#039;;\n
      require &#039;phar://phpunit-6.2.4.phar&#039; . &#039;/phpdocumentor-type-resolver/Types/Void_.php&#039;;\n
       \n
      if ($execute) {\n
          if (isset($_SERVER[&#039;argv&#039;][1]) &amp;&amp; $_SERVER[&#039;argv&#039;][1] == &#039;--manifest&#039;) {\n
              print file_get_contents(__PHPUNIT_PHAR_ROOT__ . &#039;/manifest.txt&#039;);\n
              exit;\n
          }\n
       \n
          PHPUnit\TextUI\Command::main();\n
      }\n
       \n
      __HALT_COMPILER(); ?&gt;\r\n
      D�\x00\x00H\x02\x00\x00\x11\x00\x00\x00\x01\x00\x12\x00\x00\x00phpunit-6.2.4.phar\x00\x00\x00\x00\f\x00\x00\x00manifest.txtj\x03\x00\x00M,�Yj\x03\x00\x00����\x01\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00ca.pem�\x05\x00\x00M,�Y�\x05\x00\x00�by�\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00php-code-coverage/LICENSE\x0F\x06\x00\x00M,�Y\x0F\x06\x00\x00ЉxZ�\x01\x00\x00\x00\x00\x00\x00&quot;\x00\x00\x00php-code-coverage/CodeCoverage.php�y\x00\x00M,�Y�y\x00\x00Z�\x03��\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Driver/Driver.php\x11\x04\x00\x00M,�Y\x11\x04\x00\x00�\x00��\x01\x00\x00\x00\x00\x00\x00!\x00\x00\x00php-code-coverage/Driver/HHVM.php�\x02\x00\x00M,�Y�\x02\x00\x00Ն\x0F7�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Driver/PHPDBG.php]\v\x00\x00M,�Y]\v\x00\x00\x01ӔӶ\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Driver/Xdebug.php�\n
      \x00\x00M,�Y�\n
      \x00\x00��\x1D�\x01\x00\x00\x00\x00\x00\x00?\x00\x00\x00php-code-coverage/Exception/CoveredCodeNotExecutedException.php�\x01\x00\x00M,�Y�\x01\x00\x00/�/��\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00php-code-coverage/Exception/Exception.php~\x01\x00\x00M,�Y~\x01\x00\x00\x11��u�\x01\x00\x00\x00\x00\x00\x008\x00\x00\x00php-code-coverage/Exception/InvalidArgumentException.php�\x03\x00\x00M,�Y�\x03\x00\x00�N�\x14�\x01\x00\x00\x00\x00\x00\x00@\x00\x00\x00php-code-coverage/Exception/MissingCoversAnnotationException.php�\x01\x00\x00M,�Y�\x01\x00\x00�f\x1AM�\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00php-code-coverage/Exception/RuntimeException.phpp\x01\x00\x00M,�Yp\x01\x00\x00w�C\x0E�\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Exception/UnintentionallyCoveredCodeException.php�\x04\x00\x00M,�Y�\x04\x00\x00�F�+�\x01\x00\x00\x00\x00\x00\x00\x1C\x00\x00\x00php-code-coverage/Filter.php�\x0F\x00\x00M,�Y�\x0F\x00\x00\x1A��ʶ\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Node/AbstractNode.php�\e\x00\x00M,�Y�\e\x00\x00�_�\x1E�\x01\x00\x00\x00\x00\x00\x00&quot;\x00\x00\x00php-code-coverage/Node/Builder.phpf\x16\x00\x00M,�Yf\x16\x00\x00\x16r���\x01\x00\x00\x00\x00\x00\x00$\x00\x00\x00php-code-coverage/Node/Directory.php�&amp;\x00\x00M,�Y�&amp;\x00\x00\x01�k�\x01\x00\x00\x00\x00\x00\x00\x1F\x00\x00\x00php-code-coverage/Node/File.phpwL\x00\x00M,�YwL\x00\x00o�8�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Node/Iterator.php�\x07\x00\x00M,�Y�\x07\x00\x009��Q�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Report/Clover.php�&amp;\x00\x00M,�Y�&amp;\x00\x001\x1E\x0F\x18�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00php-code-coverage/Report/Crap4j.php�\x16\x00\x00M,�Y�\x16\x00\x00qro��\x01\x00\x00\x00\x00\x00\x00(\x00\x00\x00php-code-coverage/Report/Html/Facade.php&#039;\x16\x00\x00M,�Y&#039;\x16\x00\x00W\x01\n
      ն\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00php-code-coverage/Report/Html/Renderer.phpe&quot;\x00\x00M,�Ye&quot;\x00\x00�\x7F���\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00php-code-coverage/Report/Html/Renderer/Dashboard.phpm&amp;\x00\x00M,�Ym&amp;\x00\x00!\x1Fmu�\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00php-code-coverage/Report/Html/Renderer/Directory.php�\f\x00\x00M,�Y�\f\x00\x00;$�\f�\x01\x00\x00\x00\x00\x00\x00/\x00\x00\x00php-code-coverage/Report/Html/Renderer/File.php�J\x00\x00M,�Y�J\x00\x00�Hˮ�\x01\x00\x00\x00\x00\x00\x00F\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/coverage_bar.html.dist1\x01\x00\x00M,�Y1\x01\x00\x00itL�\x01\x00\x00\x00\x00\x00\x00E\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/css/bootstrap.min.cssp�\x01\x00M,�Yp�\x01\x00X|\x7FF�\x01\x00\x00\x00\x00\x00\x00A\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/css/nv.d3.min.cssX%\x00\x00M,�YX%\x00\x00�\x060,�\x01\x00\x00\x00\x00\x00\x00=\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/css/style.css+\x07\x00\x00M,�Y+\x07\x00\x00Y`�g�\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/dashboard.html.dist�\e\x00\x00M,�Y�\e\x00\x00X�nb�\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/directory.html.dist(\x08\x00\x00M,�Y(\x08\x00\x00\x0F\x02d׶\x01\x00\x00\x00\x00\x00\x00H\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/directory_item.html.dist5\x03\x00\x00M,�Y5\x03\x00\x00�Z�]�\x01\x00\x00\x00\x00\x00\x00&gt;\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/file.html.dist�\x08\x00\x00M,�Y�\x08\x00\x00��\x1CF�\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/file_item.html.distg\x03\x00\x00M,�Yg\x03\x00\x00V�\rP�\x01\x00\x00\x00\x00\x00\x00V\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/fonts/glyphicons-halflings-regular.eot�N\x00\x00M,�Y�N\x00\x00XǱ��\x01\x00\x00\x00\x00\x00\x00V\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/fonts/glyphicons-halflings-regular.svg¨\x01\x00M,�Y¨\x01\x00|��ɶ\x01\x00\x00\x00\x00\x00\x00V\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/fonts/glyphicons-halflings-regular.ttf\�\x00\x00M,�Y\�\x00\x00�\x17&lt;��\x01\x00\x00\x00\x00\x00\x00W\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/fonts/glyphicons-halflings-regular.woff�[\x00\x00M,�Y�[\x00\x00�\x14{��\x01\x00\x00\x00\x00\x00\x00X\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/fonts/glyphicons-halflings-regular.woff2lF\x00\x00M,�YlF\x00\x00v��a�\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/bootstrap.min.js��\x00\x00M,�Y��\x00\x00/��j�\x01\x00\x00\x00\x00\x00\x00&lt;\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/d3.min.js�P\x02\x00M,�Y�P\x02\x00�h�b�\x01\x00\x00\x00\x00\x00\x00:\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/file.js�\x05\x00\x00M,�Y�\x05\x00\x00�\x0E&#039;��\x01\x00\x00\x00\x00\x00\x00@\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/holder.min.js�m\x00\x00M,�Y�m\x00\x00J�sѶ\x01\x00\x00\x00\x00\x00\x00C\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/html5shiv.min.js[(\x00\x00M,�Y[(\x00\x00\vü,�\x01\x00\x00\x00\x00\x00\x00@\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/jquery.min.js�R\x01\x00M,�Y�R\x01\x00~���\x01\x00\x00\x00\x00\x00\x00?\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/nv.d3.min.js�R\x03\x00M,�Y�R\x03\x00&lt;M\x17s�\x01\x00\x00\x00\x00\x00\x00A\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/js/respond.min.js\x19\x11\x00\x00M,�Y\x19\x11\x00\x00�\x16\x16{�\x01\x00\x00\x00\x00\x00\x00E\x00\x00\x00php-code-coverage/Report/Html/Renderer/Template/method_item.html.distx\x02\x00\x00M,�Yx\x02\x00\x00*\x1A���\x01\x00\x00\x00\x00\x00\x00 \x00\x00\x00php-code-coverage/Report/PHP.php�\x04\x00\x00M,�Y�\x04\x00\x00DP��\x01\x00\x00\x00\x00\x00\x00!\x00\x00\x00php-code-coverage/Report/Text.php\x03&quot;\x00\x00M,�Y\x03&quot;\x00\x00�\x19jڶ\x01\x00\x00\x00\x00\x00\x001\x00\x00\x00php-code-coverage/Report/Xml/BuildInformation.php�\n
      \x00\x00M,�Y�\n
      \x00\x00{\eh��\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00php-code-coverage/Report/Xml/Coverage.phpE\x06\x00\x00M,�YE\x06\x00\x00Η&gt;��\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00php-code-coverage/Report/Xml/Directory.phpR\x01\x00\x00M,�YR\x01\x00\x00&amp;�a�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Report/Xml/Facade.phpG\x1F\x00\x00M,�YG\x1F\x00\x00�Uo˶\x01\x00\x00\x00\x00\x00\x00%\x00\x00\x00php-code-coverage/Report/Xml/File.php�\x07\x00\x00M,�Y�\x07\x00\x00��ڿ�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Report/Xml/Method.phpW\x05\x00\x00M,�YW\x05\x00\x00\x11�    \�\x01\x00\x00\x00\x00\x00\x00%\x00\x00\x00php-code-coverage/Report/Xml/Node.php�\x07\x00\x00M,�Y�\x07\x00\x00;�#P�\x01\x00\x00\x00\x00\x00\x00(\x00\x00\x00php-code-coverage/Report/Xml/Project.phpX    \x00\x00M,�YX    \x00\x00�7�\x7F�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Report/Xml/Report.phpi    \x00\x00M,�Yi    \x00\x00���E�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Report/Xml/Source.php&lt;\x04\x00\x00M,�Y&lt;\x04\x00\x00yZF��\x01\x00\x00\x00\x00\x00\x00&amp;\x00\x00\x00php-code-coverage/Report/Xml/Tests.php\x04\x06\x00\x00M,�Y\x04\x06\x00\x00��M��\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00php-code-coverage/Report/Xml/Totals.phpP\x0F\x00\x00M,�YP\x0F\x00\x00���\x18�\x01\x00\x00\x00\x00\x00\x00%\x00\x00\x00php-code-coverage/Report/Xml/Unit.php\x03\n
      \x00\x00M,�Y\x03\n
      \x00\x00-5�^�\x01\x00\x00\x00\x00\x00\x00\x1A\x00\x00\x00php-code-coverage/Util.php�\x03\x00\x00M,�Y�\x03\x00\x00\x05��3�\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00php-code-coverage/Version.php�\x02\x00\x00M,�Y�\x02\x00\x00m����\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00php-file-iterator/LICENSE\f\x06\x00\x00M,�Y\f\x06\x00\x00��s��\x01\x00\x00\x00\x00\x00\x00\x1C\x00\x00\x00php-file-iterator/Facade.php�\v\x00\x00M,�Y�\v\x00\x00��0��\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00php-file-iterator/Factory.php�    \x00\x00M,�Y�    \x00\x00�y���\x01\x00\x00\x00\x00\x00\x00\x1E\x00\x00\x00php-file-iterator/Iterator.phpa\x0F\x00\x00M,�Ya\x0F\x00\x00����\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00php-text-template/LICENSE\f\x06\x00\x00M,�Y\f\x06\x00\x00S�:��\x01\x00\x00\x00\x00\x00\x00\x1E\x00\x00\x00php-text-template/Template.php�\v\x00\x00M,�Y�\v\x00\x00�w4��\x01\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00php-timer/LICENSE\x08\x06\x00\x00M,�Y\x08\x06\x00\x00ǨAE�\x01\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00php-timer/Timer.php\x0F    \x00\x00M,�Y\x0F    \x00\x00�GT�\x01\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00php-token-stream/LICENSE\x0E\x06\x00\x00M,�Y\x0E\x06\x00\x00�-&amp; �\x01\x00\x00\x00\x00\x00\x00\x1A\x00\x00\x00php-token-stream/Token.php�b\x00\x00M,�Y�b\x00\x00�l&lt;I�\x01\x00\x00\x00\x00\x00\x00!\x00\x00\x00php-token-stream/Token/Stream.php�A\x00\x00M,�Y�A\x00\x00\x17����\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00php-token-stream/Token/Stream/CachingFactory.php\x16\x05\x00\x00M,�Y\x16\x05\x00\x00_\x04\e\x13�\x01\x00\x00\x00\x00\x00\x00\x1C\x00\x00\x00phpunit-mock-objects/LICENSE\x13\x06\x00\x00M,�Y\x13\x06\x00\x00�t0��\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00phpunit-mock-objects/Builder/Identity.phpi\x03\x00\x00M,�Yi\x03\x00\x005�h��\x01\x00\x00\x00\x00\x00\x001\x00\x00\x00phpunit-mock-objects/Builder/InvocationMocker.phpo\x1F\x00\x00M,�Yo\x1F\x00\x00{��Ķ\x01\x00\x00\x00\x00\x00\x00&amp;\x00\x00\x00phpunit-mock-objects/Builder/Match.php�\x02\x00\x00M,�Y�\x02\x00\x00\x14�&quot;׶\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00phpunit-mock-objects/Builder/MethodNameMatch.phpO\x03\x00\x00M,�YO\x03\x00\x00�W�    �\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00phpunit-mock-objects/Builder/Namespace.php�\x04\x00\x00M,�Y�\x04\x00\x00��R��\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00phpunit-mock-objects/Builder/ParametersMatch.php�\x05\x00\x00M,�Y�\x05\x00\x00v���\x01\x00\x00\x00\x00\x00\x00%\x00\x00\x00phpunit-mock-objects/Builder/Stub.php%\x03\x00\x00M,�Y%\x03\x00\x00�\x17\x1D��\x01\x00\x00\x00\x00\x00\x009\x00\x00\x00phpunit-mock-objects/Exception/BadMethodCallException.php�\x01\x00\x00M,�Y�\x01\x00\x00��� �\x01\x00\x00\x00\x00\x00\x00,\x00\x00\x00phpunit-mock-objects/Exception/Exception.phps\x01\x00\x00M,�Ys\x01\x00\x00�\x1A��\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Exception/RuntimeException.php�\x01\x00\x00M,�Y�\x01\x00\x00\x7Fe�7�\x01\x00\x00\x00\x00\x00\x00&quot;\x00\x00\x00phpunit-mock-objects/Generator.php��\x00\x00M,�Y��\x00\x00\n
      �b&lt;�\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Generator/deprecation.tpl.dist;\x00\x00\x00M,�Y;\x00\x00\x00O5�s�\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00phpunit-mock-objects/Generator/mocked_class.tpl.dist�\x04\x00\x00M,�Y�\x04\x00\x00�z�Q�\x01\x00\x00\x00\x00\x00\x00;\x00\x00\x00phpunit-mock-objects/Generator/mocked_class_method.tpl.dist�\x00\x00\x00M,�Y�\x00\x00\x00�\x104޶\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00phpunit-mock-objects/Generator/mocked_clone.tpl.dist�\x00\x00\x00M,�Y�\x00\x00\x00�\x17aT�\x01\x00\x00\x00\x00\x00\x005\x00\x00\x00phpunit-mock-objects/Generator/mocked_method.tpl.dist�\x02\x00\x00M,�Y�\x02\x00\x00����\x01\x00\x00\x00\x00\x00\x00:\x00\x00\x00phpunit-mock-objects/Generator/mocked_method_void.tpl.dist�\x02\x00\x00M,�Y�\x02\x00\x00~G&#039;ڶ\x01\x00\x00\x00\x00\x00\x00&lt;\x00\x00\x00phpunit-mock-objects/Generator/mocked_static_method.tpl.dist�\x00\x00\x00M,�Y�\x00\x00\x00\x1C�N��\x01\x00\x00\x00\x00\x00\x006\x00\x00\x00phpunit-mock-objects/Generator/proxied_method.tpl.dist\x00\x03\x00\x00M,�Y\x00\x03\x00\x00���\v�\x01\x00\x00\x00\x00\x00\x00;\x00\x00\x00phpunit-mock-objects/Generator/proxied_method_void.tpl.dist�\x02\x00\x00M,�Y�\x02\x00\x00�gEm�\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Generator/trait_class.tpl.dist7\x00\x00\x00M,�Y7\x00\x00\x00�[$~�\x01\x00\x00\x00\x00\x00\x006\x00\x00\x00phpunit-mock-objects/Generator/unmocked_clone.tpl.dist�\x00\x00\x00M,�Y�\x00\x00\x008W}ض\x01\x00\x00\x00\x00\x00\x002\x00\x00\x00phpunit-mock-objects/Generator/wsdl_class.tpl.dist�\x00\x00\x00M,�Y�\x00\x00\x00w\x1F&amp;S�\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Generator/wsdl_method.tpl.dist&lt;\x00\x00\x00M,�Y&lt;\x00\x00\x00��i��\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00phpunit-mock-objects/Invocation.php�\x01\x00\x00M,�Y�\x01\x00\x00\x15���\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00phpunit-mock-objects/Invocation/Object.php�\x03\x00\x00M,�Y�\x03\x00\x00�e�H�\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00phpunit-mock-objects/Invocation/Static.php�\x14\x00\x00M,�Y�\x14\x00\x00o�쾶\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00phpunit-mock-objects/InvocationMocker.phph\x11\x00\x00M,�Yh\x11\x00\x007_�X�\x01\x00\x00\x00\x00\x00\x00&quot;\x00\x00\x00phpunit-mock-objects/Invokable.php�\x04\x00\x00M,�Y�\x04\x00\x00��\x03\x0F�\x01\x00\x00\x00\x00\x00\x00 \x00\x00\x00phpunit-mock-objects/Matcher.php� \x00\x00M,�Y� \x00\x00~�/\r�\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00phpunit-mock-objects/Matcher/AnyInvokedCount.php�\x02\x00\x00M,�Y�\x02\x00\x00E�k�\x01\x00\x00\x00\x00\x00\x00.\x00\x00\x00phpunit-mock-objects/Matcher/AnyParameters.php\x1A\x03\x00\x00M,�Y\x1A\x03\x00\x005���\x01\x00\x00\x00\x00\x00\x006\x00\x00\x00phpunit-mock-objects/Matcher/ConsecutiveParameters.php�\x0E\x00\x00M,�Y�\x0E\x00\x00P�\x7F6�\x01\x00\x00\x00\x00\x00\x00+\x00\x00\x00phpunit-mock-objects/Matcher/Invocation.php�\x06\x00\x00M,�Y�\x06\x00\x00�KM\x11�\x01\x00\x00\x00\x00\x00\x00/\x00\x00\x00phpunit-mock-objects/Matcher/InvokedAtIndex.php�\x08\x00\x00M,�Y�\x08\x00\x00r�-\x07�\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00phpunit-mock-objects/Matcher/InvokedAtLeastCount.php�\x05\x00\x00M,�Y�\x05\x00\x00V�c��\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Matcher/InvokedAtLeastOnce.php�\x04\x00\x00M,�Y�\x04\x00\x00C�\x19m�\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00phpunit-mock-objects/Matcher/InvokedAtMostCount.php�\x05\x00\x00M,�Y�\x05\x00\x00�\n
      �`�\x01\x00\x00\x00\x00\x00\x00-\x00\x00\x00phpunit-mock-objects/Matcher/InvokedCount.php]\v\x00\x00M,�Y]\v\x00\x00��\x03O�\x01\x00\x00\x00\x00\x00\x000\x00\x00\x00phpunit-mock-objects/Matcher/InvokedRecorder.php&amp;\x06\x00\x00M,�Y&amp;\x06\x00\x00yxQ\x13�\x01\x00\x00\x00\x00\x00\x00+\x00\x00\x00phpunit-mock-objects/Matcher/MethodName.php\f\x07\x00\x00M,�Y\f\x07\x00\x00�&#039;\x12��\x01\x00\x00\x00\x00\x00\x00+\x00\x00\x00phpunit-mock-objects/Matcher/Parameters.phpB\x12\x00\x00M,�YB\x12\x00\x00�\v�ɶ\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00phpunit-mock-objects/Matcher/StatelessInvocation.php-\x07\x00\x00M,�Y-\x07\x00\x00�\x7F\x01\x00\x00\x00\x00\x00\x00$\x00\x00\x00phpunit-mock-objects/MockBuilder.php� \x00\x00M,�Y� \x00\x00u7&gt;z�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00phpunit-mock-objects/MockObject.phpH\x06\x00\x00M,�YH\x06\x00\x00\��t�\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00phpunit-mock-objects/Stub.php�\x03\x00\x00M,�Y�\x03\x00\x00�C�w�\x01\x00\x00\x00\x00\x00\x00.\x00\x00\x00phpunit-mock-objects/Stub/ConsecutiveCalls.phpd\x04\x00\x00M,�Yd\x04\x00\x00�~{\e�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00phpunit-mock-objects/Stub/Exception.php�\x04\x00\x00M,�Y�\x04\x00\x00\x1D���\x01\x00\x00\x00\x00\x00\x00/\x00\x00\x00phpunit-mock-objects/Stub/MatcherCollection.php�\x02\x00\x00M,�Y�\x02\x00\x00@M�@�\x01\x00\x00\x00\x00\x00\x00$\x00\x00\x00phpunit-mock-objects/Stub/Return.phpu\x03\x00\x00M,�Yu\x03\x00\x004�nܶ\x01\x00\x00\x00\x00\x00\x00,\x00\x00\x00phpunit-mock-objects/Stub/ReturnArgument.php�\x03\x00\x00M,�Y�\x03\x00\x00ͭ�\x06�\x01\x00\x00\x00\x00\x00\x00,\x00\x00\x00phpunit-mock-objects/Stub/ReturnCallback.phpa\x05\x00\x00M,�Ya\x05\x00\x00[�\x7F0�\x01\x00\x00\x00\x00\x00\x00-\x00\x00\x00phpunit-mock-objects/Stub/ReturnReference.php\f\x02\x00\x00M,�Y\f\x02\x00\x00����\x01\x00\x00\x00\x00\x00\x00(\x00\x00\x00phpunit-mock-objects/Stub/ReturnSelf.php�\x03\x00\x00M,�Y�\x03\x00\x00\x1C=���\x01\x00\x00\x00\x00\x00\x00,\x00\x00\x00phpunit-mock-objects/Stub/ReturnValueMap.phpM\x04\x00\x00M,�YM\x04\x00\x00\x19\x18�Ҷ\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00phpunit-mock-objects/Verifiable.php�\x02\x00\x00M,�Y�\x02\x00\x00τ ��\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00sebastian-code-unit-reverse-lookup/LICENSE\x17\x06\x00\x00M,�Y\x17\x06\x00\x00XX��\x01\x00\x00\x00\x00\x00\x00-\x00\x00\x00sebastian-code-unit-reverse-lookup/Wizard.phpe\v\x00\x00M,�Ye\v\x00\x00���\x01\x00\x00\x00\x00\x00\x00\x1C\x00\x00\x00sebastian-comparator/LICENSE    \x06\x00\x00M,�Y    \x06\x00\x00V7?.�\x01\x00\x00\x00\x00\x00\x00(\x00\x00\x00sebastian-comparator/ArrayComparator.php`\x10\x00\x00M,�Y`\x10\x00\x00?a�ɶ\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00sebastian-comparator/Comparator.php�\x06\x00\x00M,�Y�\x06\x00\x00~O�7�\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00sebastian-comparator/ComparisonFailure.php�\v\x00\x00M,�Y�\v\x00\x000����\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00sebastian-comparator/DOMNodeComparator.phpW\f\x00\x00M,�YW\f\x00\x00֊���\x01\x00\x00\x00\x00\x00\x00+\x00\x00\x00sebastian-comparator/DateTimeComparator.phpV\n
      \x00\x00M,�YV\n
      \x00\x00���e�\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-comparator/DoubleComparator.phps\x06\x00\x00M,�Ys\x06\x00\x00���̶\x01\x00\x00\x00\x00\x00\x00,\x00\x00\x00sebastian-comparator/ExceptionComparator.php�\x04\x00\x00M,�Y�\x04\x00\x00\x11��ȶ\x01\x00\x00\x00\x00\x00\x00 \x00\x00\x00sebastian-comparator/Factory.phpZ\v\x00\x00M,�YZ\v\x00\x00�^�R�\x01\x00\x00\x00\x00\x00\x00-\x00\x00\x00sebastian-comparator/MockObjectComparator.php�\x04\x00\x00M,�Y�\x04\x00\x00�a6~�\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00sebastian-comparator/NumericComparator.php�\x08\x00\x00M,�Y�\x08\x00\x00ݫ\x1A[�\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-comparator/ObjectComparator.php\x0F\x0E\x00\x00M,�Y\x0F\x0E\x00\x00\e�ne�\x01\x00\x00\x00\x00\x00\x00+\x00\x00\x00sebastian-comparator/ResourceComparator.php/\x06\x00\x00M,�Y/\x06\x00\x00�    PM�\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-comparator/ScalarComparator.php�\f\x00\x00M,�Y�\f\x00\x00��鎶\x01\x00\x00\x00\x00\x00\x003\x00\x00\x00sebastian-comparator/SplObjectStorageComparator.php�\x08\x00\x00M,�Y�\x08\x00\x00�!�ڶ\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00sebastian-comparator/TypeComparator.php�\x06\x00\x00M,�Y�\x06\x00\x00�#�ն\x01\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00sebastian-diff/LICENSE\r\x06\x00\x00M,�Y\r\x06\x00\x00\n
      �~��\x01\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00sebastian-diff/Chunk.php�\x06\x00\x00M,�Y�\x06\x00\x00v�|��\x01\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00sebastian-diff/Diff.php�\x04\x00\x00M,�Y�\x04\x00\x00S\fdh�\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00sebastian-diff/Differ.php\x18)\x00\x00M,�Y\x18)\x00\x00S�9R�\x01\x00\x00\x00\x00\x00\x00/\x00\x00\x00sebastian-diff/LCS/LongestCommonSubsequence.phpj\x02\x00\x00M,�Yj\x02\x00\x00�\x06\/�\x01\x00\x00\x00\x00\x00\x00L\x00\x00\x00sebastian-diff/LCS/MemoryEfficientLongestCommonSubsequenceImplementation.phpR    \x00\x00M,�YR    \x00\x00�o��\x01\x00\x00\x00\x00\x00\x00J\x00\x00\x00sebastian-diff/LCS/TimeEfficientLongestCommonSubsequenceImplementation.php�\x07\x00\x00M,�Y�\x07\x00\x00��\x07��\x01\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00sebastian-diff/Line.php�\x03\x00\x00M,�Y�\x03\x00\x00\x1Ee�ܶ\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00sebastian-diff/Parser.php�\v\x00\x00M,�Y�\v\x00\x00&amp;�\fǶ\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00sebastian-environment/LICENSE\x14\x06\x00\x00M,�Y\x14\x06\x00\x00\x07r�=�\x01\x00\x00\x00\x00\x00\x00!\x00\x00\x00sebastian-environment/Console.phpP\x0E\x00\x00M,�YP\x0E\x00\x00Ű�p�\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-environment/OperatingSystem.php�\x04\x00\x00M,�Y�\x04\x00\x00�&lt;\x12\x01�\x01\x00\x00\x00\x00\x00\x00!\x00\x00\x00sebastian-environment/Runtime.php�\x12\x00\x00M,�Y�\x12\x00\x00U�J��\x01\x00\x00\x00\x00\x00\x00\x1A\x00\x00\x00sebastian-exporter/LICENSE\x07\x06\x00\x00M,�Y\x07\x06\x00\x00��`\x00�\x01\x00\x00\x00\x00\x00\x00\x1F\x00\x00\x00sebastian-exporter/Exporter.php�#\x00\x00M,�Y�#\x00\x00!�Y��\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00sebastian-recursion-context/LICENSE\x10\x06\x00\x00M,�Y\x10\x06\x00\x00\v��&gt;�\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00sebastian-recursion-context/Context.php{\x0F\x00\x00M,�Y{\x0F\x00\x00�\x7F���\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-recursion-context/Exception.phpJ\x01\x00\x00M,�YJ\x01\x00\x00���\x01\x00\x00\x00\x00\x00\x008\x00\x00\x00sebastian-recursion-context/InvalidArgumentException.php�\x01\x00\x00M,�Y�\x01\x00\x00m\x18\x15H�\x01\x00\x00\x00\x00\x00\x00%\x00\x00\x00sebastian-resource-operations/LICENSE\r\x06\x00\x00M,�Y\r\x06\x00\x00I���\x01\x00\x00\x00\x00\x00\x004\x00\x00\x00sebastian-resource-operations/ResourceOperations.php�U\x00\x00M,�Y�U\x00\x00�\x11hն\x01\x00\x00\x00\x00\x00\x00\x1E\x00\x00\x00sebastian-global-state/LICENSE\x15\x06\x00\x00M,�Y\x15\x06\x00\x00q~Pd�\x01\x00\x00\x00\x00\x00\x00$\x00\x00\x00sebastian-global-state/Blacklist.php�\n
      \x00\x00M,�Y�\n
      \x00\x00ܫ9��\x01\x00\x00\x00\x00\x00\x00&#039;\x00\x00\x00sebastian-global-state/CodeExporter.phpf    \x00\x00M,�Yf    \x00\x00\x15|�!�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00sebastian-global-state/Restorer.php&quot;\x11\x00\x00M,�Y&quot;\x11\x00\x00M��\x1F�\x01\x00\x00\x00\x00\x00\x00#\x00\x00\x00sebastian-global-state/Snapshot.php�!\x00\x00M,�Y�!\x00\x00Ò���\x01\x00\x00\x00\x00\x00\x00/\x00\x00\x00sebastian-global-state/exceptions/Exception.phpP\x01\x00\x00M,�YP\x01\x00\x00W\x14�Z�\x01\x00\x00\x00\x00\x00\x006\x00\x00\x00sebastian-global-state/exceptions/RuntimeException.php�\x01\x00\x00M,�Y�\x01\x00\x00\f�y˶\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00object-enumerator/LICENSE\x10\x06\x00\x00M,�Y\x10\x06\x00\x00�f�ζ\x01\x00\x00\x00\x00\x00\x00*\x00\x00\x00sebastian-object-enumerator/Enumerator.phpr\x08\x00\x00M,�Yr\x08\x00\x00z�\��\x01\x00\x00\x00\x00\x00\x00)\x00\x00\x00sebastian-object-enumerator/Exception.php6\x01\x00\x00M,�Y6\x01\x00\x00n$*a�\x01\x00\x00\x00\x00\x00\x008\x00\x00\x00sebastian-object-enumerator/InvalidArgumentException.phpx\x01\x00\x00M,�Yx\x01\x00\x00��&#039;�\x01\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00object-reflector/LICENSE\n
      \x06\x00\x00M,�Y\n
      \x06\x00\x00�F���\x01\x00\x00\x00\x00\x00\x00(\x00\x00\x00sebastian-object-reflector/Exception.phpN\x01\x00\x00M,�YN\x01\x00\x00� ^�\x01\x00\x00\x00\x00\x00\x007\x00\x00\x00sebastian-object-reflector/InvalidArgumentException.php�\x01\x00\x00M,�Y�\x01\x00\x00Y\x0E�J�\x01\x00\x00\x00\x00\x00\x00.\x00\x00\x00sebastian-object-reflector/ObjectReflector.php�\x04\x00\x00M,�Y�\x04\x00\x00�\f&quot;\x19�\x01\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00sebastian-version/LICENSE\x06\x06\x00\x00M,�Y\x06\x06\x00\x00\x04n\x1E\x1D�\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00sebastian-version/Version.php�\x08\x00\x00M,�Y�\x08\x00\x00N\x19\Ƕ\x01\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00doctrine-instantiator/LICENSE$\x04\x00\x00M,�Y$\x04\x00\x00</pre>\n
      \n
                        \n
                      \n
                      <div class="frame-comments empty">\n
                        </div>\n
      \n
            </div>\n
        </div>\n
      <div class="details">\n
        <h2 class="details-heading">Environment &amp; details:</h2>\n
      \n
        <div class="data-table-container" id="data-tables">\n
                <div class="data-table" id="sg-get-data">\n
                          <label class="empty">GET Data</label>\n
                  <span class="empty">empty</span>\n
                    </div>\n
                <div class="data-table" id="sg-post-data">\n
                          <label class="empty">POST Data</label>\n
                  <span class="empty">empty</span>\n
                    </div>\n
                <div class="data-table" id="sg-files">\n
                          <label class="empty">Files</label>\n
                  <span class="empty">empty</span>\n
                    </div>\n
                <div class="data-table" id="sg-cookies">\n
                          <label class="empty">Cookies</label>\n
                  <span class="empty">empty</span>\n
                    </div>\n
                <div class="data-table" id="sg-session">\n
                          <label class="empty">Session</label>\n
                  <span class="empty">empty</span>\n
                    </div>\n
                <div class="data-table" id="sg-serverrequest-data">\n
                          <label>Server/Request Data</label>\n
                  <table class="data-table">\n
                    <thead>\n
                      <tr>\n
                        <td class="data-table-k">Key</td>\n
                        <td class="data-table-v">Value</td>\n
                      </tr>\n
                    </thead>\n
                                <tr>\n
                      <td>TERM_SESSION_ID</td>\n
                      <td><pre class=sf-dump id=sf-dump-502077652 data-indent-pad="  ">"<span class=sf-dump-str title="43 characters">w0t0p0:E0869161-47E9-457D-94C7-81FF98761D2C</span>"\n
      </pre><script>Sfdump("sf-dump-502077652")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SSH_AUTH_SOCK</td>\n
                      <td><pre class=sf-dump id=sf-dump-1802107623 data-indent-pad="  ">"<span class=sf-dump-str title="51 characters">/private/tmp/com.apple.launchd.jpHJ0Dv97i/Listeners</span>"\n
      </pre><script>Sfdump("sf-dump-1802107623")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>Apple_PubSub_Socket_Render</td>\n
                      <td><pre class=sf-dump id=sf-dump-1786954138 data-indent-pad="  ">"<span class=sf-dump-str title="48 characters">/private/tmp/com.apple.launchd.9ThrN4DPao/Render</span>"\n
      </pre><script>Sfdump("sf-dump-1786954138")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>COLORFGBG</td>\n
                      <td><pre class=sf-dump id=sf-dump-1611348006 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">15;0</span>"\n
      </pre><script>Sfdump("sf-dump-1611348006")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>ITERM_PROFILE</td>\n
                      <td><pre class=sf-dump id=sf-dump-349818334 data-indent-pad="  ">"<span class=sf-dump-str title="7 characters">Default</span>"\n
      </pre><script>Sfdump("sf-dump-349818334")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>XPC_FLAGS</td>\n
                      <td><pre class=sf-dump id=sf-dump-481450098 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">0x0</span>"\n
      </pre><script>Sfdump("sf-dump-481450098")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>LANG</td>\n
                      <td><pre class=sf-dump id=sf-dump-37026279 data-indent-pad="  ">"<span class=sf-dump-str title="11 characters">en_US.UTF-8</span>"\n
      </pre><script>Sfdump("sf-dump-37026279")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PWD</td>\n
                      <td><pre class=sf-dump id=sf-dump-1097413323 data-indent-pad="  ">"<span class=sf-dump-str title="30 characters">/Users/bobbyborisov/code/forum</span>"\n
      </pre><script>Sfdump("sf-dump-1097413323")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SHELL</td>\n
                      <td><pre class=sf-dump id=sf-dump-831518771 data-indent-pad="  ">"<span class=sf-dump-str title="8 characters">/bin/zsh</span>"\n
      </pre><script>Sfdump("sf-dump-831518771")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>TERM_PROGRAM_VERSION</td>\n
                      <td><pre class=sf-dump id=sf-dump-1096512854 data-indent-pad="  ">"<span class=sf-dump-str title="5 characters">3.1.2</span>"\n
      </pre><script>Sfdump("sf-dump-1096512854")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>TERM_PROGRAM</td>\n
                      <td><pre class=sf-dump id=sf-dump-1672234066 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">iTerm.app</span>"\n
      </pre><script>Sfdump("sf-dump-1672234066")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PATH</td>\n
                      <td><pre class=sf-dump id=sf-dump-868528780 data-indent-pad="  ">"<span class=sf-dump-str title="107 characters">/usr/local/gradle/bin:/Users/bobbyborisov/.composer/vendor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin</span>"\n
      </pre><script>Sfdump("sf-dump-868528780")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>COLORTERM</td>\n
                      <td><pre class=sf-dump id=sf-dump-745661040 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">truecolor</span>"\n
      </pre><script>Sfdump("sf-dump-745661040")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>TERM</td>\n
                      <td><pre class=sf-dump id=sf-dump-930963024 data-indent-pad="  ">"<span class=sf-dump-str title="14 characters">xterm-256color</span>"\n
      </pre><script>Sfdump("sf-dump-930963024")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>HOME</td>\n
                      <td><pre class=sf-dump id=sf-dump-730727498 data-indent-pad="  ">"<span class=sf-dump-str title="19 characters">/Users/bobbyborisov</span>"\n
      </pre><script>Sfdump("sf-dump-730727498")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>TMPDIR</td>\n
                      <td><pre class=sf-dump id=sf-dump-1506893094 data-indent-pad="  ">"<span class=sf-dump-str title="49 characters">/var/folders/48/1z2968xj6p5g6fzc1pwqnrp40000gn/T/</span>"\n
      </pre><script>Sfdump("sf-dump-1506893094")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>USER</td>\n
                      <td><pre class=sf-dump id=sf-dump-1633894028 data-indent-pad="  ">"<span class=sf-dump-str title="12 characters">bobbyborisov</span>"\n
      </pre><script>Sfdump("sf-dump-1633894028")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>XPC_SERVICE_NAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-809707388 data-indent-pad="  ">"<span class=sf-dump-str>0</span>"\n
      </pre><script>Sfdump("sf-dump-809707388")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>LOGNAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-2044048919 data-indent-pad="  ">"<span class=sf-dump-str title="12 characters">bobbyborisov</span>"\n
      </pre><script>Sfdump("sf-dump-2044048919")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>__CF_USER_TEXT_ENCODING</td>\n
                      <td><pre class=sf-dump id=sf-dump-1600172470 data-indent-pad="  ">"<span class=sf-dump-str title="13 characters">0x1F5:0x0:0x0</span>"\n
      </pre><script>Sfdump("sf-dump-1600172470")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>ITERM_SESSION_ID</td>\n
                      <td><pre class=sf-dump id=sf-dump-876475283 data-indent-pad="  ">"<span class=sf-dump-str title="43 characters">w0t0p0:E0869161-47E9-457D-94C7-81FF98761D2C</span>"\n
      </pre><script>Sfdump("sf-dump-876475283")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SHLVL</td>\n
                      <td><pre class=sf-dump id=sf-dump-855686973 data-indent-pad="  ">"<span class=sf-dump-str>1</span>"\n
      </pre><script>Sfdump("sf-dump-855686973")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>OLDPWD</td>\n
                      <td><pre class=sf-dump id=sf-dump-2078806905 data-indent-pad="  ">"<span class=sf-dump-str title="24 characters">/Users/bobbyborisov/code</span>"\n
      </pre><script>Sfdump("sf-dump-2078806905")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>ZSH</td>\n
                      <td><pre class=sf-dump id=sf-dump-1591830494 data-indent-pad="  ">"<span class=sf-dump-str title="30 characters">/Users/bobbyborisov/.oh-my-zsh</span>"\n
      </pre><script>Sfdump("sf-dump-1591830494")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PAGER</td>\n
                      <td><pre class=sf-dump id=sf-dump-2111928134 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">less</span>"\n
      </pre><script>Sfdump("sf-dump-2111928134")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>LESS</td>\n
                      <td><pre class=sf-dump id=sf-dump-1553033259 data-indent-pad="  ">"<span class=sf-dump-str title="2 characters">-R</span>"\n
      </pre><script>Sfdump("sf-dump-1553033259")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>LC_CTYPE</td>\n
                      <td><pre class=sf-dump id=sf-dump-878988406 data-indent-pad="  ">"<span class=sf-dump-str title="11 characters">en_US.UTF-8</span>"\n
      </pre><script>Sfdump("sf-dump-878988406")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>LSCOLORS</td>\n
                      <td><pre class=sf-dump id=sf-dump-1473469668 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">Gxfxcxdxbxegedabagacad</span>"\n
      </pre><script>Sfdump("sf-dump-1473469668")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>JAVA_HOME</td>\n
                      <td><pre class=sf-dump id=sf-dump-244666803 data-indent-pad="  ">"<span class=sf-dump-str title="64 characters">/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home</span>"\n
      </pre><script>Sfdump("sf-dump-244666803")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>GRADLE_HOME</td>\n
                      <td><pre class=sf-dump id=sf-dump-1453875119 data-indent-pad="  ">"<span class=sf-dump-str title="17 characters">/usr/local/gradle</span>"\n
      </pre><script>Sfdump("sf-dump-1453875119")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>_</td>\n
                      <td><pre class=sf-dump id=sf-dump-1680976053 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
      </pre><script>Sfdump("sf-dump-1680976053")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PHP_SELF</td>\n
                      <td><pre class=sf-dump id=sf-dump-1362472841 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
      </pre><script>Sfdump("sf-dump-1362472841")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SCRIPT_NAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-246340785 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
      </pre><script>Sfdump("sf-dump-246340785")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SCRIPT_FILENAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-1036405980 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
      </pre><script>Sfdump("sf-dump-1036405980")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PATH_TRANSLATED</td>\n
                      <td><pre class=sf-dump id=sf-dump-612607643 data-indent-pad="  ">"<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
      </pre><script>Sfdump("sf-dump-612607643")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DOCUMENT_ROOT</td>\n
                      <td><pre class=sf-dump id=sf-dump-940497177 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-940497177")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REQUEST_TIME_FLOAT</td>\n
                      <td><pre class=sf-dump id=sf-dump-1480857994 data-indent-pad="  "><span class=sf-dump-num>1510988518.2235</span>\n
      </pre><script>Sfdump("sf-dump-1480857994")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REQUEST_TIME</td>\n
                      <td><pre class=sf-dump id=sf-dump-143292338 data-indent-pad="  "><span class=sf-dump-num>1510988518</span>\n
      </pre><script>Sfdump("sf-dump-143292338")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>argv</td>\n
                      <td><pre class=sf-dump id=sf-dump-1008977220 data-indent-pad="  "><span class=sf-dump-note>array:2</span> [<samp>\n
        <span class=sf-dump-index>0</span> => "<span class=sf-dump-str title="22 characters">/usr/local/bin/phpunit</span>"\n
        <span class=sf-dump-index>1</span> => "<span class=sf-dump-str title="75 characters">--filter=a_user_is_able_to_read_replies_that_are_associated_with_the_thread</span>"\n
      </samp>]\n
      </pre><script>Sfdump("sf-dump-1008977220")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>argc</td>\n
                      <td><pre class=sf-dump id=sf-dump-41614247 data-indent-pad="  "><span class=sf-dump-num>2</span>\n
      </pre><script>Sfdump("sf-dump-41614247")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_NAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-1307217272 data-indent-pad="  ">"<span class=sf-dump-str title="7 characters">Laravel</span>"\n
      </pre><script>Sfdump("sf-dump-1307217272")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_KEY</td>\n
                      <td><pre class=sf-dump id=sf-dump-1455956998 data-indent-pad="  ">"<span class=sf-dump-str title="51 characters">base64:kUmPYbNSRg37PUwL1En4OyhgSo5fzxgYyO2WhCIWLF8=</span>"\n
      </pre><script>Sfdump("sf-dump-1455956998")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_DEBUG</td>\n
                      <td><pre class=sf-dump id=sf-dump-1845091589 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">true</span>"\n
      </pre><script>Sfdump("sf-dump-1845091589")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_LOG_LEVEL</td>\n
                      <td><pre class=sf-dump id=sf-dump-358630324 data-indent-pad="  ">"<span class=sf-dump-str title="5 characters">debug</span>"\n
      </pre><script>Sfdump("sf-dump-358630324")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_URL</td>\n
                      <td><pre class=sf-dump id=sf-dump-1750157085 data-indent-pad="  ">"<span class=sf-dump-str title="16 characters">http://localhost</span>"\n
      </pre><script>Sfdump("sf-dump-1750157085")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-1582763845 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">127.0.0.1</span>"\n
      </pre><script>Sfdump("sf-dump-1582763845")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-824952199 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">3306</span>"\n
      </pre><script>Sfdump("sf-dump-824952199")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_USERNAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-11568563 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">root</span>"\n
      </pre><script>Sfdump("sf-dump-11568563")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-2007231846 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-2007231846")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>BROADCAST_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-1033900582 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">log</span>"\n
      </pre><script>Sfdump("sf-dump-1033900582")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SESSION_LIFETIME</td>\n
                      <td><pre class=sf-dump id=sf-dump-203619075 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">120</span>"\n
      </pre><script>Sfdump("sf-dump-203619075")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-923926514 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">127.0.0.1</span>"\n
      </pre><script>Sfdump("sf-dump-923926514")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-1178534385 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-1178534385")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-94950474 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">6379</span>"\n
      </pre><script>Sfdump("sf-dump-94950474")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-114148675 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">smtp</span>"\n
      </pre><script>Sfdump("sf-dump-114148675")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-993203120 data-indent-pad="  ">"<span class=sf-dump-str title="16 characters">smtp.mailtrap.io</span>"\n
      </pre><script>Sfdump("sf-dump-993203120")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-439406905 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">2525</span>"\n
      </pre><script>Sfdump("sf-dump-439406905")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_USERNAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-5427774 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-5427774")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-2070859528 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-2070859528")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_ENCRYPTION</td>\n
                      <td><pre class=sf-dump id=sf-dump-963523903 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-963523903")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_ID</td>\n
                      <td><pre class=sf-dump id=sf-dump-232626543 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-232626543")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_KEY</td>\n
                      <td><pre class=sf-dump id=sf-dump-476824068 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-476824068")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_SECRET</td>\n
                      <td><pre class=sf-dump id=sf-dump-1030192769 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-1030192769")</script>\n
      </td>\n
                    </tr>\n
                              </table>\n
                    </div>\n
                <div class="data-table" id="sg-environment-variables">\n
                          <label>Environment Variables</label>\n
                  <table class="data-table">\n
                    <thead>\n
                      <tr>\n
                        <td class="data-table-k">Key</td>\n
                        <td class="data-table-v">Value</td>\n
                      </tr>\n
                    </thead>\n
                                <tr>\n
                      <td>APP_ENV</td>\n
                      <td><pre class=sf-dump id=sf-dump-1107680747 data-indent-pad="  ">"<span class=sf-dump-str title="7 characters">testing</span>"\n
      </pre><script>Sfdump("sf-dump-1107680747")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_CONNECTION</td>\n
                      <td><pre class=sf-dump id=sf-dump-665339983 data-indent-pad="  ">"<span class=sf-dump-str title="6 characters">sqlite</span>"\n
      </pre><script>Sfdump("sf-dump-665339983")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_DATABASE</td>\n
                      <td><pre class=sf-dump id=sf-dump-2086464153 data-indent-pad="  ">"<span class=sf-dump-str title="8 characters">:memory:</span>"\n
      </pre><script>Sfdump("sf-dump-2086464153")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>CACHE_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-2105875412 data-indent-pad="  ">"<span class=sf-dump-str title="5 characters">array</span>"\n
      </pre><script>Sfdump("sf-dump-2105875412")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SESSION_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-1363592122 data-indent-pad="  ">"<span class=sf-dump-str title="5 characters">array</span>"\n
      </pre><script>Sfdump("sf-dump-1363592122")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>QUEUE_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-941318718 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">sync</span>"\n
      </pre><script>Sfdump("sf-dump-941318718")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_NAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-447164609 data-indent-pad="  ">"<span class=sf-dump-str title="7 characters">Laravel</span>"\n
      </pre><script>Sfdump("sf-dump-447164609")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_KEY</td>\n
                      <td><pre class=sf-dump id=sf-dump-1880999971 data-indent-pad="  ">"<span class=sf-dump-str title="51 characters">base64:kUmPYbNSRg37PUwL1En4OyhgSo5fzxgYyO2WhCIWLF8=</span>"\n
      </pre><script>Sfdump("sf-dump-1880999971")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_DEBUG</td>\n
                      <td><pre class=sf-dump id=sf-dump-1680348974 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">true</span>"\n
      </pre><script>Sfdump("sf-dump-1680348974")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_LOG_LEVEL</td>\n
                      <td><pre class=sf-dump id=sf-dump-454612625 data-indent-pad="  ">"<span class=sf-dump-str title="5 characters">debug</span>"\n
      </pre><script>Sfdump("sf-dump-454612625")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>APP_URL</td>\n
                      <td><pre class=sf-dump id=sf-dump-30811562 data-indent-pad="  ">"<span class=sf-dump-str title="16 characters">http://localhost</span>"\n
      </pre><script>Sfdump("sf-dump-30811562")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-426477360 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">127.0.0.1</span>"\n
      </pre><script>Sfdump("sf-dump-426477360")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-1327943342 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">3306</span>"\n
      </pre><script>Sfdump("sf-dump-1327943342")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_USERNAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-873378738 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">root</span>"\n
      </pre><script>Sfdump("sf-dump-873378738")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>DB_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-467818904 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-467818904")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>BROADCAST_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-1474706439 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">log</span>"\n
      </pre><script>Sfdump("sf-dump-1474706439")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>SESSION_LIFETIME</td>\n
                      <td><pre class=sf-dump id=sf-dump-621119624 data-indent-pad="  ">"<span class=sf-dump-str title="3 characters">120</span>"\n
      </pre><script>Sfdump("sf-dump-621119624")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-1493733566 data-indent-pad="  ">"<span class=sf-dump-str title="9 characters">127.0.0.1</span>"\n
      </pre><script>Sfdump("sf-dump-1493733566")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-643016579 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-643016579")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>REDIS_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-1641240560 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">6379</span>"\n
      </pre><script>Sfdump("sf-dump-1641240560")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_DRIVER</td>\n
                      <td><pre class=sf-dump id=sf-dump-882459785 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">smtp</span>"\n
      </pre><script>Sfdump("sf-dump-882459785")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_HOST</td>\n
                      <td><pre class=sf-dump id=sf-dump-834802396 data-indent-pad="  ">"<span class=sf-dump-str title="16 characters">smtp.mailtrap.io</span>"\n
      </pre><script>Sfdump("sf-dump-834802396")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_PORT</td>\n
                      <td><pre class=sf-dump id=sf-dump-1549846620 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">2525</span>"\n
      </pre><script>Sfdump("sf-dump-1549846620")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_USERNAME</td>\n
                      <td><pre class=sf-dump id=sf-dump-1780732001 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-1780732001")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_PASSWORD</td>\n
                      <td><pre class=sf-dump id=sf-dump-1171563577 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-1171563577")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>MAIL_ENCRYPTION</td>\n
                      <td><pre class=sf-dump id=sf-dump-514255889 data-indent-pad="  ">"<span class=sf-dump-str title="4 characters">null</span>"\n
      </pre><script>Sfdump("sf-dump-514255889")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_ID</td>\n
                      <td><pre class=sf-dump id=sf-dump-743595330 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-743595330")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_KEY</td>\n
                      <td><pre class=sf-dump id=sf-dump-1634927311 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-1634927311")</script>\n
      </td>\n
                    </tr>\n
                                <tr>\n
                      <td>PUSHER_APP_SECRET</td>\n
                      <td><pre class=sf-dump id=sf-dump-1867684562 data-indent-pad="  ">""\n
      </pre><script>Sfdump("sf-dump-1867684562")</script>\n
      </td>\n
                    </tr>\n
                              </table>\n
                    </div>\n
            </div>\n
      \n
          <div class="data-table-container" id="handlers">\n
          <label>Registered Handlers</label>\n
                <div class="handler active">\n
              0. Whoops\Handler\PrettyPageHandler      </div>\n
            </div>\n
      \n
      </div>\n
      </div>\n
            </div>\n
          </div>\n
      \n
          <script>var r=null;window.PR_SHOULD_USE_CONTINUATION=!0;\n
      (function(){function O(a){function i(d){var a=d.charCodeAt(0);if(a!==92)return a;var f=d.charAt(1);return(a=s[f])?a:"0"<=f&&f<="7"?parseInt(d.substring(1),8):f==="u"||f==="x"?parseInt(d.substring(2),16):d.charCodeAt(1)}function g(d){if(d<32)return(d<16?"\\x0":"\\x")+d.toString(16);d=String.fromCharCode(d);return d==="\\"||d==="-"||d==="]"||d==="^"?"\\"+d:d}function j(d){var a=d.substring(1,d.length-1).match(/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g),d=[],f=\n
      a[0]==="^",b=["["];f&&b.push("^");for(var f=f?1:0,c=a.length;f<c;++f){var h=a[f];if(/\\[bdsw]/i.test(h))b.push(h);else{var h=i(h),e;f+2<c&&"-"===a[f+1]?(e=i(a[f+2]),f+=2):e=h;d.push([h,e]);e<65||h>122||(e<65||h>90||d.push([Math.max(65,h)|32,Math.min(e,90)|32]),e<97||h>122||d.push([Math.max(97,h)&-33,Math.min(e,122)&-33]))}}d.sort(function(d,a){return d[0]-a[0]||a[1]-d[1]});a=[];c=[];for(f=0;f<d.length;++f)h=d[f],h[0]<=c[1]+1?c[1]=Math.max(c[1],h[1]):a.push(c=h);for(f=0;f<a.length;++f)h=a[f],b.push(g(h[0])),\n
      h[1]>h[0]&&(h[1]+1>h[0]&&b.push("-"),b.push(g(h[1])));b.push("]");return b.join("")}function t(d){for(var a=d.source.match(/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g),b=a.length,i=[],c=0,h=0;c<b;++c){var e=a[c];e==="("?++h:"\\"===e.charAt(0)&&(e=+e.substring(1))&&(e<=h?i[e]=-1:a[c]=g(e))}for(c=1;c<i.length;++c)-1===i[c]&&(i[c]=++z);for(h=c=0;c<b;++c)e=a[c],e==="("?(++h,i[h]||(a[c]="(?:")):"\\"===e.charAt(0)&&(e=+e.substring(1))&&e<=h&&\n
      (a[c]="\\"+i[e]);for(c=0;c<b;++c)"^"===a[c]&&"^"!==a[c+1]&&(a[c]="");if(d.ignoreCase&&w)for(c=0;c<b;++c)e=a[c],d=e.charAt(0),e.length>=2&&d==="["?a[c]=j(e):d!=="\\"&&(a[c]=e.replace(/[A-Za-z]/g,function(d){d=d.charCodeAt(0);return"["+String.fromCharCode(d&-33,d|32)+"]"}));return a.join("")}for(var z=0,w=!1,k=!1,m=0,b=a.length;m<b;++m){var o=a[m];if(o.ignoreCase)k=!0;else if(/[a-z]/i.test(o.source.replace(/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi,""))){w=!0;k=!1;break}}for(var s={b:8,t:9,n:10,v:11,\n
      f:12,r:13},q=[],m=0,b=a.length;m<b;++m){o=a[m];if(o.global||o.multiline)throw Error(""+o);q.push("(?:"+t(o)+")")}return RegExp(q.join("|"),k?"gi":"g")}function P(a,i){function g(a){switch(a.nodeType){case 1:if(j.test(a.className))break;for(var b=a.firstChild;b;b=b.nextSibling)g(b);b=a.nodeName.toLowerCase();if("br"===b||"li"===b)t[k]="\n",w[k<<1]=z++,w[k++<<1|1]=a;break;case 3:case 4:b=a.nodeValue,b.length&&(b=i?b.replace(/\r\n?/g,"\n"):b.replace(/[\t\n\r ]+/g," "),t[k]=b,w[k<<1]=z,z+=b.length,w[k++<<\n
      1|1]=a)}}var j=/(?:^|\s)nocode(?:\s|$)/,t=[],z=0,w=[],k=0;g(a);return{a:t.join("").replace(/\n$/,""),d:w}}function E(a,i,g,j){i&&(a={a:i,e:a},g(a),j.push.apply(j,a.g))}function x(a,i){function g(a){for(var k=a.e,m=[k,"pln"],b=0,o=a.a.match(t)||[],s={},q=0,d=o.length;q<d;++q){var v=o[q],f=s[v],u=void 0,c;if(typeof f==="string")c=!1;else{var h=j[v.charAt(0)];if(h)u=v.match(h[1]),f=h[0];else{for(c=0;c<z;++c)if(h=i[c],u=v.match(h[1])){f=h[0];break}u||(f="pln")}if((c=f.length>=5&&"lang-"===f.substring(0,\n
      5))&&!(u&&typeof u[1]==="string"))c=!1,f="src";c||(s[v]=f)}h=b;b+=v.length;if(c){c=u[1];var e=v.indexOf(c),p=e+c.length;u[2]&&(p=v.length-u[2].length,e=p-c.length);f=f.substring(5);E(k+h,v.substring(0,e),g,m);E(k+h+e,c,F(f,c),m);E(k+h+p,v.substring(p),g,m)}else m.push(k+h,f)}a.g=m}var j={},t;(function(){for(var g=a.concat(i),k=[],m={},b=0,o=g.length;b<o;++b){var s=g[b],q=s[3];if(q)for(var d=q.length;--d>=0;)j[q.charAt(d)]=s;s=s[1];q=""+s;m.hasOwnProperty(q)||(k.push(s),m[q]=r)}k.push(/[\S\s]/);t=\n
      O(k)})();var z=i.length;return g}function l(a){var i=[],g=[];a.tripleQuotedStrings?i.push(["str",/^(?:'''(?:[^'\\]|\\[\S\s]|''?(?=[^']))*(?:'''|$)|"""(?:[^"\\]|\\[\S\s]|""?(?=[^"]))*(?:"""|$)|'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$))/,r,"'\""]):a.multiLineStrings?i.push(["str",/^(?:'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/,r,"'\"`"]):i.push(["str",/^(?:'(?:[^\n\r'\\]|\\.)*(?:'|$)|"(?:[^\n\r"\\]|\\.)*(?:"|$))/,r,"\"'"]);a.verbatimStrings&&\n
      g.push(["str",/^@"(?:[^"]|"")*(?:"|$)/,r]);var j=a.hashComments;j&&(a.cStyleComments?(j>1?i.push(["com",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,r,"#"]):i.push(["com",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\n\r]*)/,r,"#"]),g.push(["str",/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,r])):i.push(["com",/^#[^\n\r]*/,r,"#"]));a.cStyleComments&&(g.push(["com",/^\/\/[^\n\r]*/,r]),g.push(["com",/^\/\*[\S\s]*?(?:\*\/|$)/,\n
      r]));a.regexLiterals&&g.push(["lang-regex",/^(?:^^\.?|[+-]|[!=]={0,2}|#|%=?|&&?=?|\(|\*=?|[+-]=|->|\/=?|::?|<<?=?|>{1,3}=?|[,;?@[{~]|\^\^?=?|\|\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\s*(\/(?=[^*/])(?:[^/[\\]|\\[\S\s]|\[(?:[^\\\]]|\\[\S\s])*(?:]|$))+\/)/]);(j=a.types)&&g.push(["typ",j]);a=(""+a.keywords).replace(/^ | $/g,"");a.length&&g.push(["kwd",RegExp("^(?:"+a.replace(/[\s,]+/g,"|")+")\\b"),r]);i.push(["pln",/^\s+/,r," \r\n\t\u00a0"]);g.push(["lit",\n
      /^@[$_a-z][\w$@]*/i,r],["typ",/^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/,r],["pln",/^[$_a-z][\w$@]*/i,r],["lit",/^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i,r,"0123456789"],["pln",/^\\[\S\s]?/,r],["pun",/^.[^\s\w"$'./@\\`]*/,r]);return x(i,g)}function G(a,i,g){function j(a){switch(a.nodeType){case 1:if(z.test(a.className))break;if("br"===a.nodeName)t(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)j(a);break;case 3:case 4:if(g){var b=\n
      a.nodeValue,f=b.match(n);if(f){var i=b.substring(0,f.index);a.nodeValue=i;(b=b.substring(f.index+f[0].length))&&a.parentNode.insertBefore(k.createTextNode(b),a.nextSibling);t(a);i||a.parentNode.removeChild(a)}}}}function t(a){function i(a,b){var d=b?a.cloneNode(!1):a,e=a.parentNode;if(e){var e=i(e,1),f=a.nextSibling;e.appendChild(d);for(var g=f;g;g=f)f=g.nextSibling,e.appendChild(g)}return d}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;for(var a=i(a.nextSibling,0),f;(f=a.parentNode)&&f.nodeType===\n
      1;)a=f;b.push(a)}for(var z=/(?:^|\s)nocode(?:\s|$)/,n=/\r\n?|\n/,k=a.ownerDocument,m=k.createElement("li");a.firstChild;)m.appendChild(a.firstChild);for(var b=[m],o=0;o<b.length;++o)j(b[o]);i===(i|0)&&b[0].setAttribute("value",i);var s=k.createElement("ol");s.className="linenums";for(var i=Math.max(0,i-1|0)||0,o=0,q=b.length;o<q;++o)m=b[o],m.className="L"+(o+i)%10,m.firstChild||m.appendChild(k.createTextNode("\u00a0")),s.appendChild(m);a.appendChild(s)}function n(a,i){for(var g=i.length;--g>=0;){var j=\n
      i[g];A.hasOwnProperty(j)?C.console&&console.warn("cannot override language handler %s",j):A[j]=a}}function F(a,i){if(!a||!A.hasOwnProperty(a))a=/^\s*</.test(i)?"default-markup":"default-code";return A[a]}function H(a){var i=a.h;try{var g=P(a.c,a.i),j=g.a;a.a=j;a.d=g.d;a.e=0;F(i,j)(a);var t=/\bMSIE\s(\d+)/.exec(navigator.userAgent),t=t&&+t[1]<=8,i=/\n/g,n=a.a,w=n.length,g=0,k=a.d,m=k.length,j=0,b=a.g,o=b.length,s=0;b[o]=w;var q,d;for(d=q=0;d<o;)b[d]!==b[d+2]?(b[q++]=b[d++],b[q++]=b[d++]):d+=2;o=q;\n
      for(d=q=0;d<o;){for(var v=b[d],f=b[d+1],u=d+2;u+2<=o&&b[u+1]===f;)u+=2;b[q++]=v;b[q++]=f;d=u}b.length=q;var c=a.c,h;if(c)h=c.style.display,c.style.display="none";try{for(;j<m;){var e=k[j+2]||w,p=b[s+2]||w,u=Math.min(e,p),l=k[j+1],D;if(l.nodeType!==1&&(D=n.substring(g,u))){t&&(D=D.replace(i,"\r"));l.nodeValue=D;var y=l.ownerDocument,x=y.createElement("span");x.className=b[s+1];var B=l.parentNode;B.replaceChild(x,l);x.appendChild(l);g<e&&(k[j+1]=l=y.createTextNode(n.substring(u,e)),B.insertBefore(l,\n
      x.nextSibling))}g=u;g>=e&&(j+=2);g>=p&&(s+=2)}}finally{if(c)c.style.display=h}}catch(A){C.console&&console.log(A&&A.stack?A.stack:A)}}var C=window,y=["break,continue,do,else,for,if,return,while"],B=[[y,"auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"],I=[B,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],\n
      J=[B,"abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient"],K=[J,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,let,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var,virtual,where"],B=[B,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"],\n
      L=[y,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],M=[y,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],y=[y,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"],N=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/,\n
      Q=/\S/,R=l({keywords:[I,K,B,"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END"+L,M,y],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),A={};n(R,["default-code"]);n(x([],[["pln",/^[^<?]+/],["dec",/^<!\w[^>]*(?:>|$)/],["com",/^<\!--[\S\s]*?(?:--\>|$)/],["lang-",/^<\?([\S\s]+?)(?:\?>|$)/],["lang-",/^<%([\S\s]+?)(?:%>|$)/],["pun",/^(?:<[%?]|[%?]>)/],["lang-",\n
      /^<xmp\b[^>]*>([\S\s]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\S\s]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\S\s]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]);n(x([["pln",/^\s+/,r," \t\r\n"],["atv",/^(?:"[^"]*"?|'[^']*'?)/,r,"\"'"]],[["tag",/^^<\/?[a-z](?:[\w-.:]*\w)?|\/?>$/i],["atn",/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^\s"'>]*(?:[^\s"'/>]|\/(?=\s)))/],["pun",/^[/<->]+/],\n
      ["lang-js",/^on\w+\s*=\s*"([^"]+)"/i],["lang-js",/^on\w+\s*=\s*'([^']+)'/i],["lang-js",/^on\w+\s*=\s*([^\s"'>]+)/i],["lang-css",/^style\s*=\s*"([^"]+)"/i],["lang-css",/^style\s*=\s*'([^']+)'/i],["lang-css",/^style\s*=\s*([^\s"'>]+)/i]]),["in.tag"]);n(x([],[["atv",/^[\S\s]+/]]),["uq.val"]);n(l({keywords:I,hashComments:!0,cStyleComments:!0,types:N}),["c","cc","cpp","cxx","cyc","m"]);n(l({keywords:"null,true,false"}),["json"]);n(l({keywords:K,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:N}),\n
      ["cs"]);n(l({keywords:J,cStyleComments:!0}),["java"]);n(l({keywords:y,hashComments:!0,multiLineStrings:!0}),["bsh","csh","sh"]);n(l({keywords:L,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),["cv","py"]);n(l({keywords:"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["perl","pl","pm"]);n(l({keywords:M,hashComments:!0,\n
      multiLineStrings:!0,regexLiterals:!0}),["rb"]);n(l({keywords:B,cStyleComments:!0,regexLiterals:!0}),["js"]);n(l({keywords:"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),["coffee"]);n(x([],[["str",/^[\S\s]+/]]),["regex"]);var S=C.PR={createSimpleLexer:x,registerLangHandler:n,sourceDecorator:l,\n
      PR_ATTRIB_NAME:"atn",PR_ATTRIB_VALUE:"atv",PR_COMMENT:"com",PR_DECLARATION:"dec",PR_KEYWORD:"kwd",PR_LITERAL:"lit",PR_NOCODE:"nocode",PR_PLAIN:"pln",PR_PUNCTUATION:"pun",PR_SOURCE:"src",PR_STRING:"str",PR_TAG:"tag",PR_TYPE:"typ",prettyPrintOne:C.prettyPrintOne=function(a,i,g){var j=document.createElement("pre");j.innerHTML=a;g&&G(j,g,!0);H({h:i,j:g,c:j,i:1});return j.innerHTML},prettyPrint:C.prettyPrint=function(a){function i(){var u;for(var g=C.PR_SHOULD_USE_CONTINUATION?k.now()+250:Infinity;m<j.length&&\n
      k.now()<g;m++){var c=j[m],h=c.className;if(s.test(h)&&!q.test(h)){for(var e=!1,p=c.parentNode;p;p=p.parentNode)if(f.test(p.tagName)&&p.className&&s.test(p.className)){e=!0;break}if(!e){c.className+=" prettyprinted";var h=h.match(o),n;if(e=!h){for(var e=c,p=void 0,l=e.firstChild;l;l=l.nextSibling)var t=l.nodeType,p=t===1?p?e:l:t===3?Q.test(l.nodeValue)?e:p:p;e=(n=p===e?void 0:p)&&v.test(n.tagName)}e&&(h=n.className.match(o));h&&(h=h[1]);u=d.test(c.tagName)?1:(e=(e=c.currentStyle)?e.whiteSpace:document.defaultView&&\n
      document.defaultView.getComputedStyle?document.defaultView.getComputedStyle(c,r).getPropertyValue("white-space"):0)&&"pre"===e.substring(0,3),e=u;(p=(p=c.className.match(/\blinenums\b(?::(\d+))?/))?p[1]&&p[1].length?+p[1]:!0:!1)&&G(c,p,e);b={h:h,c:c,j:p,i:e};H(b)}}}m<j.length?setTimeout(i,250):a&&a()}for(var g=[document.getElementsByTagName("pre"),document.getElementsByTagName("code"),document.getElementsByTagName("xmp")],j=[],n=0;n<g.length;++n)for(var l=0,w=g[n].length;l<w;++l)j.push(g[n][l]);var g=\n
      r,k=Date;k.now||(k={now:function(){return+new Date}});var m=0,b,o=/\blang(?:uage)?-([\w.]+)(?!\S)/,s=/\bprettyprint\b/,q=/\bprettyprinted\b/,d=/pre|xmp/i,v=/^code$/i,f=/^(?:pre|code|xmp)$/i;i()}};typeof define==="function"&&define.amd&&define("google-code-prettify",[],function(){return S})})();\n
      </script>\n
          <script>/* Zepto v1.1.3 - zepto event ajax form ie - zeptojs.com/license */\n
      var Zepto=function(){function L(t){return null==t?String(t):j[T.call(t)]||"object"}function Z(t){return"function"==L(t)}function $(t){return null!=t&&t==t.window}function _(t){return null!=t&&t.nodeType==t.DOCUMENT_NODE}function D(t){return"object"==L(t)}function R(t){return D(t)&&!$(t)&&Object.getPrototypeOf(t)==Object.prototype}function M(t){return"number"==typeof t.length}function k(t){return s.call(t,function(t){return null!=t})}function z(t){return t.length>0?n.fn.concat.apply([],t):t}function F(t){return t.replace(/::/g,"/").replace(/([A-Z]+)([A-Z][a-z])/g,"$1_$2").replace(/([a-z\d])([A-Z])/g,"$1_$2").replace(/_/g,"-").toLowerCase()}function q(t){return t in f?f[t]:f[t]=new RegExp("(^|\\s)"+t+"(\\s|$)")}function H(t,e){return"number"!=typeof e||c[F(t)]?e:e+"px"}function I(t){var e,n;return u[t]||(e=a.createElement(t),a.body.appendChild(e),n=getComputedStyle(e,"").getPropertyValue("display"),e.parentNode.removeChild(e),"none"==n&&(n="block"),u[t]=n),u[t]}function V(t){return"children"in t?o.call(t.children):n.map(t.childNodes,function(t){return 1==t.nodeType?t:void 0})}function U(n,i,r){for(e in i)r&&(R(i[e])||A(i[e]))?(R(i[e])&&!R(n[e])&&(n[e]={}),A(i[e])&&!A(n[e])&&(n[e]=[]),U(n[e],i[e],r)):i[e]!==t&&(n[e]=i[e])}function B(t,e){return null==e?n(t):n(t).filter(e)}function J(t,e,n,i){return Z(e)?e.call(t,n,i):e}function X(t,e,n){null==n?t.removeAttribute(e):t.setAttribute(e,n)}function W(e,n){var i=e.className,r=i&&i.baseVal!==t;return n===t?r?i.baseVal:i:void(r?i.baseVal=n:e.className=n)}function Y(t){var e;try{return t?"true"==t||("false"==t?!1:"null"==t?null:/^0/.test(t)||isNaN(e=Number(t))?/^[\[\{]/.test(t)?n.parseJSON(t):t:e):t}catch(i){return t}}function G(t,e){e(t);for(var n in t.childNodes)G(t.childNodes[n],e)}var t,e,n,i,C,N,r=[],o=r.slice,s=r.filter,a=window.document,u={},f={},c={"column-count":1,columns:1,"font-weight":1,"line-height":1,opacity:1,"z-index":1,zoom:1},l=/^\s*<(\w+|!)[^>]*>/,h=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,p=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,d=/^(?:body|html)$/i,m=/([A-Z])/g,g=["val","css","html","text","data","width","height","offset"],v=["after","prepend","before","append"],y=a.createElement("table"),x=a.createElement("tr"),b={tr:a.createElement("tbody"),tbody:y,thead:y,tfoot:y,td:x,th:x,"*":a.createElement("div")},w=/complete|loaded|interactive/,E=/^[\w-]*$/,j={},T=j.toString,S={},O=a.createElement("div"),P={tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},A=Array.isArray||function(t){return t instanceof Array};return S.matches=function(t,e){if(!e||!t||1!==t.nodeType)return!1;var n=t.webkitMatchesSelector||t.mozMatchesSelector||t.oMatchesSelector||t.matchesSelector;if(n)return n.call(t,e);var i,r=t.parentNode,o=!r;return o&&(r=O).appendChild(t),i=~S.qsa(r,e).indexOf(t),o&&O.removeChild(t),i},C=function(t){return t.replace(/-+(.)?/g,function(t,e){return e?e.toUpperCase():""})},N=function(t){return s.call(t,function(e,n){return t.indexOf(e)==n})},S.fragment=function(e,i,r){var s,u,f;return h.test(e)&&(s=n(a.createElement(RegExp.$1))),s||(e.replace&&(e=e.replace(p,"<$1></$2>")),i===t&&(i=l.test(e)&&RegExp.$1),i in b||(i="*"),f=b[i],f.innerHTML=""+e,s=n.each(o.call(f.childNodes),function(){f.removeChild(this)})),R(r)&&(u=n(s),n.each(r,function(t,e){g.indexOf(t)>-1?u[t](e):u.attr(t,e)})),s},S.Z=function(t,e){return t=t||[],t.__proto__=n.fn,t.selector=e||"",t},S.isZ=function(t){return t instanceof S.Z},S.init=function(e,i){var r;if(!e)return S.Z();if("string"==typeof e)if(e=e.trim(),"<"==e[0]&&l.test(e))r=S.fragment(e,RegExp.$1,i),e=null;else{if(i!==t)return n(i).find(e);r=S.qsa(a,e)}else{if(Z(e))return n(a).ready(e);if(S.isZ(e))return e;if(A(e))r=k(e);else if(D(e))r=[e],e=null;else if(l.test(e))r=S.fragment(e.trim(),RegExp.$1,i),e=null;else{if(i!==t)return n(i).find(e);r=S.qsa(a,e)}}return S.Z(r,e)},n=function(t,e){return S.init(t,e)},n.extend=function(t){var e,n=o.call(arguments,1);return"boolean"==typeof t&&(e=t,t=n.shift()),n.forEach(function(n){U(t,n,e)}),t},S.qsa=function(t,e){var n,i="#"==e[0],r=!i&&"."==e[0],s=i||r?e.slice(1):e,a=E.test(s);return _(t)&&a&&i?(n=t.getElementById(s))?[n]:[]:1!==t.nodeType&&9!==t.nodeType?[]:o.call(a&&!i?r?t.getElementsByClassName(s):t.getElementsByTagName(e):t.querySelectorAll(e))},n.contains=function(t,e){return t!==e&&t.contains(e)},n.type=L,n.isFunction=Z,n.isWindow=$,n.isArray=A,n.isPlainObject=R,n.isEmptyObject=function(t){var e;for(e in t)return!1;return!0},n.inArray=function(t,e,n){return r.indexOf.call(e,t,n)},n.camelCase=C,n.trim=function(t){return null==t?"":String.prototype.trim.call(t)},n.uuid=0,n.support={},n.expr={},n.map=function(t,e){var n,r,o,i=[];if(M(t))for(r=0;r<t.length;r++)n=e(t[r],r),null!=n&&i.push(n);else for(o in t)n=e(t[o],o),null!=n&&i.push(n);return z(i)},n.each=function(t,e){var n,i;if(M(t)){for(n=0;n<t.length;n++)if(e.call(t[n],n,t[n])===!1)return t}else for(i in t)if(e.call(t[i],i,t[i])===!1)return t;return t},n.grep=function(t,e){return s.call(t,e)},window.JSON&&(n.parseJSON=JSON.parse),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(t,e){j["[object "+e+"]"]=e.toLowerCase()}),n.fn={forEach:r.forEach,reduce:r.reduce,push:r.push,sort:r.sort,indexOf:r.indexOf,concat:r.concat,map:function(t){return n(n.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return n(o.apply(this,arguments))},ready:function(t){return w.test(a.readyState)&&a.body?t(n):a.addEventListener("DOMContentLoaded",function(){t(n)},!1),this},get:function(e){return e===t?o.call(this):this[e>=0?e:e+this.length]},toArray:function(){return this.get()},size:function(){return this.length},remove:function(){return this.each(function(){null!=this.parentNode&&this.parentNode.removeChild(this)})},each:function(t){return r.every.call(this,function(e,n){return t.call(e,n,e)!==!1}),this},filter:function(t){return Z(t)?this.not(this.not(t)):n(s.call(this,function(e){return S.matches(e,t)}))},add:function(t,e){return n(N(this.concat(n(t,e))))},is:function(t){return this.length>0&&S.matches(this[0],t)},not:function(e){var i=[];if(Z(e)&&e.call!==t)this.each(function(t){e.call(this,t)||i.push(this)});else{var r="string"==typeof e?this.filter(e):M(e)&&Z(e.item)?o.call(e):n(e);this.forEach(function(t){r.indexOf(t)<0&&i.push(t)})}return n(i)},has:function(t){return this.filter(function(){return D(t)?n.contains(this,t):n(this).find(t).size()})},eq:function(t){return-1===t?this.slice(t):this.slice(t,+t+1)},first:function(){var t=this[0];return t&&!D(t)?t:n(t)},last:function(){var t=this[this.length-1];return t&&!D(t)?t:n(t)},find:function(t){var e,i=this;return e="object"==typeof t?n(t).filter(function(){var t=this;return r.some.call(i,function(e){return n.contains(e,t)})}):1==this.length?n(S.qsa(this[0],t)):this.map(function(){return S.qsa(this,t)})},closest:function(t,e){var i=this[0],r=!1;for("object"==typeof t&&(r=n(t));i&&!(r?r.indexOf(i)>=0:S.matches(i,t));)i=i!==e&&!_(i)&&i.parentNode;return n(i)},parents:function(t){for(var e=[],i=this;i.length>0;)i=n.map(i,function(t){return(t=t.parentNode)&&!_(t)&&e.indexOf(t)<0?(e.push(t),t):void 0});return B(e,t)},parent:function(t){return B(N(this.pluck("parentNode")),t)},children:function(t){return B(this.map(function(){return V(this)}),t)},contents:function(){return this.map(function(){return o.call(this.childNodes)})},siblings:function(t){return B(this.map(function(t,e){return s.call(V(e.parentNode),function(t){return t!==e})}),t)},empty:function(){return this.each(function(){this.innerHTML=""})},pluck:function(t){return n.map(this,function(e){return e[t]})},show:function(){return this.each(function(){"none"==this.style.display&&(this.style.display=""),"none"==getComputedStyle(this,"").getPropertyValue("display")&&(this.style.display=I(this.nodeName))})},replaceWith:function(t){return this.before(t).remove()},wrap:function(t){var e=Z(t);if(this[0]&&!e)var i=n(t).get(0),r=i.parentNode||this.length>1;return this.each(function(o){n(this).wrapAll(e?t.call(this,o):r?i.cloneNode(!0):i)})},wrapAll:function(t){if(this[0]){n(this[0]).before(t=n(t));for(var e;(e=t.children()).length;)t=e.first();n(t).append(this)}return this},wrapInner:function(t){var e=Z(t);return this.each(function(i){var r=n(this),o=r.contents(),s=e?t.call(this,i):t;o.length?o.wrapAll(s):r.append(s)})},unwrap:function(){return this.parent().each(function(){n(this).replaceWith(n(this).children())}),this},clone:function(){return this.map(function(){return this.cloneNode(!0)})},hide:function(){return this.css("display","none")},toggle:function(e){return this.each(function(){var i=n(this);(e===t?"none"==i.css("display"):e)?i.show():i.hide()})},prev:function(t){return n(this.pluck("previousElementSibling")).filter(t||"*")},next:function(t){return n(this.pluck("nextElementSibling")).filter(t||"*")},html:function(t){return 0===arguments.length?this.length>0?this[0].innerHTML:null:this.each(function(e){var i=this.innerHTML;n(this).empty().append(J(this,t,e,i))})},text:function(e){return 0===arguments.length?this.length>0?this[0].textContent:null:this.each(function(){this.textContent=e===t?"":""+e})},attr:function(n,i){var r;return"string"==typeof n&&i===t?0==this.length||1!==this[0].nodeType?t:"value"==n&&"INPUT"==this[0].nodeName?this.val():!(r=this[0].getAttribute(n))&&n in this[0]?this[0][n]:r:this.each(function(t){if(1===this.nodeType)if(D(n))for(e in n)X(this,e,n[e]);else X(this,n,J(this,i,t,this.getAttribute(n)))})},removeAttr:function(t){return this.each(function(){1===this.nodeType&&X(this,t)})},prop:function(e,n){return e=P[e]||e,n===t?this[0]&&this[0][e]:this.each(function(t){this[e]=J(this,n,t,this[e])})},data:function(e,n){var i=this.attr("data-"+e.replace(m,"-$1").toLowerCase(),n);return null!==i?Y(i):t},val:function(t){return 0===arguments.length?this[0]&&(this[0].multiple?n(this[0]).find("option").filter(function(){return this.selected}).pluck("value"):this[0].value):this.each(function(e){this.value=J(this,t,e,this.value)})},offset:function(t){if(t)return this.each(function(e){var i=n(this),r=J(this,t,e,i.offset()),o=i.offsetParent().offset(),s={top:r.top-o.top,left:r.left-o.left};"static"==i.css("position")&&(s.position="relative"),i.css(s)});if(0==this.length)return null;var e=this[0].getBoundingClientRect();return{left:e.left+window.pageXOffset,top:e.top+window.pageYOffset,width:Math.round(e.width),height:Math.round(e.height)}},css:function(t,i){if(arguments.length<2){var r=this[0],o=getComputedStyle(r,"");if(!r)return;if("string"==typeof t)return r.style[C(t)]||o.getPropertyValue(t);if(A(t)){var s={};return n.each(A(t)?t:[t],function(t,e){s[e]=r.style[C(e)]||o.getPropertyValue(e)}),s}}var a="";if("string"==L(t))i||0===i?a=F(t)+":"+H(t,i):this.each(function(){this.style.removeProperty(F(t))});else for(e in t)t[e]||0===t[e]?a+=F(e)+":"+H(e,t[e])+";":this.each(function(){this.style.removeProperty(F(e))});return this.each(function(){this.style.cssText+=";"+a})},index:function(t){return t?this.indexOf(n(t)[0]):this.parent().children().indexOf(this[0])},hasClass:function(t){return t?r.some.call(this,function(t){return this.test(W(t))},q(t)):!1},addClass:function(t){return t?this.each(function(e){i=[];var r=W(this),o=J(this,t,e,r);o.split(/\s+/g).forEach(function(t){n(this).hasClass(t)||i.push(t)},this),i.length&&W(this,r+(r?" ":"")+i.join(" "))}):this},removeClass:function(e){return this.each(function(n){return e===t?W(this,""):(i=W(this),J(this,e,n,i).split(/\s+/g).forEach(function(t){i=i.replace(q(t)," ")}),void W(this,i.trim()))})},toggleClass:function(e,i){return e?this.each(function(r){var o=n(this),s=J(this,e,r,W(this));s.split(/\s+/g).forEach(function(e){(i===t?!o.hasClass(e):i)?o.addClass(e):o.removeClass(e)})}):this},scrollTop:function(e){if(this.length){var n="scrollTop"in this[0];return e===t?n?this[0].scrollTop:this[0].pageYOffset:this.each(n?function(){this.scrollTop=e}:function(){this.scrollTo(this.scrollX,e)})}},scrollLeft:function(e){if(this.length){var n="scrollLeft"in this[0];return e===t?n?this[0].scrollLeft:this[0].pageXOffset:this.each(n?function(){this.scrollLeft=e}:function(){this.scrollTo(e,this.scrollY)})}},position:function(){if(this.length){var t=this[0],e=this.offsetParent(),i=this.offset(),r=d.test(e[0].nodeName)?{top:0,left:0}:e.offset();return i.top-=parseFloat(n(t).css("margin-top"))||0,i.left-=parseFloat(n(t).css("margin-left"))||0,r.top+=parseFloat(n(e[0]).css("border-top-width"))||0,r.left+=parseFloat(n(e[0]).css("border-left-width"))||0,{top:i.top-r.top,left:i.left-r.left}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent||a.body;t&&!d.test(t.nodeName)&&"static"==n(t).css("position");)t=t.offsetParent;return t})}},n.fn.detach=n.fn.remove,["width","height"].forEach(function(e){var i=e.replace(/./,function(t){return t[0].toUpperCase()});n.fn[e]=function(r){var o,s=this[0];return r===t?$(s)?s["inner"+i]:_(s)?s.documentElement["scroll"+i]:(o=this.offset())&&o[e]:this.each(function(t){s=n(this),s.css(e,J(this,r,t,s[e]()))})}}),v.forEach(function(t,e){var i=e%2;n.fn[t]=function(){var t,o,r=n.map(arguments,function(e){return t=L(e),"object"==t||"array"==t||null==e?e:S.fragment(e)}),s=this.length>1;return r.length<1?this:this.each(function(t,a){o=i?a:a.parentNode,a=0==e?a.nextSibling:1==e?a.firstChild:2==e?a:null,r.forEach(function(t){if(s)t=t.cloneNode(!0);else if(!o)return n(t).remove();G(o.insertBefore(t,a),function(t){null==t.nodeName||"SCRIPT"!==t.nodeName.toUpperCase()||t.type&&"text/javascript"!==t.type||t.src||window.eval.call(window,t.innerHTML)})})})},n.fn[i?t+"To":"insert"+(e?"Before":"After")]=function(e){return n(e)[t](this),this}}),S.Z.prototype=n.fn,S.uniq=N,S.deserializeValue=Y,n.zepto=S,n}();window.Zepto=Zepto,void 0===window.$&&(window.$=Zepto),function(t){function l(t){return t._zid||(t._zid=e++)}function h(t,e,n,i){if(e=p(e),e.ns)var r=d(e.ns);return(s[l(t)]||[]).filter(function(t){return!(!t||e.e&&t.e!=e.e||e.ns&&!r.test(t.ns)||n&&l(t.fn)!==l(n)||i&&t.sel!=i)})}function p(t){var e=(""+t).split(".");return{e:e[0],ns:e.slice(1).sort().join(" ")}}function d(t){return new RegExp("(?:^| )"+t.replace(" "," .* ?")+"(?: |$)")}function m(t,e){return t.del&&!u&&t.e in f||!!e}function g(t){return c[t]||u&&f[t]||t}function v(e,i,r,o,a,u,f){var h=l(e),d=s[h]||(s[h]=[]);i.split(/\s/).forEach(function(i){if("ready"==i)return t(document).ready(r);var s=p(i);s.fn=r,s.sel=a,s.e in c&&(r=function(e){var n=e.relatedTarget;return!n||n!==this&&!t.contains(this,n)?s.fn.apply(this,arguments):void 0}),s.del=u;var l=u||r;s.proxy=function(t){if(t=j(t),!t.isImmediatePropagationStopped()){t.data=o;var i=l.apply(e,t._args==n?[t]:[t].concat(t._args));return i===!1&&(t.preventDefault(),t.stopPropagation()),i}},s.i=d.length,d.push(s),"addEventListener"in e&&e.addEventListener(g(s.e),s.proxy,m(s,f))})}function y(t,e,n,i,r){var o=l(t);(e||"").split(/\s/).forEach(function(e){h(t,e,n,i).forEach(function(e){delete s[o][e.i],"removeEventListener"in t&&t.removeEventListener(g(e.e),e.proxy,m(e,r))})})}function j(e,i){return(i||!e.isDefaultPrevented)&&(i||(i=e),t.each(E,function(t,n){var r=i[t];e[t]=function(){return this[n]=x,r&&r.apply(i,arguments)},e[n]=b}),(i.defaultPrevented!==n?i.defaultPrevented:"returnValue"in i?i.returnValue===!1:i.getPreventDefault&&i.getPreventDefault())&&(e.isDefaultPrevented=x)),e}function T(t){var e,i={originalEvent:t};for(e in t)w.test(e)||t[e]===n||(i[e]=t[e]);return j(i,t)}var n,e=1,i=Array.prototype.slice,r=t.isFunction,o=function(t){return"string"==typeof t},s={},a={},u="onfocusin"in window,f={focus:"focusin",blur:"focusout"},c={mouseenter:"mouseover",mouseleave:"mouseout"};a.click=a.mousedown=a.mouseup=a.mousemove="MouseEvents",t.event={add:v,remove:y},t.proxy=function(e,n){if(r(e)){var i=function(){return e.apply(n,arguments)};return i._zid=l(e),i}if(o(n))return t.proxy(e[n],e);throw new TypeError("expected function")},t.fn.bind=function(t,e,n){return this.on(t,e,n)},t.fn.unbind=function(t,e){return this.off(t,e)},t.fn.one=function(t,e,n,i){return this.on(t,e,n,i,1)};var x=function(){return!0},b=function(){return!1},w=/^([A-Z]|returnValue$|layer[XY]$)/,E={preventDefault:"isDefaultPrevented",stopImmediatePropagation:"isImmediatePropagationStopped",stopPropagation:"isPropagationStopped"};t.fn.delegate=function(t,e,n){return this.on(e,t,n)},t.fn.undelegate=function(t,e,n){return this.off(e,t,n)},t.fn.live=function(e,n){return t(document.body).delegate(this.selector,e,n),this},t.fn.die=function(e,n){return t(document.body).undelegate(this.selector,e,n),this},t.fn.on=function(e,s,a,u,f){var c,l,h=this;return e&&!o(e)?(t.each(e,function(t,e){h.on(t,s,a,e,f)}),h):(o(s)||r(u)||u===!1||(u=a,a=s,s=n),(r(a)||a===!1)&&(u=a,a=n),u===!1&&(u=b),h.each(function(n,r){f&&(c=function(t){return y(r,t.type,u),u.apply(this,arguments)}),s&&(l=function(e){var n,o=t(e.target).closest(s,r).get(0);return o&&o!==r?(n=t.extend(T(e),{currentTarget:o,liveFired:r}),(c||u).apply(o,[n].concat(i.call(arguments,1)))):void 0}),v(r,e,u,a,s,l||c)}))},t.fn.off=function(e,i,s){var a=this;return e&&!o(e)?(t.each(e,function(t,e){a.off(t,i,e)}),a):(o(i)||r(s)||s===!1||(s=i,i=n),s===!1&&(s=b),a.each(function(){y(this,e,s,i)}))},t.fn.trigger=function(e,n){return e=o(e)||t.isPlainObject(e)?t.Event(e):j(e),e._args=n,this.each(function(){"dispatchEvent"in this?this.dispatchEvent(e):t(this).triggerHandler(e,n)})},t.fn.triggerHandler=function(e,n){var i,r;return this.each(function(s,a){i=T(o(e)?t.Event(e):e),i._args=n,i.target=a,t.each(h(a,e.type||e),function(t,e){return r=e.proxy(i),i.isImmediatePropagationStopped()?!1:void 0})}),r},"focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error".split(" ").forEach(function(e){t.fn[e]=function(t){return t?this.bind(e,t):this.trigger(e)}}),["focus","blur"].forEach(function(e){t.fn[e]=function(t){return t?this.bind(e,t):this.each(function(){try{this[e]()}catch(t){}}),this}}),t.Event=function(t,e){o(t)||(e=t,t=e.type);var n=document.createEvent(a[t]||"Events"),i=!0;if(e)for(var r in e)"bubbles"==r?i=!!e[r]:n[r]=e[r];return n.initEvent(t,i,!0),j(n)}}(Zepto),function(t){function l(e,n,i){var r=t.Event(n);return t(e).trigger(r,i),!r.isDefaultPrevented()}function h(t,e,i,r){return t.global?l(e||n,i,r):void 0}function p(e){e.global&&0===t.active++&&h(e,null,"ajaxStart")}function d(e){e.global&&!--t.active&&h(e,null,"ajaxStop")}function m(t,e){var n=e.context;return e.beforeSend.call(n,t,e)===!1||h(e,n,"ajaxBeforeSend",[t,e])===!1?!1:void h(e,n,"ajaxSend",[t,e])}function g(t,e,n,i){var r=n.context,o="success";n.success.call(r,t,o,e),i&&i.resolveWith(r,[t,o,e]),h(n,r,"ajaxSuccess",[e,n,t]),y(o,e,n)}function v(t,e,n,i,r){var o=i.context;i.error.call(o,n,e,t),r&&r.rejectWith(o,[n,e,t]),h(i,o,"ajaxError",[n,i,t||e]),y(e,n,i)}function y(t,e,n){var i=n.context;n.complete.call(i,e,t),h(n,i,"ajaxComplete",[e,n]),d(n)}function x(){}function b(t){return t&&(t=t.split(";",2)[0]),t&&(t==f?"html":t==u?"json":s.test(t)?"script":a.test(t)&&"xml")||"text"}function w(t,e){return""==e?t:(t+"&"+e).replace(/[&?]{1,2}/,"?")}function E(e){e.processData&&e.data&&"string"!=t.type(e.data)&&(e.data=t.param(e.data,e.traditional)),!e.data||e.type&&"GET"!=e.type.toUpperCase()||(e.url=w(e.url,e.data),e.data=void 0)}function j(e,n,i,r){return t.isFunction(n)&&(r=i,i=n,n=void 0),t.isFunction(i)||(r=i,i=void 0),{url:e,data:n,success:i,dataType:r}}function S(e,n,i,r){var o,s=t.isArray(n),a=t.isPlainObject(n);t.each(n,function(n,u){o=t.type(u),r&&(n=i?r:r+"["+(a||"object"==o||"array"==o?n:"")+"]"),!r&&s?e.add(u.name,u.value):"array"==o||!i&&"object"==o?S(e,u,i,n):e.add(n,u)})}var i,r,e=0,n=window.document,o=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,s=/^(?:text|application)\/javascript/i,a=/^(?:text|application)\/xml/i,u="application/json",f="text/html",c=/^\s*$/;t.active=0,t.ajaxJSONP=function(i,r){if(!("type"in i))return t.ajax(i);var f,h,o=i.jsonpCallback,s=(t.isFunction(o)?o():o)||"jsonp"+ ++e,a=n.createElement("script"),u=window[s],c=function(e){t(a).triggerHandler("error",e||"abort")},l={abort:c};return r&&r.promise(l),t(a).on("load error",function(e,n){clearTimeout(h),t(a).off().remove(),"error"!=e.type&&f?g(f[0],l,i,r):v(null,n||"error",l,i,r),window[s]=u,f&&t.isFunction(u)&&u(f[0]),u=f=void 0}),m(l,i)===!1?(c("abort"),l):(window[s]=function(){f=arguments},a.src=i.url.replace(/\?(.+)=\?/,"?$1="+s),n.head.appendChild(a),i.timeout>0&&(h=setTimeout(function(){c("timeout")},i.timeout)),l)},t.ajaxSettings={type:"GET",beforeSend:x,success:x,error:x,complete:x,context:null,global:!0,xhr:function(){return new window.XMLHttpRequest},accepts:{script:"text/javascript, application/javascript, application/x-javascript",json:u,xml:"application/xml, text/xml",html:f,text:"text/plain"},crossDomain:!1,timeout:0,processData:!0,cache:!0},t.ajax=function(e){var n=t.extend({},e||{}),o=t.Deferred&&t.Deferred();for(i in t.ajaxSettings)void 0===n[i]&&(n[i]=t.ajaxSettings[i]);p(n),n.crossDomain||(n.crossDomain=/^([\w-]+:)?\/\/([^\/]+)/.test(n.url)&&RegExp.$2!=window.location.host),n.url||(n.url=window.location.toString()),E(n),n.cache===!1&&(n.url=w(n.url,"_="+Date.now()));var s=n.dataType,a=/\?.+=\?/.test(n.url);if("jsonp"==s||a)return a||(n.url=w(n.url,n.jsonp?n.jsonp+"=?":n.jsonp===!1?"":"callback=?")),t.ajaxJSONP(n,o);var j,u=n.accepts[s],f={},l=function(t,e){f[t.toLowerCase()]=[t,e]},h=/^([\w-]+:)\/\//.test(n.url)?RegExp.$1:window.location.protocol,d=n.xhr(),y=d.setRequestHeader;if(o&&o.promise(d),n.crossDomain||l("X-Requested-With","XMLHttpRequest"),l("Accept",u||"*/*"),(u=n.mimeType||u)&&(u.indexOf(",")>-1&&(u=u.split(",",2)[0]),d.overrideMimeType&&d.overrideMimeType(u)),(n.contentType||n.contentType!==!1&&n.data&&"GET"!=n.type.toUpperCase())&&l("Content-Type",n.contentType||"application/x-www-form-urlencoded"),n.headers)for(r in n.headers)l(r,n.headers[r]);if(d.setRequestHeader=l,d.onreadystatechange=function(){if(4==d.readyState){d.onreadystatechange=x,clearTimeout(j);var e,i=!1;if(d.status>=200&&d.status<300||304==d.status||0==d.status&&"file:"==h){s=s||b(n.mimeType||d.getResponseHeader("content-type")),e=d.responseText;try{"script"==s?(1,eval)(e):"xml"==s?e=d.responseXML:"json"==s&&(e=c.test(e)?null:t.parseJSON(e))}catch(r){i=r}i?v(i,"parsererror",d,n,o):g(e,d,n,o)}else v(d.statusText||null,d.status?"error":"abort",d,n,o)}},m(d,n)===!1)return d.abort(),v(null,"abort",d,n,o),d;if(n.xhrFields)for(r in n.xhrFields)d[r]=n.xhrFields[r];var T="async"in n?n.async:!0;d.open(n.type,n.url,T,n.username,n.password);for(r in f)y.apply(d,f[r]);return n.timeout>0&&(j=setTimeout(function(){d.onreadystatechange=x,d.abort(),v(null,"timeout",d,n,o)},n.timeout)),d.send(n.data?n.data:null),d},t.get=function(){return t.ajax(j.apply(null,arguments))},t.post=function(){var e=j.apply(null,arguments);return e.type="POST",t.ajax(e)},t.getJSON=function(){var e=j.apply(null,arguments);return e.dataType="json",t.ajax(e)},t.fn.load=function(e,n,i){if(!this.length)return this;var a,r=this,s=e.split(/\s/),u=j(e,n,i),f=u.success;return s.length>1&&(u.url=s[0],a=s[1]),u.success=function(e){r.html(a?t("<div>").html(e.replace(o,"")).find(a):e),f&&f.apply(r,arguments)},t.ajax(u),this};var T=encodeURIComponent;t.param=function(t,e){var n=[];return n.add=function(t,e){this.push(T(t)+"="+T(e))},S(n,t,e),n.join("&").replace(/%20/g,"+")}}(Zepto),function(t){t.fn.serializeArray=function(){var n,e=[];return t([].slice.call(this.get(0).elements)).each(function(){n=t(this);var i=n.attr("type");"fieldset"!=this.nodeName.toLowerCase()&&!this.disabled&&"submit"!=i&&"reset"!=i&&"button"!=i&&("radio"!=i&&"checkbox"!=i||this.checked)&&e.push({name:n.attr("name"),value:n.val()})}),e},t.fn.serialize=function(){var t=[];return this.serializeArray().forEach(function(e){t.push(encodeURIComponent(e.name)+"="+encodeURIComponent(e.value))}),t.join("&")},t.fn.submit=function(e){if(e)this.bind("submit",e);else if(this.length){var n=t.Event("submit");this.eq(0).trigger(n),n.isDefaultPrevented()||this.get(0).submit()}return this}}(Zepto),function(t){"__proto__"in{}||t.extend(t.zepto,{Z:function(e,n){return e=e||[],t.extend(e,t.fn),e.selector=n||"",e.__Z=!0,e},isZ:function(e){return"array"===t.type(e)&&"__Z"in e}});try{getComputedStyle(void 0)}catch(e){var n=getComputedStyle;window.getComputedStyle=function(t){try{return n(t)}catch(e){return null}}}}(Zepto);\n
      </script>\n
          <script>/*!\n
       * clipboard.js v1.5.3\n
       * https://zenorocha.github.io/clipboard.js\n
       *\n
       * Licensed MIT © Zeno Rocha\n
       */\n
      !function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.Clipboard=t()}}(function(){var t,e,n;return function t(e,n,r){function o(a,c){if(!n[a]){if(!e[a]){var s="function"==typeof require&&require;if(!c&&s)return s(a,!0);if(i)return i(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var l=n[a]={exports:{}};e[a][0].call(l.exports,function(t){var n=e[a][1][t];return o(n?n:t)},l,l.exports,t,e,n,r)}return n[a].exports}for(var i="function"==typeof require&&require,a=0;a<r.length;a++)o(r[a]);return o}({1:[function(t,e,n){var r=t("matches-selector");e.exports=function(t,e,n){for(var o=n?t:t.parentNode;o&&o!==document;){if(r(o,e))return o;o=o.parentNode}}},{"matches-selector":2}],2:[function(t,e,n){function r(t,e){if(i)return i.call(t,e);for(var n=t.parentNode.querySelectorAll(e),r=0;r<n.length;++r)if(n[r]==t)return!0;return!1}var o=Element.prototype,i=o.matchesSelector||o.webkitMatchesSelector||o.mozMatchesSelector||o.msMatchesSelector||o.oMatchesSelector;e.exports=r},{}],3:[function(t,e,n){function r(t,e,n,r){var i=o.apply(this,arguments);return t.addEventListener(n,i),{destroy:function(){t.removeEventListener(n,i)}}}function o(t,e,n,r){return function(n){var o=i(n.target,e,!0);o&&(Object.defineProperty(n,"target",{value:o}),r.call(t,n))}}var i=t("closest");e.exports=r},{closest:1}],4:[function(t,e,n){n.node=function(t){return void 0!==t&&t instanceof HTMLElement&&1===t.nodeType},n.nodeList=function(t){var e=Object.prototype.toString.call(t);return void 0!==t&&("[object NodeList]"===e||"[object HTMLCollection]"===e)&&"length"in t&&(0===t.length||n.node(t[0]))},n.string=function(t){return"string"==typeof t||t instanceof String},n.function=function(t){var e=Object.prototype.toString.call(t);return"[object Function]"===e}},{}],5:[function(t,e,n){function r(t,e,n){if(!t&&!e&&!n)throw new Error("Missing required arguments");if(!c.string(e))throw new TypeError("Second argument must be a String");if(!c.function(n))throw new TypeError("Third argument must be a Function");if(c.node(t))return o(t,e,n);if(c.nodeList(t))return i(t,e,n);if(c.string(t))return a(t,e,n);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}function o(t,e,n){return t.addEventListener(e,n),{destroy:function(){t.removeEventListener(e,n)}}}function i(t,e,n){return Array.prototype.forEach.call(t,function(t){t.addEventListener(e,n)}),{destroy:function(){Array.prototype.forEach.call(t,function(t){t.removeEventListener(e,n)})}}}function a(t,e,n){return s(document.body,t,e,n)}var c=t("./is"),s=t("delegate");e.exports=r},{"./is":4,delegate:3}],6:[function(t,e,n){function r(t){var e;if("INPUT"===t.nodeName||"TEXTAREA"===t.nodeName)t.select(),e=t.value;else{var n=window.getSelection(),r=document.createRange();r.selectNodeContents(t),n.removeAllRanges(),n.addRange(r),e=n.toString()}return e}e.exports=r},{}],7:[function(t,e,n){function r(){}r.prototype={on:function(t,e,n){var r=this.e||(this.e={});return(r[t]||(r[t]=[])).push({fn:e,ctx:n}),this},once:function(t,e,n){function r(){o.off(t,r),e.apply(n,arguments)}var o=this;return r._=e,this.on(t,r,n)},emit:function(t){var e=[].slice.call(arguments,1),n=((this.e||(this.e={}))[t]||[]).slice(),r=0,o=n.length;for(r;o>r;r++)n[r].fn.apply(n[r].ctx,e);return this},off:function(t,e){var n=this.e||(this.e={}),r=n[t],o=[];if(r&&e)for(var i=0,a=r.length;a>i;i++)r[i].fn!==e&&r[i].fn._!==e&&o.push(r[i]);return o.length?n[t]=o:delete n[t],this}},e.exports=r},{}],8:[function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}n.__esModule=!0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),a=t("select"),c=r(a),s=function(){function t(e){o(this,t),this.resolveOptions(e),this.initSelection()}return t.prototype.resolveOptions=function t(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.action=e.action,this.emitter=e.emitter,this.target=e.target,this.text=e.text,this.trigger=e.trigger,this.selectedText=""},t.prototype.initSelection=function t(){if(this.text&&this.target)throw new Error('Multiple attributes declared, use either "target" or "text"');if(this.text)this.selectFake();else{if(!this.target)throw new Error('Missing required attributes, use either "target" or "text"');this.selectTarget()}},t.prototype.selectFake=function t(){var e=this;this.removeFake(),this.fakeHandler=document.body.addEventListener("click",function(){return e.removeFake()}),this.fakeElem=document.createElement("textarea"),this.fakeElem.style.position="absolute",this.fakeElem.style.left="-9999px",this.fakeElem.style.top=(window.pageYOffset||document.documentElement.scrollTop)+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,document.body.appendChild(this.fakeElem),this.selectedText=c.default(this.fakeElem),this.copyText()},t.prototype.removeFake=function t(){this.fakeHandler&&(document.body.removeEventListener("click"),this.fakeHandler=null),this.fakeElem&&(document.body.removeChild(this.fakeElem),this.fakeElem=null)},t.prototype.selectTarget=function t(){this.selectedText=c.default(this.target),this.copyText()},t.prototype.copyText=function t(){var e=void 0;try{e=document.execCommand(this.action)}catch(n){e=!1}this.handleResult(e)},t.prototype.handleResult=function t(e){e?this.emitter.emit("success",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)}):this.emitter.emit("error",{action:this.action,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})},t.prototype.clearSelection=function t(){this.target&&this.target.blur(),window.getSelection().removeAllRanges()},t.prototype.destroy=function t(){this.removeFake()},i(t,[{key:"action",set:function t(){var e=arguments.length<=0||void 0===arguments[0]?"copy":arguments[0];if(this._action=e,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function t(){return this._action}},{key:"target",set:function t(e){if(void 0!==e){if(!e||"object"!=typeof e||1!==e.nodeType)throw new Error('Invalid "target" value, use a valid Element');this._target=e}},get:function t(){return this._target}}]),t}();n.default=s,e.exports=n.default},{select:6}],9:[function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(t,e){var n="data-clipboard-"+t;if(e.hasAttribute(n))return e.getAttribute(n)}n.__esModule=!0;var c=t("./clipboard-action"),s=r(c),u=t("tiny-emitter"),l=r(u),f=t("good-listener"),d=r(f),h=function(t){function e(n,r){o(this,e),t.call(this),this.resolveOptions(r),this.listenClick(n)}return i(e,t),e.prototype.resolveOptions=function t(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.action="function"==typeof e.action?e.action:this.defaultAction,this.target="function"==typeof e.target?e.target:this.defaultTarget,this.text="function"==typeof e.text?e.text:this.defaultText},e.prototype.listenClick=function t(e){var n=this;this.listener=d.default(e,"click",function(t){return n.onClick(t)})},e.prototype.onClick=function t(e){this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new s.default({action:this.action(e.target),target:this.target(e.target),text:this.text(e.target),trigger:e.target,emitter:this})},e.prototype.defaultAction=function t(e){return a("action",e)},e.prototype.defaultTarget=function t(e){var n=a("target",e);return n?document.querySelector(n):void 0},e.prototype.defaultText=function t(e){return a("text",e)},e.prototype.destroy=function t(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)},e}(l.default);n.default=h,e.exports=n.default},{"./clipboard-action":8,"good-listener":5,"tiny-emitter":7}]},{},[9])(9)});</script>\n
          <script>Zepto(function($) {\n
        var $leftPanel      = $('.left-panel');\n
        var $frameContainer = $('.frames-container');\n
        var $appFramesTab   = $('#application-frames-tab');\n
        var $allFramesTab   = $('#all-frames-tab');\n
        var $container      = $('.details-container');\n
        var $activeLine     = $frameContainer.find('.frame.active');\n
        var $activeFrame    = $container.find('.frame-code.active');\n
        var $ajaxEditors    = $('.editor-link[data-ajax]');\n
        var $header         = $('header');\n
      \n
        $header.on('mouseenter', function () {\n
          if ($header.find('.exception').height() >= 145) {\n
            $header.addClass('header-expand');\n
          }\n
        });\n
        $header.on('mouseleave', function () {\n
          $header.removeClass('header-expand');\n
        });\n
      \n
        /*\n
         * add prettyprint classes to our current active codeblock\n
         * run prettyPrint() to highlight the active code\n
         * scroll to the line when prettyprint is done\n
         * highlight the current line\n
         */\n
        var renderCurrentCodeblock = function(id) {\n
      \n
          // remove previous codeblocks so we only render the active one\n
          $('.code-block').removeClass('prettyprint');\n
      \n
          // pass the id in when we can for speed\n
          if (typeof(id) === 'undefined' || typeof(id) === 'object') {\n
            var id = /frame\-line\-([\d]*)/.exec($activeLine.attr('id'))[1];\n
          }\n
      \n
          $('#frame-code-linenums-' + id).addClass('prettyprint');\n
          $('#frame-code-args-' + id).addClass('prettyprint');\n
      \n
          prettyPrint(highlightCurrentLine);\n
      \n
        }\n
      \n
        /*\n
         * Highlight the active and neighboring lines for the current frame\n
         * Adjust the offset to make sure that line is veritcally centered\n
         */\n
      \n
        var highlightCurrentLine = function() {\n
          var activeLineNumber = +($activeLine.find('.frame-line').text());\n
          var $lines           = $activeFrame.find('.linenums li');\n
          var firstLine        = +($lines.first().val());\n
      \n
          var $offset = $($lines[activeLineNumber - firstLine - 10]);\n
          if ($offset.length > 0) {\n
            $offset[0].scrollIntoView();\n
          }\n
      \n
          $($lines[activeLineNumber - firstLine - 1]).addClass('current');\n
          $($lines[activeLineNumber - firstLine]).addClass('current active');\n
          $($lines[activeLineNumber - firstLine + 1]).addClass('current');\n
      \n
          $container.scrollTop(0);\n
      \n
        }\n
      \n
        /*\n
         * click handler for loading codeblocks\n
         */\n
      \n
        $frameContainer.on('click', '.frame', function() {\n
      \n
          var $this  = $(this);\n
          var id     = /frame\-line\-([\d]*)/.exec($this.attr('id'))[1];\n
          var $codeFrame = $('#frame-code-' + id);\n
      \n
          if ($codeFrame) {\n
      \n
            $activeLine.removeClass('active');\n
            $activeFrame.removeClass('active');\n
      \n
            $this.addClass('active');\n
            $codeFrame.addClass('active');\n
      \n
            $activeLine  = $this;\n
            $activeFrame = $codeFrame;\n
      \n
            renderCurrentCodeblock(id);\n
      \n
          }\n
      \n
        });\n
      \n
        var clipboard = new Clipboard('.clipboard');\n
        var showTooltip = function(elem, msg) {\n
          elem.setAttribute('class', 'clipboard tooltipped tooltipped-s');\n
          elem.setAttribute('aria-label', msg);\n
        };\n
      \n
        clipboard.on('success', function(e) {\n
            e.clearSelection();\n
      \n
            showTooltip(e.trigger, 'Copied!');\n
        });\n
      \n
        clipboard.on('error', function(e) {\n
            showTooltip(e.trigger, fallbackMessage(e.action));\n
        });\n
      \n
        var btn = document.querySelector('.clipboard');\n
      \n
        btn.addEventListener('mouseleave', function(e) {\n
          e.currentTarget.setAttribute('class', 'clipboard');\n
          e.currentTarget.removeAttribute('aria-label');\n
        });\n
      \n
        function fallbackMessage(action) {\n
          var actionMsg = '';\n
          var actionKey = (action === 'cut' ? 'X' : 'C');\n
      \n
          if (/Mac/i.test(navigator.userAgent)) {\n
              actionMsg = 'Press ⌘-' + actionKey + ' to ' + action;\n
          } else {\n
              actionMsg = 'Press Ctrl-' + actionKey + ' to ' + action;\n
          }\n
      \n
          return actionMsg;\n
        }\n
      \n
        function scrollIntoView($node, $parent) {\n
          var nodeOffset = $node.offset();\n
          var nodeTop = nodeOffset.top;\n
          var nodeBottom = nodeTop + nodeOffset.height;\n
          var parentScrollTop = $parent.scrollTop();\n
          var parentHeight = $parent.height();\n
      \n
          if (nodeTop < 0) {\n
            $parent.scrollTop(parentScrollTop + nodeTop);\n
          } else if (nodeBottom > parentHeight) {\n
            $parent.scrollTop(parentScrollTop + nodeBottom - parentHeight);\n
          }\n
        }\n
      \n
        $(document).on('keydown', function(e) {\n
          var applicationFrames = $frameContainer.hasClass('frames-container-application'),\n
              frameClass = applicationFrames ? '.frame.frame-application' : '.frame';\n
      \n
      \t  if(e.ctrlKey || e.which === 74  || e.which === 75) {\n
      \t\t  // CTRL+Arrow-UP/k and Arrow-Down/j support:\n
      \t\t  // 1) select the next/prev element\n
      \t\t  // 2) make sure the newly selected element is within the view-scope\n
      \t\t  // 3) focus the (right) container, so arrow-up/down (without ctrl) scroll the details\n
      \t\t  if (e.which === 38 /* arrow up */ || e.which === 75 /* k */) {\n
      \t\t\t  $activeLine.prev(frameClass).click();\n
      \t\t\t  scrollIntoView($activeLine, $leftPanel);\n
      \t\t\t  $container.focus();\n
      \t\t\t  e.preventDefault();\n
      \t\t  } else if (e.which === 40 /* arrow down */ || e.which === 74 /* j */) {\n
      \t\t\t  $activeLine.next(frameClass).click();\n
      \t\t\t  scrollIntoView($activeLine, $leftPanel);\n
      \t\t\t  $container.focus();\n
      \t\t\t  e.preventDefault();\n
      \t\t  }\n
      \t  } else if (e.which == 78 /* n */) {\n
            if ($appFramesTab.length) {\n
              setActiveFramesTab($('.frames-tab:not(.frames-tab-active)'));\n
            }\n
          }\n
        });\n
      \n
        // Render late enough for highlightCurrentLine to be ready\n
        renderCurrentCodeblock();\n
      \n
        // Avoid to quit the page with some protocol (e.g. IntelliJ Platform REST API)\n
        $ajaxEditors.on('click', function(e){\n
          e.preventDefault();\n
          $.get(this.href);\n
        });\n
      \n
        // Symfony VarDumper: Close the by default expanded objects\n
        $('.sf-dump-expanded')\n
          .removeClass('sf-dump-expanded')\n
          .addClass('sf-dump-compact');\n
        $('.sf-dump-toggle span').html('&#9654;');\n
      \n
        // Make the given frames-tab active\n
        function setActiveFramesTab($tab) {\n
          $tab.addClass('frames-tab-active');\n
      \n
          if ($tab.attr('id') == 'application-frames-tab') {\n
            $frameContainer.addClass('frames-container-application');\n
            $allFramesTab.removeClass('frames-tab-active');\n
          } else {\n
            $frameContainer.removeClass('frames-container-application');\n
            $appFramesTab.removeClass('frames-tab-active');\n
          }\n
        }\n
      \n
        $('a.frames-tab').on('click', function(e) {\n
          e.preventDefault();\n
          setActiveFramesTab($(this));\n
        });\n
      });\n
      </script>\n
        </body>\n
      </html>\n
      """
    +exception: ErrorException {#872
      #message: "Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php) (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)"
      #code: 0
      #file: "/Users/bobbyborisov/code/forum/app/Favoritable.php"
      #line: 32
      -previous: ErrorException {#936
        #message: "Trying to get property of non-object (View: /Users/bobbyborisov/code/forum/resources/views/threads/reply.blade.php)"
        #code: 0
        #file: "/Users/bobbyborisov/code/forum/app/Favoritable.php"
        #line: 32
        -previous: ErrorException {#941
          #message: "Trying to get property of non-object"
          #code: 0
          #file: "/Users/bobbyborisov/code/forum/app/Favoritable.php"
          #line: 32
          #severity: E_NOTICE
          trace: {
            /Users/bobbyborisov/code/forum/app/Favoritable.php:32: {
              : {
              :     return ! ! $this->favorites->where('user_id', auth()->user()->id)->count();
              : }
              arguments: {
                $level: 8
                $message: "Trying to get property of non-object"
                $file: "/Users/bobbyborisov/code/forum/app/Favoritable.php"
                $line: 32
                $context: []
              }
            }
            /Users/bobbyborisov/code/forum/storage/framework/views/13cc63e8bbbef7f0fdac2dc310163e79af23ffbf.php:9: {
              : <div class="gotoend">
              :     <?php if($reply->isFavorited()): ?>
              :         <form method="POST" action="/replies/<?php echo e($reply->id); ?>/favorites">
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43: {
              : try {
              :     include $__path;
              : } catch (Exception $e) {
              arguments: {
                "/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php"
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59: {
              : // which have been rendered for right exception messages to be generated.
              : $results = $this->evaluatePath($compiled, $data);
              : 
              arguments: {
                $__path: "/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php"
                $__data: array:6 [ …6]
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137: {
              : {
              :     return $this->engine->get($this->path, $this->gatherData());
              : }
              arguments: {
                $path: "/Users/bobbyborisov/code/forum/resources/views/threads/show.blade.php"
                $data: array:6 [ …6]
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120: {
              : 
              : $contents = $this->getContents();
              : 
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85: {
              : try {
              :     $contents = $this->renderContents();
              : 
            }
            /Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php:31: {
              : <?php $__currentLoopData = $replies; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $reply): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
              :     <?php echo $__env->make('threads.reply', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>
              : <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43: {
              : try {
              :     include $__path;
              : } catch (Exception $e) {
              arguments: {
                "/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php"
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59: {
              : // which have been rendered for right exception messages to be generated.
              : $results = $this->evaluatePath($compiled, $data);
              : 
              arguments: {
                $__path: "/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php"
                $__data: array:6 [ …6]
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137: {
              : {
              :     return $this->engine->get($this->path, $this->gatherData());
              : }
              arguments: {
                $path: "/Users/bobbyborisov/code/forum/resources/views/threads/show.blade.php"
                $data: array:6 [ …6]
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120: {
              : 
              : $contents = $this->getContents();
              : 
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85: {
              : try {
              :     $contents = $this->renderContents();
              : 
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Http/Response.php:42: {
              : elseif ($content instanceof Renderable) {
              :     $content = $content->render();
              : }
            }
            /Users/bobbyborisov/code/forum/vendor/symfony/http-foundation/Response.php:200: {
              : $this->headers = new ResponseHeaderBag($headers);
              : $this->setContent($content);
              : $this->setStatusCode($status);
              arguments: {
                $content: Illuminate\View\View {#803 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:724: {
              : } elseif (! $response instanceof SymfonyResponse) {
              :     $response = new Response($response);
              : }
              arguments: {
                $content: Illuminate\View\View {#803 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:698: {
              : {
              :     return static::toResponse($request, $response);
              : }
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $response: Illuminate\View\View {#803 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:658: {
              : return $this->prepareResponse(
              :     $request, $route->run()
              : );
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $response: Illuminate\View\View {#803 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30: {
              : try {
              :     return $destination($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php:41: {
              : 
              :     return $next($request);
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php:67: {
              : ) {
              :     return $this->addCookieToResponse($request, $next($request));
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php:49: {
              : 
              :     return $next($request);
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php:63: {
              : 
              : $response = $next($request);
              : 
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php:37: {
              : {
              :     $response = $next($request);
              : 
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php:59: {
              : {
              :     return $this->encrypt($next($this->decrypt($request)));
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102: {
              : 
              :     return $pipeline($this->passable);
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:660: {
              :                         );
              :                     });
              : }
              arguments: {
                $destination: Closure {#765 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:635: {
              : return $this->prepareResponse($request,
              :     $this->runRouteWithinStack($route, $request)
              : );
              arguments: {
                $route: Illuminate\Routing\Route {#145 …}
                $request: Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:601: {
              : {
              :     return $this->runRoute($request, $this->findRoute($request));
              : }
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $route: Illuminate\Routing\Route {#145 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:590: {
              : 
              :     return $this->dispatchToRoute($request);
              : }
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:176: {
              : 
              :     return $this->router->dispatch($request);
              : };
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30: {
              : try {
              :     return $destination($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/barryvdh/laravel-debugbar/src/Middleware/InjectDebugbar.php:58: {
              : if (!$this->debugbar->isEnabled() || $this->inExceptArray($request)) {
              :     return $next($request);
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/fideloper/proxy/src/TrustProxies.php:56: {
              : 
              :     return $next($request);
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30: {
              : 
              :     return $next($request);
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30: {
              : 
              :     return $next($request);
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php:27: {
              : 
              :     return $next($request);
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php:46: {
              : 
              :     return $next($request);
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
              : return method_exists($pipe, $this->method)
              :                 ? $pipe->{$this->method}(...$parameters)
              :                 : $pipe(...$parameters);
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
                $next: Closure {#725 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
              : 
              :     return $callable($passable);
              : } catch (Exception $e) {
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102: {
              : 
              :     return $pipeline($this->passable);
              : }
              arguments: {
                Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:151: {
              :                 ->through($this->app->shouldSkipMiddleware() ? [] : $this->middleware)
              :                 ->then($this->dispatchToRouter());
              : }
              arguments: {
                $destination: Closure {#53 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:116: {
              : 
              :     $response = $this->sendRequestThroughRouter($request);
              : } catch (Exception $e) {
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:324: {
              : $response = $kernel->handle(
              :     $request = Request::createFromBase($symfonyRequest)
              : );
              arguments: {
                $request: Illuminate\Http\Request {#742 …}
              }
            }
            /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:147: {
              : 
              :     return $this->call('GET', $uri, [], [], [], $server);
              : }
              arguments: {
                $method: "GET"
                $uri: "/threads/hic/1"
                $parameters: []
                $cookies: []
                $files: []
                $server: []
              }
            }
            /Users/bobbyborisov/code/forum/tests/Feature/ReadThreadsTest.php:43: {
              : 
              : $response = $this->get($this->thread->path());
              : dd($response);
              arguments: {
                $uri: "/threads/hic/1"
              }
            }
            Tests\Feature\ReadThreadsTest->a_user_is_able_to_read_replies_that_are_associated_with_the_thread(): {}
            phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:1069: {
              : try {
              :     $testResult = $method->invokeArgs($this, $testArguments);
              : } catch (Throwable $_e) {
              arguments: {
                $object: Tests\Feature\ReadThreadsTest {#387 …}
                $args: []
              }
            }
            phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:928: {
              : $this->assertPreConditions();
              : $this->testResult = $this->runTest();
              : $this->verifyMockObjects();
            }
            phar:///usr/local/bin/phpunit/phpunit/Framework/TestResult.php:695: {
              : } else {
              :     $test->runBare();
              : }
            }
            phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:883: {
              : } else {
              :     $result->run($this);
              : }
              arguments: {
                $test: Tests\Feature\ReadThreadsTest {#387 …}
              }
            }
            phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744: {
              : 
              :     $test->run($result);
              : }
              arguments: {
                $result: PHPUnit\Framework\TestResult {#13 …}
              }
            }
            phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744: {
              : 
              :     $test->run($result);
              : }
              arguments: {
                $result: PHPUnit\Framework\TestResult {#13 …}
              }
            }
            phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744: {
              : 
              :     $test->run($result);
              : }
              arguments: {
                $result: PHPUnit\Framework\TestResult {#13 …}
              }
            }
            phar:///usr/local/bin/phpunit/phpunit/TextUI/TestRunner.php:537: {
              : 
              : $suite->run($result);
              : 
              arguments: {
                $result: PHPUnit\Framework\TestResult {#13 …}
              }
            }
            phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:212: {
              : try {
              :     $result = $runner->doRun($suite, $this->arguments, $exit);
              : } catch (Exception $e) {
              arguments: {
                $suite: PHPUnit\Framework\TestSuite {#7 …}
                $arguments: array:53 [ …53]
                $exit: true
              }
            }
            phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:141: {
              : 
              :     return $command->run($_SERVER['argv'], $exit);
              : }
              arguments: {
                $argv: array:2 [ …2]
                $exit: true
              }
            }
            /usr/local/bin/phpunit:551: {
              : 
              :     PHPUnit\TextUI\Command::main();
              : }
            }
          }
        }
        #severity: E_ERROR
        trace: {
          /Users/bobbyborisov/code/forum/app/Favoritable.php:32: {
            : {
            :     return ! ! $this->favorites->where('user_id', auth()->user()->id)->count();
            : }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:45: {
            : } catch (Exception $e) {
            :     $this->handleViewException($e, $obLevel);
            : } catch (Throwable $e) {
            arguments: {
              $e: ErrorException {#941}
              $obLevel: 3
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59: {
            : // which have been rendered for right exception messages to be generated.
            : $results = $this->evaluatePath($compiled, $data);
            : 
            arguments: {
              $__path: "/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php"
              $__data: array:6 [ …6]
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137: {
            : {
            :     return $this->engine->get($this->path, $this->gatherData());
            : }
            arguments: {
              $path: "/Users/bobbyborisov/code/forum/resources/views/threads/show.blade.php"
              $data: array:6 [ …6]
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120: {
            : 
            : $contents = $this->getContents();
            : 
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85: {
            : try {
            :     $contents = $this->renderContents();
            : 
          }
          /Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php:31: {
            : <?php $__currentLoopData = $replies; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $reply): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
            :     <?php echo $__env->make('threads.reply', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>
            : <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:43: {
            : try {
            :     include $__path;
            : } catch (Exception $e) {
            arguments: {
              "/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php"
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59: {
            : // which have been rendered for right exception messages to be generated.
            : $results = $this->evaluatePath($compiled, $data);
            : 
            arguments: {
              $__path: "/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php"
              $__data: array:6 [ …6]
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137: {
            : {
            :     return $this->engine->get($this->path, $this->gatherData());
            : }
            arguments: {
              $path: "/Users/bobbyborisov/code/forum/resources/views/threads/show.blade.php"
              $data: array:6 [ …6]
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120: {
            : 
            : $contents = $this->getContents();
            : 
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85: {
            : try {
            :     $contents = $this->renderContents();
            : 
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Http/Response.php:42: {
            : elseif ($content instanceof Renderable) {
            :     $content = $content->render();
            : }
          }
          /Users/bobbyborisov/code/forum/vendor/symfony/http-foundation/Response.php:200: {
            : $this->headers = new ResponseHeaderBag($headers);
            : $this->setContent($content);
            : $this->setStatusCode($status);
            arguments: {
              $content: Illuminate\View\View {#803 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:724: {
            : } elseif (! $response instanceof SymfonyResponse) {
            :     $response = new Response($response);
            : }
            arguments: {
              $content: Illuminate\View\View {#803 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:698: {
            : {
            :     return static::toResponse($request, $response);
            : }
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $response: Illuminate\View\View {#803 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:658: {
            : return $this->prepareResponse(
            :     $request, $route->run()
            : );
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $response: Illuminate\View\View {#803 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30: {
            : try {
            :     return $destination($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php:41: {
            : 
            :     return $next($request);
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php:67: {
            : ) {
            :     return $this->addCookieToResponse($request, $next($request));
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php:49: {
            : 
            :     return $next($request);
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php:63: {
            : 
            : $response = $next($request);
            : 
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php:37: {
            : {
            :     $response = $next($request);
            : 
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php:59: {
            : {
            :     return $this->encrypt($next($this->decrypt($request)));
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102: {
            : 
            :     return $pipeline($this->passable);
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:660: {
            :                         );
            :                     });
            : }
            arguments: {
              $destination: Closure {#765 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:635: {
            : return $this->prepareResponse($request,
            :     $this->runRouteWithinStack($route, $request)
            : );
            arguments: {
              $route: Illuminate\Routing\Route {#145 …}
              $request: Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:601: {
            : {
            :     return $this->runRoute($request, $this->findRoute($request));
            : }
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $route: Illuminate\Routing\Route {#145 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:590: {
            : 
            :     return $this->dispatchToRoute($request);
            : }
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:176: {
            : 
            :     return $this->router->dispatch($request);
            : };
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30: {
            : try {
            :     return $destination($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/barryvdh/laravel-debugbar/src/Middleware/InjectDebugbar.php:58: {
            : if (!$this->debugbar->isEnabled() || $this->inExceptArray($request)) {
            :     return $next($request);
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/fideloper/proxy/src/TrustProxies.php:56: {
            : 
            :     return $next($request);
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30: {
            : 
            :     return $next($request);
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30: {
            : 
            :     return $next($request);
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php:27: {
            : 
            :     return $next($request);
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php:46: {
            : 
            :     return $next($request);
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
            : return method_exists($pipe, $this->method)
            :                 ? $pipe->{$this->method}(...$parameters)
            :                 : $pipe(...$parameters);
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
              $next: Closure {#725 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
            : 
            :     return $callable($passable);
            : } catch (Exception $e) {
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102: {
            : 
            :     return $pipeline($this->passable);
            : }
            arguments: {
              Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:151: {
            :                 ->through($this->app->shouldSkipMiddleware() ? [] : $this->middleware)
            :                 ->then($this->dispatchToRouter());
            : }
            arguments: {
              $destination: Closure {#53 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:116: {
            : 
            :     $response = $this->sendRequestThroughRouter($request);
            : } catch (Exception $e) {
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:324: {
            : $response = $kernel->handle(
            :     $request = Request::createFromBase($symfonyRequest)
            : );
            arguments: {
              $request: Illuminate\Http\Request {#742 …}
            }
          }
          /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:147: {
            : 
            :     return $this->call('GET', $uri, [], [], [], $server);
            : }
            arguments: {
              $method: "GET"
              $uri: "/threads/hic/1"
              $parameters: []
              $cookies: []
              $files: []
              $server: []
            }
          }
          /Users/bobbyborisov/code/forum/tests/Feature/ReadThreadsTest.php:43: {
            : 
            : $response = $this->get($this->thread->path());
            : dd($response);
            arguments: {
              $uri: "/threads/hic/1"
            }
          }
          Tests\Feature\ReadThreadsTest->a_user_is_able_to_read_replies_that_are_associated_with_the_thread(): {}
          phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:1069: {
            : try {
            :     $testResult = $method->invokeArgs($this, $testArguments);
            : } catch (Throwable $_e) {
            arguments: {
              $object: Tests\Feature\ReadThreadsTest {#387 …}
              $args: []
            }
          }
          phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:928: {
            : $this->assertPreConditions();
            : $this->testResult = $this->runTest();
            : $this->verifyMockObjects();
          }
          phar:///usr/local/bin/phpunit/phpunit/Framework/TestResult.php:695: {
            : } else {
            :     $test->runBare();
            : }
          }
          phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:883: {
            : } else {
            :     $result->run($this);
            : }
            arguments: {
              $test: Tests\Feature\ReadThreadsTest {#387 …}
            }
          }
          phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744: {
            : 
            :     $test->run($result);
            : }
            arguments: {
              $result: PHPUnit\Framework\TestResult {#13 …}
            }
          }
          phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744: {
            : 
            :     $test->run($result);
            : }
            arguments: {
              $result: PHPUnit\Framework\TestResult {#13 …}
            }
          }
          phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744: {
            : 
            :     $test->run($result);
            : }
            arguments: {
              $result: PHPUnit\Framework\TestResult {#13 …}
            }
          }
          phar:///usr/local/bin/phpunit/phpunit/TextUI/TestRunner.php:537: {
            : 
            : $suite->run($result);
            : 
            arguments: {
              $result: PHPUnit\Framework\TestResult {#13 …}
            }
          }
          phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:212: {
            : try {
            :     $result = $runner->doRun($suite, $this->arguments, $exit);
            : } catch (Exception $e) {
            arguments: {
              $suite: PHPUnit\Framework\TestSuite {#7 …}
              $arguments: array:53 [ …53]
              $exit: true
            }
          }
          phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:141: {
            : 
            :     return $command->run($_SERVER['argv'], $exit);
            : }
            arguments: {
              $argv: array:2 [ …2]
              $exit: true
            }
          }
          /usr/local/bin/phpunit:551: {
            : 
            :     PHPUnit\TextUI\Command::main();
            : }
          }
        }
      }
      #severity: E_ERROR
      trace: {
        /Users/bobbyborisov/code/forum/app/Favoritable.php:32: {
          : {
          :     return ! ! $this->favorites->where('user_id', auth()->user()->id)->count();
          : }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/PhpEngine.php:45: {
          : } catch (Exception $e) {
          :     $this->handleViewException($e, $obLevel);
          : } catch (Throwable $e) {
          arguments: {
            $e: ErrorException {#941}
            $obLevel: 3
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Engines/CompilerEngine.php:59: {
          : // which have been rendered for right exception messages to be generated.
          : $results = $this->evaluatePath($compiled, $data);
          : 
          arguments: {
            $__path: "/Users/bobbyborisov/code/forum/storage/framework/views/1196ad017046e28c49972beca0e01e3c1eba8931.php"
            $__data: array:6 [ …6]
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:137: {
          : {
          :     return $this->engine->get($this->path, $this->gatherData());
          : }
          arguments: {
            $path: "/Users/bobbyborisov/code/forum/resources/views/threads/show.blade.php"
            $data: array:6 [ …6]
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:120: {
          : 
          : $contents = $this->getContents();
          : 
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/View.php:85: {
          : try {
          :     $contents = $this->renderContents();
          : 
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Http/Response.php:42: {
          : elseif ($content instanceof Renderable) {
          :     $content = $content->render();
          : }
        }
        /Users/bobbyborisov/code/forum/vendor/symfony/http-foundation/Response.php:200: {
          : $this->headers = new ResponseHeaderBag($headers);
          : $this->setContent($content);
          : $this->setStatusCode($status);
          arguments: {
            $content: Illuminate\View\View {#803 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:724: {
          : } elseif (! $response instanceof SymfonyResponse) {
          :     $response = new Response($response);
          : }
          arguments: {
            $content: Illuminate\View\View {#803 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:698: {
          : {
          :     return static::toResponse($request, $response);
          : }
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $response: Illuminate\View\View {#803 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:658: {
          : return $this->prepareResponse(
          :     $request, $route->run()
          : );
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $response: Illuminate\View\View {#803 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30: {
          : try {
          :     return $destination($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php:41: {
          : 
          :     return $next($request);
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php:67: {
          : ) {
          :     return $this->addCookieToResponse($request, $next($request));
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php:49: {
          : 
          :     return $next($request);
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php:63: {
          : 
          : $response = $next($request);
          : 
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php:37: {
          : {
          :     $response = $next($request);
          : 
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php:59: {
          : {
          :     return $this->encrypt($next($this->decrypt($request)));
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102: {
          : 
          :     return $pipeline($this->passable);
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:660: {
          :                         );
          :                     });
          : }
          arguments: {
            $destination: Closure {#765 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:635: {
          : return $this->prepareResponse($request,
          :     $this->runRouteWithinStack($route, $request)
          : );
          arguments: {
            $route: Illuminate\Routing\Route {#145 …}
            $request: Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:601: {
          : {
          :     return $this->runRoute($request, $this->findRoute($request));
          : }
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $route: Illuminate\Routing\Route {#145 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Router.php:590: {
          : 
          :     return $this->dispatchToRoute($request);
          : }
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:176: {
          : 
          :     return $this->router->dispatch($request);
          : };
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:30: {
          : try {
          :     return $destination($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/barryvdh/laravel-debugbar/src/Middleware/InjectDebugbar.php:58: {
          : if (!$this->debugbar->isEnabled() || $this->inExceptArray($request)) {
          :     return $next($request);
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/fideloper/proxy/src/TrustProxies.php:56: {
          : 
          :     return $next($request);
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30: {
          : 
          :     return $next($request);
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php:30: {
          : 
          :     return $next($request);
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php:27: {
          : 
          :     return $next($request);
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php:46: {
          : 
          :     return $next($request);
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:149: {
          : return method_exists($pipe, $this->method)
          :                 ? $pipe->{$this->method}(...$parameters)
          :                 : $pipe(...$parameters);
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
            $next: Closure {#725 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php:53: {
          : 
          :     return $callable($passable);
          : } catch (Exception $e) {
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php:102: {
          : 
          :     return $pipeline($this->passable);
          : }
          arguments: {
            Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:151: {
          :                 ->through($this->app->shouldSkipMiddleware() ? [] : $this->middleware)
          :                 ->then($this->dispatchToRouter());
          : }
          arguments: {
            $destination: Closure {#53 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php:116: {
          : 
          :     $response = $this->sendRequestThroughRouter($request);
          : } catch (Exception $e) {
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:324: {
          : $response = $kernel->handle(
          :     $request = Request::createFromBase($symfonyRequest)
          : );
          arguments: {
            $request: Illuminate\Http\Request {#742 …}
          }
        }
        /Users/bobbyborisov/code/forum/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php:147: {
          : 
          :     return $this->call('GET', $uri, [], [], [], $server);
          : }
          arguments: {
            $method: "GET"
            $uri: "/threads/hic/1"
            $parameters: []
            $cookies: []
            $files: []
            $server: []
          }
        }
        /Users/bobbyborisov/code/forum/tests/Feature/ReadThreadsTest.php:43: {
          : 
          : $response = $this->get($this->thread->path());
          : dd($response);
          arguments: {
            $uri: "/threads/hic/1"
          }
        }
        Tests\Feature\ReadThreadsTest->a_user_is_able_to_read_replies_that_are_associated_with_the_thread(): {}
        phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:1069: {
          : try {
          :     $testResult = $method->invokeArgs($this, $testArguments);
          : } catch (Throwable $_e) {
          arguments: {
            $object: Tests\Feature\ReadThreadsTest {#387 …}
            $args: []
          }
        }
        phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:928: {
          : $this->assertPreConditions();
          : $this->testResult = $this->runTest();
          : $this->verifyMockObjects();
        }
        phar:///usr/local/bin/phpunit/phpunit/Framework/TestResult.php:695: {
          : } else {
          :     $test->runBare();
          : }
        }
        phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php:883: {
          : } else {
          :     $result->run($this);
          : }
          arguments: {
            $test: Tests\Feature\ReadThreadsTest {#387 …}
          }
        }
        phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744: {
          : 
          :     $test->run($result);
          : }
          arguments: {
            $result: PHPUnit\Framework\TestResult {#13 …}
          }
        }
        phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744: {
          : 
          :     $test->run($result);
          : }
          arguments: {
            $result: PHPUnit\Framework\TestResult {#13 …}
          }
        }
        phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php:744: {
          : 
          :     $test->run($result);
          : }
          arguments: {
            $result: PHPUnit\Framework\TestResult {#13 …}
          }
        }
        phar:///usr/local/bin/phpunit/phpunit/TextUI/TestRunner.php:537: {
          : 
          : $suite->run($result);
          : 
          arguments: {
            $result: PHPUnit\Framework\TestResult {#13 …}
          }
        }
        phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:212: {
          : try {
          :     $result = $runner->doRun($suite, $this->arguments, $exit);
          : } catch (Exception $e) {
          arguments: {
            $suite: PHPUnit\Framework\TestSuite {#7 …}
            $arguments: array:53 [ …53]
            $exit: true
          }
        }
        phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php:141: {
          : 
          :     return $command->run($_SERVER['argv'], $exit);
          : }
          arguments: {
            $argv: array:2 [ …2]
            $exit: true
          }
        }
        /usr/local/bin/phpunit:551: {
          : 
          :     PHPUnit\TextUI\Command::main();
          : }
        }
      }
    }
  }
}
